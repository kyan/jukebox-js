// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dashboard render just the dashboard without redux renders as expected 1`] = `
<DimmerDimmable
  blurring={true}
  className="jukebox-dashboard"
  dimmed={false}
>
  <Connect(Component) />
  <VolumeButtons
    onVolumeChange={[Function]}
    volume={25}
  />
  <Controls
    onNext={[Function]}
    onPause={[Function]}
    onPlay={[Function]}
    onPrevious={[Function]}
  />
  <Divider />
  <Grid>
    <GridColumn
      width={6}
    >
      <DragDropContextProvider
        backend={[Function]}
      >
        <DropTarget(UrlDropArea)
          accepts={
            Array [
              "__NATIVE_URL__",
            ]
          }
          onDrop={[Function]}
        >
          <Header
            size="small"
          >
            Currently Playing
          </Header>
          <Connect(Component) />
        </DropTarget(UrlDropArea)>
      </DragDropContextProvider>
    </GridColumn>
    <GridColumn
      width={10}
    >
      <Header
        size="small"
      >
        Playlist 
        <ClearPlaylist
          onClear={[Function]}
        />
      </Header>
      <Tracklist
        currentTrack={Object {}}
        images={Object {}}
        onRemoveTrack={[Function]}
        tracks={Array []}
      />
    </GridColumn>
  </Grid>
  <ToastContainer
    autoClose={5000}
    bodyClassName=""
    className={null}
    closeButton={
      <DefaultCloseButton
        ariaLabel="close"
      />
    }
    closeOnClick={true}
    hideProgressBar={false}
    newestOnTop={false}
    pauseOnHover={true}
    position="top-right"
    progressClassName=""
    style={null}
    toastClassName=""
    transition={[Function]}
  />
</DimmerDimmable>
`;

exports[`Dashboard render the connected app renders as expected 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(DragDropContext(Dashboard))>
    <DragDropContext(Dashboard)
      dispatch={[Function]}
      jukebox={
        Object {
          "currentVolume": 25,
          "online": true,
        }
      }
      tracklist={Array []}
      tracklistImages={Object {}}
    >
      <Dashboard
        dispatch={[Function]}
        jukebox={
          Object {
            "currentVolume": 25,
            "online": true,
          }
        }
        tracklist={Array []}
        tracklistImages={Object {}}
      >
        <DimmerDimmable
          blurring={true}
          className="jukebox-dashboard"
          dimmed={false}
        >
          <div
            className="blurring dimmable jukebox-dashboard"
          >
            <Connect(Component)>
              <Component
                dispatch={[Function]}
                settings={
                  Object {
                    "open": false,
                  }
                }
              >
                <Button
                  as="button"
                  className="jb-settings-toggle"
                  floated="right"
                  icon="user"
                  onClick={[Function]}
                >
                  <button
                    className="ui icon right floated button jb-settings-toggle"
                    onClick={[Function]}
                    role="button"
                  >
                    <Icon
                      as="i"
                      key="user"
                      name="user"
                    >
                      <i
                        aria-hidden="true"
                        className="user icon"
                      />
                    </Icon>
                  </button>
                </Button>
                <Modal
                  closeIcon={true}
                  closeOnDimmerClick={true}
                  closeOnDocumentClick={false}
                  dimmer="blurring"
                  eventPool="Modal"
                  onClose={[Function]}
                  open={false}
                  size="small"
                >
                  <Portal
                    className="ui page modals dimmer transition visible active"
                    closeOnDocumentClick={false}
                    closeOnEscape={true}
                    closeOnRootNodeClick={true}
                    eventPool="Modal"
                    mountNode={<body />}
                    onClose={[Function]}
                    onMount={[Function]}
                    onOpen={[Function]}
                    onUnmount={[Function]}
                    open={false}
                    openOnTriggerClick={true}
                  />
                </Modal>
              </Component>
            </Connect(Component)>
            <VolumeButtons
              onVolumeChange={[Function]}
              volume={25}
            >
              <ButtonGroup
                floated="right"
              >
                <div
                  className="ui right floated buttons"
                >
                  <Button
                    as="button"
                    className="jb-volume-down"
                    onClick={[Function]}
                  >
                    <button
                      className="ui button jb-volume-down"
                      onClick={[Function]}
                      role="button"
                    >
                      <Icon
                        as="i"
                        name="volume down"
                      >
                        <i
                          aria-hidden="true"
                          className="volume down icon"
                        />
                      </Icon>
                    </button>
                  </Button>
                  <ButtonOr
                    text={25}
                  >
                    <div
                      className="or"
                      data-text={25}
                    />
                  </ButtonOr>
                  <Button
                    as="button"
                    className="jb-volume-up"
                    onClick={[Function]}
                  >
                    <button
                      className="ui button jb-volume-up"
                      onClick={[Function]}
                      role="button"
                    >
                      <Icon
                        as="i"
                        name="volume up"
                      >
                        <i
                          aria-hidden="true"
                          className="volume up icon"
                        />
                      </Icon>
                    </button>
                  </Button>
                </div>
              </ButtonGroup>
            </VolumeButtons>
            <Controls
              onNext={[Function]}
              onPause={[Function]}
              onPlay={[Function]}
              onPrevious={[Function]}
            >
              <span>
                <SkipButtons
                  onNext={[Function]}
                  onPrevious={[Function]}
                >
                  <span>
                    <Button
                      animated="vertical"
                      as="button"
                      className="jb-previous-button"
                      onClick={[Function]}
                    >
                      <button
                        className="ui vertical animated button jb-previous-button"
                        onClick={[Function]}
                        role="button"
                      >
                        <ButtonContent
                          hidden={true}
                        >
                          <div
                            className="hidden content"
                          >
                            Prev
                          </div>
                        </ButtonContent>
                        <ButtonContent
                          visible={true}
                        >
                          <div
                            className="visible content"
                          >
                            <Icon
                              as="i"
                              name="step backward"
                            >
                              <i
                                aria-hidden="true"
                                className="step backward icon"
                              />
                            </Icon>
                          </div>
                        </ButtonContent>
                      </button>
                    </Button>
                    <Button
                      animated="vertical"
                      as="button"
                      className="jb-next-button"
                      onClick={[Function]}
                    >
                      <button
                        className="ui vertical animated button jb-next-button"
                        onClick={[Function]}
                        role="button"
                      >
                        <ButtonContent
                          hidden={true}
                        >
                          <div
                            className="hidden content"
                          >
                            Next
                          </div>
                        </ButtonContent>
                        <ButtonContent
                          visible={true}
                        >
                          <div
                            className="visible content"
                          >
                            <Icon
                              as="i"
                              name="step forward"
                            >
                              <i
                                aria-hidden="true"
                                className="step forward icon"
                              />
                            </Icon>
                          </div>
                        </ButtonContent>
                      </button>
                    </Button>
                  </span>
                </SkipButtons>
                <Button
                  animated="vertical"
                  as="button"
                  onClick={[Function]}
                >
                  <button
                    className="ui vertical animated button"
                    onClick={[Function]}
                    role="button"
                  >
                    <ButtonContent
                      hidden={true}
                    >
                      <div
                        className="hidden content"
                      >
                        Play
                      </div>
                    </ButtonContent>
                    <ButtonContent
                      visible={true}
                    >
                      <div
                        className="visible content"
                      >
                        <Icon
                          as="i"
                          name="play"
                        >
                          <i
                            aria-hidden="true"
                            className="play icon"
                          />
                        </Icon>
                      </div>
                    </ButtonContent>
                  </button>
                </Button>
                <Button
                  animated="vertical"
                  as="button"
                  onClick={[Function]}
                >
                  <button
                    className="ui vertical animated button"
                    onClick={[Function]}
                    role="button"
                  >
                    <ButtonContent
                      hidden={true}
                    >
                      <div
                        className="hidden content"
                      >
                        Pause
                      </div>
                    </ButtonContent>
                    <ButtonContent
                      visible={true}
                    >
                      <div
                        className="visible content"
                      >
                        <Icon
                          as="i"
                          name="pause"
                        >
                          <i
                            aria-hidden="true"
                            className="pause icon"
                          />
                        </Icon>
                      </div>
                    </ButtonContent>
                  </button>
                </Button>
              </span>
            </Controls>
            <Divider>
              <div
                className="ui divider"
              />
            </Divider>
            <Grid>
              <div
                className="ui grid"
              >
                <GridColumn
                  width={6}
                >
                  <div
                    className="six wide column"
                  >
                    <DragDropContextProvider
                      backend={[Function]}
                    >
                      <DropTarget(UrlDropArea)
                        accepts={
                          Array [
                            "__NATIVE_URL__",
                          ]
                        }
                        onDrop={[Function]}
                      >
                        <UrlDropArea
                          accepts={
                            Array [
                              "__NATIVE_URL__",
                            ]
                          }
                          connectDropTarget={[Function]}
                          onDrop={[Function]}
                        >
                          <div>
                            <Header
                              size="small"
                            >
                              <div
                                className="ui small header"
                              >
                                Currently Playing
                              </div>
                            </Header>
                            <Connect(Component)>
                              <Component
                                dispatch={[Function]}
                                image={null}
                                progress={NaN}
                              >
                                <CurrentTrack
                                  image={null}
                                  progress={NaN}
                                />
                              </Component>
                            </Connect(Component)>
                          </div>
                        </UrlDropArea>
                      </DropTarget(UrlDropArea)>
                    </DragDropContextProvider>
                  </div>
                </GridColumn>
                <GridColumn
                  width={10}
                >
                  <div
                    className="ten wide column"
                  >
                    <Header
                      size="small"
                    >
                      <div
                        className="ui small header"
                      >
                        Playlist 
                        <ClearPlaylist
                          onClear={[Function]}
                        >
                          <span>
                            <Label
                              as="a"
                              className="jb-clear-button"
                              color="red"
                              horizontal={true}
                              onClick={[Function]}
                              size="mini"
                            >
                              <a
                                className="ui red mini horizontal label jb-clear-button"
                                onClick={[Function]}
                              >
                                CLEAR
                              </a>
                            </Label>
                            <Confirm
                              cancelButton="No thanks"
                              confirmButton="Do it!"
                              content="Are you sure you want to nuke the playlist?"
                              onCancel={[Function]}
                              onConfirm={[Function]}
                              open={false}
                            >
                              <Modal
                                closeOnDimmerClick={true}
                                closeOnDocumentClick={false}
                                dimmer={true}
                                eventPool="Modal"
                                onClose={[Function]}
                                open={false}
                                size="small"
                              >
                                <Portal
                                  className="ui page modals dimmer transition visible active"
                                  closeOnDocumentClick={false}
                                  closeOnEscape={true}
                                  closeOnRootNodeClick={true}
                                  eventPool="Modal"
                                  mountNode={<body />}
                                  onClose={[Function]}
                                  onMount={[Function]}
                                  onOpen={[Function]}
                                  onUnmount={[Function]}
                                  open={false}
                                  openOnTriggerClick={true}
                                />
                              </Modal>
                            </Confirm>
                          </span>
                        </ClearPlaylist>
                      </div>
                    </Header>
                    <Tracklist
                      images={Object {}}
                      onRemoveTrack={[Function]}
                      tracks={Array []}
                    >
                      <List
                        relaxed={true}
                      >
                        <div
                          className="ui relaxed list"
                          role="list"
                        />
                      </List>
                    </Tracklist>
                  </div>
                </GridColumn>
              </div>
            </Grid>
            <ToastContainer
              autoClose={5000}
              bodyClassName=""
              className={null}
              closeButton={
                <DefaultCloseButton
                  ariaLabel="close"
                />
              }
              closeOnClick={true}
              hideProgressBar={false}
              newestOnTop={false}
              pauseOnHover={true}
              position="top-right"
              progressClassName=""
              style={null}
              toastClassName=""
              transition={[Function]}
            >
              <div />
            </ToastContainer>
          </div>
        </DimmerDimmable>
      </Dashboard>
    </DragDropContext(Dashboard)>
  </Connect(DragDropContext(Dashboard))>
</Provider>
`;
