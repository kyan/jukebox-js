// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchItem render with explicit track 1`] = `
<SearchItem
  className="item-class"
  onAdd={[MockFunction onAddMock]}
  onClick={[MockFunction onClickMock]}
  track={
    Object {
      "album": Object {
        "name": "album name",
      },
      "artist": Object {
        "name": "artist name",
      },
      "explicit": true,
      "image": "image1",
      "metrics": Object {},
      "name": "track name",
    }
  }
>
  <div
    className="item-class search-list-item disabled"
  >
    <Image
      as="img"
      className="search-list-item__image"
      disabled={true}
      floated="left"
      size="tiny"
      src="image1"
      title="Click to add - track name - artist name"
      ui={true}
    >
      <img
        className="ui tiny disabled left floated image search-list-item__image"
        src="image1"
        title="Click to add - track name - artist name"
      />
    </Image>
    <ListContent>
      <div
        className="content"
      >
        <div
          className="search-list-item__header"
        >
          track name
           - 
          artist name
        </div>
        <div
          className="search-list-item__content"
        >
          album name
        </div>
        <VoteInfo
          metrics={Object {}}
        >
          <VotedBy
            show={false}
            size="mini"
          />
        </VoteInfo>
        <span
          className="search-list-item__add"
          onClick={[MockFunction onAddMock]}
        >
          Add to mix
        </span>
      </div>
    </ListContent>
  </div>
</SearchItem>
`;

exports[`SearchItem render with no add handler 1`] = `
<SearchItem
  className="item-class"
  onClick={[MockFunction onClickMock]}
  track={
    Object {
      "album": Object {
        "name": "album name",
      },
      "artist": Object {
        "name": "artist name",
      },
      "explicit": false,
      "image": "image1",
      "metrics": Object {},
      "name": "track name",
    }
  }
>
  <div
    className="item-class search-list-item"
  >
    <Image
      as="img"
      className="search-list-item__image"
      disabled={false}
      floated="left"
      onClick={[MockFunction onClickMock]}
      size="tiny"
      src="image1"
      title="Click to add - track name - artist name"
      ui={true}
    >
      <img
        className="ui tiny left floated image search-list-item__image"
        onClick={[MockFunction onClickMock]}
        src="image1"
        title="Click to add - track name - artist name"
      />
    </Image>
    <ListContent>
      <div
        className="content"
      >
        <div
          className="search-list-item__header"
        >
          track name
           - 
          artist name
        </div>
        <div
          className="search-list-item__content"
        >
          album name
        </div>
        <VoteInfo
          metrics={Object {}}
        >
          <VotedBy
            show={false}
            size="mini"
          />
        </VoteInfo>
      </div>
    </ListContent>
  </div>
</SearchItem>
`;

exports[`SearchItem render with valid props it renders correctly 1`] = `
<SearchItem
  className="item-class"
  onAdd={[MockFunction onAddMock]}
  onClick={[MockFunction onClickMock]}
  track={
    Object {
      "album": Object {
        "name": "album name",
      },
      "artist": Object {
        "name": "artist name",
      },
      "explicit": false,
      "image": "image1",
      "metrics": Object {},
      "name": "track name",
    }
  }
>
  <div
    className="item-class search-list-item"
  >
    <Image
      as="img"
      className="search-list-item__image"
      disabled={false}
      floated="left"
      onClick={[MockFunction onClickMock]}
      size="tiny"
      src="image1"
      title="Click to add - track name - artist name"
      ui={true}
    >
      <img
        className="ui tiny left floated image search-list-item__image"
        onClick={[MockFunction onClickMock]}
        src="image1"
        title="Click to add - track name - artist name"
      />
    </Image>
    <ListContent>
      <div
        className="content"
      >
        <div
          className="search-list-item__header"
        >
          track name
           - 
          artist name
        </div>
        <div
          className="search-list-item__content"
        >
          album name
        </div>
        <VoteInfo
          metrics={Object {}}
        >
          <VotedBy
            show={false}
            size="mini"
          />
        </VoteInfo>
        <span
          className="search-list-item__add"
          onClick={[MockFunction onAddMock]}
        >
          Add to mix
        </span>
      </div>
    </ListContent>
  </div>
</SearchItem>
`;
