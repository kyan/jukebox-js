{"version":3,"sources":["components/current-track/default-artwork.png","utils/spotify/index.js","components/error-boundary/index.js","contexts/google.js","constants/mopidy-api.js","constants/common.js","actions/index.js","votes/constants.js","search/constants.js","utils/time/index.js","search/actions/index.js","constants/auth-api.js","utils/payload/index.ts","utils/notify/index.js","utils/on-message-handler/index.js","utils/state/index.js","middleware/jukebox-middleware/index.ts","reducers/track/index.js","reducers/tracklist/index.js","reducers/timer/index.js","reducers/jukebox/index.js","reducers/settings/index.js","search/reducers/index.js","reducers/index.js","utils/signin-token/index.js","components/skip-buttons/index.js","components/controls/index.js","components/url-drop-area/index.js","components/drag-in-track/index.js","components/added-by/index.js","components/voted-by/index.js","components/progress-bar/index.js","components/current-track/index.js","containers/current-track-container/index.js","votes/actions/index.js","components/settings/index.js","components/remove-track/index.js","components/tracklist/index.js","search/components/button/index.js","components/volume-buttons/index.js","components/clear-playlist/index.js","search/components/sidebar/index.js","search/index.js","dashboard/index.js","containers/dashboard-container/index.js","App.tsx","index.tsx"],"names":["module","exports","transformUrl","url","uri","replace","match","ErrorBoundary","React","Component","constructor","props","super","this","state","hasError","componentDidCatch","error","info","setState","render","children","GoogleAuthContext","createContext","ADD_CURRENT_TRACK","ADD_TRACKS","CONNECT","CONNECTING","CONNECTED","DISCONNECT","DISCONNECTED","DROP_TYPES","SEND","STORE_TOKEN","CLEAR_STORE_TOKEN","UPDATE_VOLUME","UPDATE_PLAYBACK_STATE","UPDATE_PROGRESS_TIMER","MOPIDY_CONNECTED","MOPIDY_DISCONNECTED","SYNC_SOCIAL_DATA","updateToken","token","type","Types","clearToken","addNewTrack","key","MopidyApi","params","addCurrentTrack","track","syncSocialData","addTrackList","list","removeFromTracklist","updateProgressTimer","position","duration","Infinity","wsConnect","wsConnecting","wsConnected","wsDisconnect","wsDisconnected","mopidyConnected","mopidyDisconnected","getCurrentTrack","getTimePosition","getState","getTrackList","clearTrackList","startPlaying","stopPlaying","pausePlaying","nextPlaying","previousPlaying","getVolume","updateVolume","volume","updatePlaybackState","setVolume","Number","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","millisToSeconds","toggleSearchSidebar","open","Search","storeSearchQuery","query","search","options","Payload","decode","payload","JSON","parse","encodeToJson","jwt","data","stringify","Notify","id","title","message","store","addNotification","insert","container","dismiss","success","warning","dispatch","actions","onMessageHandler","progressTimer","user","AuthApi","console","progress","set","length","jukebox","playbackState","start","stop","playBackChanged","tracklist","fullname","SearchConst","results","VoteConst","State","loadInitial","forEach","action","JukeboxMiddleware","socket","process","next","packMessage","settings","onMopidyStateChange","online","onOpen","ProgressTimer","callback","fallbackTargetFrameRate","disableRequestAnimationFrame","trackProgressTimer","onClose","onMessage","onSearchResults","onVote","Constants","close","io","transports","on","reset","emit","VoteConstant","Object","assign","addedBy","metrics","map","item","initalProgressState","remaining","timer","initalState","mopidyOnline","searchSideBarOpen","limit","offset","total","Constant","filter","tracks","items","jukeboxApp","combineReducers","SignInToken","refresh","googleApi","workerTimers","reloadAuthResponse","then","response","id_token","err","warn","clear","PreviousButton","Button","onClick","animated","className","disabled","Content","hidden","visible","Icon","name","NextButton","SkipButtons","onPrevious","onNext","PlayButton","active","PauseButton","StopButton","Controls","useSelector","onPlay","onPause","onStop","boxTarget","drop","monitor","onDrop","UrlDropArea","connectDropTarget","isOver","DropTarget","accepts","connect","dropTarget","DragInTrack","backend","HTML5Backend","addedByContent","users","List","i","fullName","Item","userPicture","Description","dateFormat","addedAt","picture","Image","avatar","src","AddedBy","Popup","wide","content","trigger","voteNormaliser","v","round","votedByContent","votes","voteScore","Label","circular","size","vote","at","voteLabel","basic","color","icon","normalisedTotal","ribbon","VotedBy","voteCount","show","ProgressBar","progressPercentage","percentage","isNaN","timerToPercentage","percent","marks","0","style","label","50","100","spotifyLink","code","split","pop","AlbumDescription","year","album","Card","calcVoteAverage","mean","flatten","voteHandleColor","TrackVotes","votesAverage","AddLabel","Detail","count","PlayLabel","plays","VoteLabel","CurrentTrack","userID","defaultImage","Header","currentUserVoter","find","u","_id","currentUserVote","image","Meta","artist","extra","dots","value","included","step","onChange","rating","handleStyle","borderColor","backgroundColor","href","target","rel","CurrentTrackContainer","googleUser","useContext","useDispatch","googleId","Vote","voteActions","Settings","signIn","signOut","floated","profileObj","rounded","imageUrl","Fragment","RemoveTrack","useState","setOpen","Comment","Action","Confirm","cancelButton","confirmButton","onCancel","onConfirm","ev","TrackImage","Avatar","isCurrent","ImageChooser","TrackHeading","Author","TrackDescription","Text","as","artistName","trackLength","CurrentVote","ActionRemove","cb","CurrentPlays","ListItems","beenPlayed","current","classnames","onArtistSearch","Actions","onRemove","Tracklist","Group","currentTrack","onRemoveTrack","SearchButton","volumeUp","volumeDown","VolumeDownButton","VolumeUpButton","VolumeButtons","onVolumeChange","Or","text","ClearPlaylist","horizontal","onClear","VoteInfo","SearchItem","explicit","undefined","SearchItems","onAddTrack","onSubmit","onQueryChange","totalPages","onPageChange","inputEl","useRef","Sidebar","Pushable","animation","inverted","vertical","width","direction","onShow","focus","Form","Field","required","ref","placeholder","fluid","Divider","Pagination","defaultActivePage","firstItem","lastItem","pointing","secondary","divided","relaxed","Pusher","dimmed","SearchContainer","searchActions","mopidyActions","onSearch","searchOptions","activePage","evt","_","Dashboard","onTracklistClear","onSearchClick","Dimmer","Dimmable","blurring","Container","Grid","stackable","columns","Column","DragDropContext","isSignedIn","disable","googleTokenId","refreshTokenTimeoutID","useEffect","tokenId","useCallback","_item","getItem","urls","createStore","composeWithDevTools","applyMiddleware","jukeboxMiddleware","App","googleAuth","useGoogleLogin","clientId","hostedDomain","GOOGLE_AUTH_DOMAIN","Provider","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f7b26401.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-artwork.6bba9800.png\";","// https://open.spotify.com/track/0c41pMosF5Kqwwegcps8ES\nconst transformUrl = (url) => {\n  const uri = url.replace(/^.*\\/track\\//, 'spotify:track:')\n  return (uri.match(/spotify:track/g) ? uri : null)\n}\n\nmodule.exports = {\n  transformUrl\n}\n","import React from 'react'\n\n// uses code from https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html\nclass ErrorBoundary extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true })\n\n    // You can also log the error to an error reporting service\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`error: ${error}`)\n      console.log(`info: ${info}`)\n    }\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Ouch! I broke a bit.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import React from 'react'\n\nconst GoogleAuthContext = React.createContext()\n\nexport default GoogleAuthContext\n","export default {\n  PLAYBACK_GET_CURRENT_TRACK: 'playback.getCurrentTrack',\n  EVENT_TRACK_PLAYBACK_STARTED: 'event:trackPlaybackStarted',\n  EVENT_PLAYBACK_STATE_CHANGED: 'event:playbackStateChanged',\n  EVENT_PLAYBACK_STATE_RESUMED: 'event:trackPlaybackResumed',\n  TRACKLIST_GET_TRACKS: 'tracklist.getTracks',\n  TRACKLIST_ADD_TRACK: 'tracklist.add',\n  TRACKLIST_REMOVE_TRACK: 'tracklist.remove',\n  TRACKLIST_CLEAR: 'tracklist.clear',\n  PLAYBACK_GET_TIME_POSITION: 'playback.getTimePosition',\n  PLAYBACK_GET_PLAYBACK_STATE: 'playback.getState',\n  PLAYBACK_PLAY: 'playback.play',\n  PLAYBACK_STOP: 'playback.stop',\n  PLAYBACK_PAUSE: 'playback.pause',\n  PLAYBACK_NEXT: 'playback.next',\n  PLAYBACK_BACK: 'playback.previous',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  STOPPED: 'stopped',\n  SET_VOLUME: 'mixer.setVolume',\n  GET_VOLUME: 'mixer.getVolume',\n  EVENT_VOLUME_CHANGED: 'event:volumeChanged',\n  VALIDATION_ERROR: 'validationError'\n}\n","export default {\n  ADD_CURRENT_TRACK: 'actionAddCurrentTrack',\n  ADD_TRACKS: 'actionAddTracks',\n  CONNECT: 'actionConnect',\n  CONNECTING: 'actionConnecting',\n  CONNECTED: 'actionConnected',\n  DISCONNECT: 'actionDisconnect',\n  DISCONNECTED: 'actionDisconnected',\n  DROP_TYPES: ['__NATIVE_URL__'],\n  SEND: 'actionSend',\n  STORE_TOKEN: 'actionStoreToken',\n  CLEAR_STORE_TOKEN: 'actionClearStoreToken',\n  UPDATE_VOLUME: 'actionUpdateVolume',\n  UPDATE_PLAYBACK_STATE: 'actionPlaybackState',\n  UPDATE_PROGRESS_TIMER: 'actionUpdateProgressTimer',\n  MOPIDY_CONNECTED: 'actionMopidyConnected',\n  MOPIDY_DISCONNECTED: 'actionMopidyDisconnected',\n  SYNC_SOCIAL_DATA: 'syncSocialData'\n}\n","import MopidyApi from 'constants/mopidy-api'\nimport Types from 'constants/common'\nimport { transformUrl } from 'utils/spotify'\n\nexport const updateToken = token => {\n  return {\n    type: Types.STORE_TOKEN,\n    token\n  }\n}\n\nexport const clearToken = () => {\n  return {\n    type: Types.CLEAR_STORE_TOKEN\n  }\n}\n\nexport const addNewTrack = url => {\n  let uri = transformUrl(url)\n\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_ADD_TRACK,\n    params: { 'uris': [uri] }\n  }\n}\n\nexport const addCurrentTrack = track => {\n  return {\n    type: Types.ADD_CURRENT_TRACK,\n    track\n  }\n}\n\nexport const syncSocialData = track => {\n  return {\n    type: Types.SYNC_SOCIAL_DATA,\n    track\n  }\n}\n\nexport const addTrackList = list => {\n  return {\n    type: Types.ADD_TRACKS,\n    list\n  }\n}\n\nexport const removeFromTracklist = uri => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_REMOVE_TRACK,\n    params: { 'criteria': { 'uri': [uri] } }\n  }\n}\n\nexport const updateProgressTimer = (position, duration) => {\n  if (duration === Infinity) { duration = 0 }\n\n  return {\n    type: Types.UPDATE_PROGRESS_TIMER,\n    position,\n    duration\n  }\n}\n\nexport const wsConnect = () => {\n  return {\n    type: Types.CONNECT\n  }\n}\n\nexport const wsConnecting = () => {\n  return {\n    type: Types.CONNECTING\n  }\n}\n\nexport const wsConnected = () => {\n  return {\n    type: Types.CONNECTED\n  }\n}\n\nexport const wsDisconnect = () => {\n  return {\n    type: Types.DISCONNECT\n  }\n}\n\nexport const wsDisconnected = () => {\n  return {\n    type: Types.DISCONNECTED\n  }\n}\n\nexport const mopidyConnected = () => {\n  return {\n    type: Types.MOPIDY_CONNECTED\n  }\n}\n\nexport const mopidyDisconnected = () => {\n  return {\n    type: Types.MOPIDY_DISCONNECTED\n  }\n}\n\nexport const getCurrentTrack = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_CURRENT_TRACK\n  }\n}\n\nexport const getTimePosition = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_TIME_POSITION\n  }\n}\n\nexport const getState = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_PLAYBACK_STATE\n  }\n}\n\nexport const getTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_GET_TRACKS\n  }\n}\n\nexport const clearTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_CLEAR\n  }\n}\n\nexport const startPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PLAY\n  }\n}\n\nexport const stopPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_STOP\n  }\n}\n\nexport const pausePlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PAUSE\n  }\n}\n\nexport const nextPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_NEXT\n  }\n}\n\nexport const previousPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_BACK\n  }\n}\n\nexport const getVolume = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.GET_VOLUME\n  }\n}\n\nexport const updateVolume = (volume) => {\n  return {\n    type: Types.UPDATE_VOLUME,\n    volume\n  }\n}\n\nexport const updatePlaybackState = (state) => {\n  return {\n    type: Types.UPDATE_PLAYBACK_STATE,\n    state\n  }\n}\n\nexport const setVolume = (volume) => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.SET_VOLUME,\n    params: [Number(volume)]\n  }\n}\n","export default {\n  VOTE: 'actionVote',\n  CAST_VOTE: 'castVote',\n  VOTE_CASTED: 'voteCasted'\n}\n","export default {\n  SEARCH: 'actionTrackSearch',\n  SEARCH_GET_TRACKS: 'searchGetTracks',\n  STORE_SEARCH_RESULTS: 'actionStoreSearchResults',\n  STORE_SEARCH_QUERY: 'actionStoreSearchQuery',\n  TOGGLE_SEARCH_SIDEBAR: 'actionToggleSearchSidebar',\n  REMOVE_FROM_SEARCH_RESULTS: 'actionRemoveFromSearchResults'\n}\n","import ProgressTimer from 'media-progress-timer'\n\nexport const millisToMinutesAndSeconds = (millis) => {\n  let minutes = Math.floor(millis / 60000)\n  let seconds = ((millis % 60000) / 1000).toFixed(0)\n  return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n}\n\nexport const millisToSeconds = (millis) => {\n  return millis * 0.001\n}\n\nexport const timerToPercentage = timer => {\n  if (timer.duration === 0) { return 0 }\n  const position = millisToSeconds(timer.position)\n  const duration = millisToSeconds(timer.duration)\n  const percentage = Math.round((position / duration) * 100)\n\n  return isNaN(percentage) ? 0 : percentage\n}\n\nexport const trackProgressTimer = (store, actions) => {\n  return ProgressTimer({\n    callback: (position, duration) => {\n      store.dispatch(actions.updateProgressTimer(position, duration))\n    },\n    fallbackTargetFrameRate: 1,\n    disableRequestAnimationFrame: true\n  })\n}\n","import Search from 'search/constants'\n\nexport const toggleSearchSidebar = (open) => {\n  return {\n    type: Search.TOGGLE_SEARCH_SIDEBAR,\n    open\n  }\n}\n\nexport const storeSearchResults = (results) => {\n  return {\n    type: Search.STORE_SEARCH_RESULTS,\n    results\n  }\n}\n\nexport const storeSearchQuery = (query) => {\n  return {\n    type: Search.STORE_SEARCH_QUERY,\n    query\n  }\n}\n\nexport const search = (query, options) => {\n  return {\n    type: Search.SEARCH,\n    key: Search.SEARCH_GET_TRACKS,\n    params: { query, options }\n  }\n}\n\nexport const removeFromSearchResults = (uri) => {\n  return {\n    type: Search.REMOVE_FROM_SEARCH_RESULTS,\n    uri\n  }\n}\n","export default {\n  AUTHENTICATION_TOKEN_INVALID: 'authenticationTokenInvalid'\n}\n","export interface PayLoadInterface {\n  jwt: string\n  key: string\n  data: any\n}\n\nconst Payload = {\n  decode: (payload: string): PayLoadInterface => JSON.parse(payload),\n  encodeToJson: ({ jwt, key, data }:PayLoadInterface): string => JSON.stringify({ jwt, key, data })\n}\n\nexport default Payload\n","import { store } from 'react-notifications-component'\n\nconst Notify = {\n  info: ({ id, title, message }) => {\n    return store.addNotification({\n      id,\n      title,\n      message,\n      type: 'info',\n      insert: 'top',\n      container: 'bottom-left',\n      dismiss: {\n        duration: 3000\n      }\n    })\n  },\n  success: ({ id, title, message }) => {\n    return store.addNotification({\n      id,\n      title,\n      message,\n      type: 'success',\n      insert: 'top',\n      container: 'bottom-left',\n      dismiss: {\n        duration: 3000\n      }\n    })\n  },\n  warning: ({ id, title, message }) => {\n    return store.addNotification({\n      id,\n      title,\n      message,\n      type: 'warning',\n      insert: 'top',\n      container: 'bottom-left',\n      dismiss: {\n        duration: 5000\n      }\n    })\n  }\n}\n\nexport default Notify\n","import * as actions from 'actions'\nimport * as searchActions from 'search/actions'\nimport AuthApi from 'constants/auth-api'\nimport MopidyApi from 'constants/mopidy-api'\nimport SearchConst from 'search/constants'\nimport VoteConst from 'votes/constants'\nimport Payload from 'utils/payload'\nimport Notify from 'utils/notify'\n\nconst updatePlaybackState = (store, state) => {\n  store.dispatch(actions.updatePlaybackState(state))\n}\n\nconst playBackChanged = (store, state, progress) => {\n  switch (state) {\n    case MopidyApi.PAUSED:\n    case MopidyApi.STOPPED:\n      updatePlaybackState(store, state)\n      progress.stop()\n      break\n    case MopidyApi.PLAYING:\n      updatePlaybackState(store, state)\n      progress.start()\n      break\n    default:\n      break\n  }\n}\n\nconst addCurrentTrack = (track, store, progress) => {\n  store.dispatch(actions.addCurrentTrack(track))\n  store.dispatch(actions.syncSocialData(track))\n  const progressTimer = progress.set(0, track.length)\n  if (store.getState().jukebox.playbackState === MopidyApi.PLAYING) progressTimer.start()\n}\n\nconst addTrackList = (tracklist, store) => {\n  store.dispatch(actions.addTrackList(tracklist))\n}\n\nconst onMessageHandler = (store, payload, progressTimer) => {\n  const { key, data, user } = Payload.decode(payload)\n\n  switch (key) {\n    case AuthApi.AUTHENTICATION_TOKEN_INVALID:\n      console.error(`AUTHENTICATION_TOKEN_INVALID: ${data.error}`)\n      store.dispatch(actions.clearToken())\n      break\n    case MopidyApi.PLAYBACK_GET_CURRENT_TRACK:\n    case MopidyApi.EVENT_TRACK_PLAYBACK_STARTED:\n      if (data && data.track) addCurrentTrack(data.track, store, progressTimer)\n      break\n    case MopidyApi.EVENT_PLAYBACK_STATE_CHANGED:\n    case MopidyApi.PLAYBACK_GET_PLAYBACK_STATE:\n      playBackChanged(store, data, progressTimer)\n      break\n    case MopidyApi.TRACKLIST_GET_TRACKS:\n      addTrackList(data, store)\n      break\n    case MopidyApi.PLAYBACK_NEXT:\n    case MopidyApi.PLAYBACK_BACK:\n      store.dispatch(actions.getCurrentTrack())\n      break\n    case MopidyApi.SET_VOLUME:\n      Notify.info({\n        title: 'Volume Updated',\n        message: `${user.fullname} changed it to ${data.volume}`\n      })\n      break\n    case MopidyApi.TRACKLIST_REMOVE_TRACK:\n      Notify.warning({\n        title: 'Track Removed',\n        message: `${user.fullname} removed: ${data.message}`\n      })\n      break\n    case MopidyApi.TRACKLIST_ADD_TRACK:\n      Notify.success({\n        title: 'New Track',\n        message: `${user.fullname} added: ${data.message}`\n      })\n      break\n    case MopidyApi.GET_VOLUME:\n    case MopidyApi.EVENT_VOLUME_CHANGED:\n      store.dispatch(actions.updateVolume(data.volume))\n      break\n    case MopidyApi.PLAYBACK_GET_TIME_POSITION:\n      progressTimer.set(data)\n      break\n    case SearchConst.SEARCH_GET_TRACKS:\n      store.dispatch(searchActions.storeSearchResults(data))\n      break\n    case VoteConst.VOTE_CASTED:\n      if (data) {\n        store.dispatch(actions.syncSocialData(data))\n      }\n      break\n    case MopidyApi.EVENT_PLAYBACK_STATE_RESUMED:\n      progressTimer.set(data)\n      break\n    case MopidyApi.VALIDATION_ERROR:\n      Notify.warning({\n        title: 'Oops',\n        message: data.message\n      })\n      break\n    default:\n      break\n  }\n}\n\nexport default onMessageHandler\n","import * as actions from 'actions'\n\nconst State = {\n  loadInitial: (store) => {\n    [\n      'getCurrentTrack',\n      'getState',\n      'getTrackList',\n      'getVolume',\n      'getTimePosition'\n    ].forEach(action => {\n      store.dispatch(actions[action]())\n    })\n  }\n}\n\nexport default State\n","import io from 'socket.io-client'\nimport * as actions from 'actions'\nimport Constants from 'constants/common'\nimport VoteConstant from 'votes/constants'\nimport SearchConst from 'search/constants'\nimport { trackProgressTimer } from 'utils/time'\nimport onMessageHandler from 'utils/on-message-handler'\nimport Payload from 'utils/payload'\nimport State from 'utils/state'\nimport { Middleware, MiddlewareAPI, Action } from 'redux'\nimport { Dispatch } from 'react'\n\ninterface ActionInterface extends Action {\n  key: string\n  params: any\n}\n\nconst JukeboxMiddleware: Middleware = (() => {\n  let url = `http://${process.env.REACT_APP_WS_URL}:${process.env.REACT_APP_WS_PORT}`\n  let socket: SocketIOClient.Socket\n  let progressTimer: any = null\n\n  return (store: MiddlewareAPI) => (next: Dispatch<any>) => (action: ActionInterface) => {\n    const getJWT = (): string => store.getState().settings.token\n    const packMessage = () => Payload.encodeToJson({\n      jwt: getJWT(),\n      key: action.key,\n      data: action.params\n    })\n\n    const onMopidyStateChange = (data: any) => {\n      if (JSON.parse(data).online) {\n        store.dispatch(actions.mopidyConnected())\n        return State.loadInitial(store)\n      }\n      store.dispatch(actions.mopidyDisconnected())\n    }\n    const onOpen = () => {\n      progressTimer = trackProgressTimer(store, actions)\n      store.dispatch(actions.wsConnected())\n    }\n    const onClose = () => store.dispatch(actions.wsDisconnect())\n    const onMessage = (data: any) => onMessageHandler(store, data, progressTimer)\n    const onSearchResults = (data: any) => onMessageHandler(store, data, progressTimer)\n    const onVote = (data: any) => onMessageHandler(store, data, progressTimer)\n    const onConnect = () => {\n      if (socket != null) socket.close()\n      socket = io(url, { transports: ['websocket'] })\n      socket.on('vote', onVote)\n      socket.on('search', onSearchResults)\n      socket.on('mopidy', onMopidyStateChange)\n      socket.on('message', onMessage)\n      socket.on('connect', onOpen)\n      socket.on('disconnect', onClose)\n\n      store.dispatch(actions.wsConnecting())\n    }\n    const onDisconnect = () => {\n      if (progressTimer) { progressTimer.reset() }\n      store.dispatch(actions.wsDisconnected())\n    }\n\n    switch (action.type) {\n      case Constants.CONNECT:\n        return onConnect()\n      case Constants.DISCONNECT:\n        return onDisconnect()\n      case Constants.SEND:\n        return socket && socket.emit('message', packMessage())\n      case SearchConst.SEARCH:\n        return socket && socket.emit('search', packMessage())\n      case VoteConstant.VOTE:\n        return socket && socket.emit('vote', packMessage())\n      default:\n        return next(action)\n    }\n  }\n})()\n\nexport default JukeboxMiddleware\n","import Types from 'constants/common'\n\nconst track = (state = null, action) => {\n  switch (action.type) {\n    case Types.ADD_CURRENT_TRACK:\n      return action.track\n    case Types.SYNC_SOCIAL_DATA:\n      return Object.assign({}, state, {\n        addedBy: action.track.addedBy,\n        metrics: action.track.metrics\n      })\n    default:\n      return state\n  }\n}\n\nexport default track\n","import Types from 'constants/common'\n\nconst tracklist = (state = [], action) => {\n  switch (action.type) {\n    case Types.ADD_TRACKS:\n      return action.list.map(item => item.track)\n    case Types.SYNC_SOCIAL_DATA:\n      return state.map(item => {\n        if (item.uri === action.track.uri) {\n          return Object.assign({}, item, {\n            addedBy: action.track.addedBy,\n            metrics: action.track.metrics\n          })\n        }\n\n        return item\n      })\n    default:\n      return state\n  }\n}\n\nexport default tracklist\n","import Types from 'constants/common'\n\nconst initalProgressState = {\n  position: 0,\n  duration: 0,\n  remaining: 0\n}\n\nconst timer = (state = initalProgressState, action) => {\n  switch (action.type) {\n    case Types.UPDATE_PROGRESS_TIMER:\n      return {\n        position: action.position,\n        duration: action.duration,\n        remaining: action.duration - action.position\n      }\n    default:\n      return state\n  }\n}\n\nexport default timer\n","import MopidyApi from 'constants/mopidy-api'\nimport Types from 'constants/common'\n\nconst initalState = {\n  online: false,\n  mopidyOnline: false,\n  volume: 0,\n  playbackState: MopidyApi.STOPPED\n}\n\nconst jukebox = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.CONNECTED:\n      return Object.assign({}, state, {\n        online: true\n      })\n    case Types.DISCONNECTED:\n      return Object.assign({}, state, {\n        online: false\n      })\n    case Types.MOPIDY_CONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: true\n      })\n    case Types.MOPIDY_DISCONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: false\n      })\n    case Types.UPDATE_VOLUME:\n      return Object.assign({}, state, {\n        volume: action.volume\n      })\n    case Types.UPDATE_PLAYBACK_STATE:\n      return Object.assign({}, state, {\n        playbackState: action.state\n      })\n    default:\n      return state\n  }\n}\n\nexport default jukebox\n","import Types from 'constants/common'\n\nconst initalState = {\n  token: null\n}\n\nconst settings = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.STORE_TOKEN:\n      if (action.token === state.token) return state\n      return Object.assign({}, state, {\n        token: action.token\n      })\n    case Types.CLEAR_STORE_TOKEN:\n      return Object.assign({}, state, {\n        token: null\n      })\n    default:\n      return state\n  }\n}\n\nexport default settings\n","import Constant from 'search/constants'\n\nconst initalState = {\n  searchSideBarOpen: false,\n  query: '',\n  limit: 20,\n  offset: 0,\n  total: 0,\n  results: []\n}\n\nconst search = (state = initalState, action) => {\n  switch (action.type) {\n    case Constant.REMOVE_FROM_SEARCH_RESULTS:\n      return {\n        ...state,\n        results: state.results.filter(item => {\n          return item.track.uri !== action.uri\n        })\n      }\n    case Constant.TOGGLE_SEARCH_SIDEBAR:\n      return Object.assign({}, state, {\n        searchSideBarOpen: action.open\n      })\n    case Constant.STORE_SEARCH_QUERY:\n      return Object.assign({}, state, {\n        query: action.query\n      })\n    case Constant.STORE_SEARCH_RESULTS:\n      const results = action.results.tracks\n      return Object.assign({}, state, {\n        limit: results.limit,\n        offset: results.offset,\n        total: results.total > 10000 ? 10000 : results.total,\n        results: results.items\n      })\n    default:\n      return state\n  }\n}\n\nexport default search\n","import { combineReducers } from 'redux'\nimport track from 'reducers/track'\nimport tracklist from 'reducers/tracklist'\nimport timer from 'reducers/timer'\nimport jukebox from 'reducers/jukebox'\nimport settings from 'reducers/settings'\nimport search from 'search/reducers'\n\nconst jukeboxApp = combineReducers({\n  track,\n  tracklist,\n  timer,\n  jukebox,\n  settings,\n  search\n})\n\nexport default jukeboxApp\n","import * as workerTimers from 'worker-timers'\n\nconst checkForTokenInMilliseconds = 2700000\n\nconst SignInToken = {\n  refresh: (googleApi, success) => {\n    return workerTimers.setTimeout(() => {\n      googleApi.reloadAuthResponse().then(\n        (response) => {\n          console.info('Token refreshed OK')\n          return success(response.id_token)\n        },\n        (err) => console.warn('Token un-refreshable: ', err.message))\n    }, checkForTokenInMilliseconds)\n  },\n  clear: (id) => { if (id) workerTimers.clearTimeout(id) }\n}\n\nexport default SignInToken\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst PreviousButton = (props) => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    className='jb-previous-button'\n    disabled={props.disabled}\n  >\n    <Button.Content hidden>Prev</Button.Content>\n    <Button.Content visible>\n      <Icon name='step backward' />\n    </Button.Content>\n  </Button>\n)\n\nconst NextButton = (props) => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    className='jb-next-button'\n    disabled={props.disabled}\n  >\n    <Button.Content hidden>Next</Button.Content>\n    <Button.Content visible>\n      <Icon name='step forward' />\n    </Button.Content>\n  </Button>\n)\n\nconst SkipButtons = ({ disabled, onPrevious, onNext }) => (\n  <>\n    <PreviousButton onClick={onPrevious} disabled={disabled} />\n    <NextButton onClick={onNext} disabled={disabled} />\n  </>\n)\n\nSkipButtons.propTypes = {\n  disabled: PropTypes.bool,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default SkipButtons\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport SkipButtons from 'components/skip-buttons'\nimport MopidyApi from 'constants/mopidy-api'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst PlayButton = (props) => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    disabled={(props.state === MopidyApi.PLAYING || props.disabled)}\n    active={(props.state === MopidyApi.PLAYING)}\n    className='jb-play-button'\n  >\n    <Button.Content hidden>Play</Button.Content>\n    <Button.Content visible>\n      <Icon name='play' />\n    </Button.Content>\n  </Button>\n)\n\nconst PauseButton = (props) => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    disabled={(props.state === MopidyApi.PAUSED || props.state === MopidyApi.STOPPED || props.disabled)}\n    active={(props.state === MopidyApi.PAUSED)}\n    className='jb-pause-button'\n  >\n    <Button.Content hidden>Pause</Button.Content>\n    <Button.Content visible>\n      <Icon name='pause' />\n    </Button.Content>\n  </Button>\n)\n\nconst StopButton = (props) => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    disabled={(props.state === MopidyApi.STOPPED || props.disabled)}\n    active={(props.state === MopidyApi.STOPPED)}\n    className='jb-stop-button'\n  >\n    <Button.Content hidden>Stop</Button.Content>\n    <Button.Content visible>\n      <Icon name='stop' />\n    </Button.Content>\n  </Button>\n)\n\nconst Controls = (props) => {\n  const jukebox = useSelector(state => state.jukebox)\n  const { disabled, onPlay, onPause, onStop, onPrevious, onNext } = props\n\n  return (\n    <span>\n      <SkipButtons\n        disabled={disabled}\n        onPrevious={onPrevious}\n        onNext={onNext}\n      />\n      <PlayButton\n        onClick={onPlay}\n        state={jukebox.playbackState}\n        disabled={disabled}\n      />\n      <PauseButton\n        onClick={onPause}\n        state={jukebox.playbackState}\n        disabled={disabled}\n      />\n      <StopButton\n        onClick={onStop}\n        state={jukebox.playbackState}\n        disabled={disabled}\n      />\n    </span>\n  )\n}\n\nControls.propTypes = {\n  disabled: PropTypes.bool,\n  onPlay: PropTypes.func.isRequired,\n  onPause: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default Controls\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DropTarget } from 'react-dnd'\nimport './index.css'\n\nconst boxTarget = {\n  drop (props, monitor) {\n    if (props.onDrop) {\n      props.onDrop(props, monitor)\n    }\n  }\n}\n\nconst boxHandler = (connect, monitor) => {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver()\n  }\n}\n\nconst dropTrack = (show) => {\n  if (!show) return null\n  return <div className='drag-is-over'><p>Drop da track</p></div>\n}\n\nclass UrlDropArea extends Component {\n  render () {\n    const { connectDropTarget, isOver } = this.props\n\n    return connectDropTarget(\n      <div>\n        { dropTrack(isOver) }\n        { this.props.children }\n      </div>\n    )\n  }\n}\n\nUrlDropArea.propTypes = {\n  connectDropTarget: PropTypes.func.isRequired,\n  accepts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onDrop: PropTypes.func\n}\n\nexport default DropTarget(props => props.accepts, boxTarget, boxHandler)(UrlDropArea)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DragDropContextProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport Constants from 'constants/common'\nimport UrlDropArea from 'components/url-drop-area'\n\nconst DragInTrack = ({ disabled, onDrop, children }) => {\n  if (disabled) { return children }\n\n  return (\n    <DragDropContextProvider backend={HTML5Backend}>\n      <UrlDropArea accepts={Constants.DROP_TYPES} onDrop={onDrop}>\n        { children }\n      </UrlDropArea>\n    </DragDropContextProvider>\n  )\n}\n\nDragInTrack.propTypes = {\n  disabled: PropTypes.bool,\n  onDrop: PropTypes.func.isRequired\n}\n\nexport default DragInTrack\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { List, Popup, Icon, Image } from 'semantic-ui-react'\nimport dateFormat from 'dateformat'\nimport './index.css'\n\nconst addedByContent = (users) => (\n  <List className='added-by-list'>\n    {\n      users.map((data, i) => {\n        const fullName = data.user ? data.user.fullname : 'User unknown'\n\n        return (\n          <List.Item key={i}>\n            {userPicture(data)}\n            <List.Content>\n              <List.Description>\n                <strong>{dateFormat(data.addedAt, 'dd mmm yyyy @ h:MM tt')}</strong> - {fullName}\n              </List.Description>\n            </List.Content>\n          </List.Item>\n        )\n      })\n    }\n  </List>\n)\n\nconst userPicture = data => {\n  if (data && data.user && data.user.picture) return <Image avatar className='added_by_avatar_image' src={data.user.picture} />\n  return <Icon name='user' />\n}\n\nconst AddedBy = ({ users = [] }) => {\n  const avatar = userPicture(users[0])\n  if (!users.length) return avatar\n\n  return (\n    <Popup\n      wide\n      content={addedByContent(users)}\n      trigger={avatar}\n    />\n  )\n}\n\nAddedBy.propTypes = {\n  users: PropTypes.array\n}\n\nexport default AddedBy\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport dateFormat from 'dateformat'\nimport { List, Popup, Image, Label } from 'semantic-ui-react'\nimport './index.css'\n\nconst voteNormaliser = (v) => Math.round((v / 10) - 5) // 100 is max a user can vote per play\n\nconst votedByContent = (props) => (\n  <List>\n    {\n      props.votes.map((data, i) => {\n        const fullName = data.user ? data.user.fullname : 'User unknown'\n        const voteScore = <Label circular size='mini'>{voteNormaliser(data.vote)}</Label>\n\n        return (\n          <List.Item key={i}>\n            {userPicture(data)}\n            <List.Content>\n              <List.Description>\n                <strong>{dateFormat(data.at, 'dd mmm yyyy @ h:MM tt')}</strong> - {fullName} {voteScore}\n              </List.Description>\n            </List.Content>\n          </List.Item>\n        )\n      })\n    }\n  </List>\n)\n\nconst userPicture = data => {\n  if (data && data.user && data.user.picture) return <Image avatar className='voted_by_avatar_image' src={data.user.picture} />\n  return null\n}\n\nconst voteLabel = (props) => {\n  let basic = true\n  let color = 'grey'\n  let icon = 'thumbs up'\n  const normalisedTotal = voteNormaliser(props.total)\n\n  if (normalisedTotal < 0) icon = 'thumbs down'\n  if (normalisedTotal > 4) {\n    color = 'green'\n    basic = false\n  }\n  if (normalisedTotal < -4) {\n    color = 'red'\n    basic = false\n  }\n\n  return (\n    <Label\n      className='track-label vote-track-label'\n      size={props.size || 'tiny'}\n      color={color}\n      basic={basic}\n      icon={icon}\n      content={normalisedTotal}\n      ribbon={props.ribbon ? 'right' : null}\n    />\n  )\n}\n\nconst VotedBy = (props) => {\n  const voteCount = props.votes ? props.votes.length : 0\n  if (!props.show) return null\n  if (voteCount < 1) return voteLabel(props)\n\n  return (\n    <Popup\n      wide='very'\n      content={votedByContent(props)}\n      trigger={voteLabel(props)}\n    />\n  )\n}\n\nVotedBy.propTypes = {\n  show: PropTypes.bool,\n  ribbon: PropTypes.bool,\n  votes: PropTypes.array,\n  total: PropTypes.number,\n  size: PropTypes.string\n}\n\nexport default VotedBy\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Line } from 'rc-progress'\nimport { timerToPercentage, millisToMinutesAndSeconds } from 'utils/time'\n\nconst ProgressBar = () => {\n  const timer = useSelector(state => state.timer)\n  const track = useSelector(state => state.track)\n  const progressPercentage = timerToPercentage(timer)\n\n  return (\n    <div className='progress-container'>\n      <span className='remaining-text'>{millisToMinutesAndSeconds(timer.remaining)}</span>\n      <span className='track-length'>{millisToMinutesAndSeconds(track.length)}</span>\n      <Line percent={progressPercentage} />\n    </div>\n  )\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Image, Label, Icon } from 'semantic-ui-react'\nimport Slider from 'rc-slider'\nimport AddedBy from 'components/added-by'\nimport VotedBy from 'components/voted-by'\nimport ProgressBar from 'components/progress-bar'\nimport defaultImage from './default-artwork.png'\nimport { flatten, mean } from 'lodash'\nimport 'rc-slider/assets/index.css'\nimport './index.css'\n\nconst marks = {\n  0: {\n    style: {\n      color: 'red'\n    },\n    label: <Icon name='thumbs down' color='red' />\n  },\n  50: <Icon name='handshake' />,\n  100: {\n    style: {\n      color: 'green'\n    },\n    label: <Icon name='thumbs up' color='green' />\n  }\n}\n\nconst spotifyLink = (uri) => {\n  const code = uri.split(':').pop()\n  return `https://open.spotify.com/track/${code}`\n}\n\nconst AlbumDescription = (props) => {\n  const year = ` (${props.album.year})`\n  return <Card.Description>{props.album.name}{year}</Card.Description>\n}\n\nconst noTrack = () => (\n  <Card>\n    <Image src={defaultImage} />\n    <Card.Content>\n      <Card.Header>Nothing playing</Card.Header>\n      <Card.Description>Drag some music here or press play.</Card.Description>\n    </Card.Content>\n  </Card>\n)\n\nconst calcVoteAverage = (data) => {\n  const votes = data.map(i => i.vote)\n  if (votes.length < 1) return 0\n  return mean(flatten(votes))\n}\n\nconst voteHandleColor = (total) => {\n  if (total > 50) return '#21ba45'\n  if (total < 50) return 'red'\n  return 'gray'\n}\n\nconst TrackVotes = (props) => {\n  if (!props.metrics) return null\n  return <VotedBy total={props.metrics.votesAverage} show={props.metrics.votes > 0} ribbon />\n}\n\nconst AddLabel = (props) => {\n  return (\n    <Label size='mini'>\n      Added\n      <Label.Detail>{props.count}</Label.Detail>\n    </Label>\n  )\n}\n\nconst PlayLabel = (props) => {\n  if (!props.metrics) return null\n\n  return (\n    <Label size='mini'>\n      Played\n      <Label.Detail>{props.metrics.plays}</Label.Detail>\n    </Label>\n  )\n}\n\nconst VoteLabel = (props) => {\n  if (!props.metrics) return null\n\n  return (\n    <Label size='mini'>\n      Activity\n      <Label.Detail>{props.metrics.votes}</Label.Detail>\n    </Label>\n  )\n}\n\nconst CurrentTrack = (props) => {\n  const { track, onVote, userID } = props\n  if (!track) { return noTrack() }\n  const maxRating = 10\n  const { addedBy = [] } = track\n  const votes = (addedBy[0] && addedBy[0].votes) || []\n  const currentUserVoter = votes.find(u => u.user._id === userID)\n  const currentUserVote = currentUserVoter ? (currentUserVoter.vote) : null\n  const doVote = (uri) => (rating) => onVote(uri, rating / maxRating)\n\n  return (\n    <Card>\n      <Image\n        src={track.image || defaultImage}\n        label={<TrackVotes metrics={track.metrics} />}\n      />\n      <Card.Content>\n        <ProgressBar />\n        <Card.Header>{track.name}</Card.Header>\n        <Card.Meta>{track.artist.name}</Card.Meta>\n        <AlbumDescription album={track.album} />\n      </Card.Content>\n      <Card.Content extra>\n        <div className='track-rating-container'>\n          <Slider\n            disabled={!userID}\n            dots\n            value={currentUserVote}\n            included={false}\n            marks={marks}\n            step={maxRating}\n            onChange={doVote(track.uri)}\n            handleStyle={{\n              borderColor: voteHandleColor(currentUserVote),\n              backgroundColor: voteHandleColor(currentUserVote)\n            }}\n          />\n        </div>\n      </Card.Content>\n      <Card.Content extra>\n        <AddLabel count={addedBy.length} />\n        <PlayLabel metrics={track.metrics} />\n        <VoteLabel metrics={track.metrics} />\n        <VotedBy size='mini' show={votes.length > 0} total={calcVoteAverage(votes)} votes={votes} />\n      </Card.Content>\n      <Card.Content extra>\n        <AddedBy users={track.addedBy} />\n        <a\n          className='track-uri'\n          href={spotifyLink(track.uri)}\n          target='_blank'\n          rel='noopener noreferrer'\n        >{track.uri}</a>\n      </Card.Content>\n    </Card>\n  )\n}\n\nCurrentTrack.propTypes = {\n  userID: PropTypes.string,\n  track: PropTypes.object,\n  onVote: PropTypes.func\n}\n\nexport default CurrentTrack\n","import React, { useContext } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport GoogleAuthContext from 'contexts/google'\nimport * as voteActions from 'votes/actions'\nimport CurrentTrack from 'components/current-track'\n\nexport const CurrentTrackContainer = () => {\n  const { googleUser } = useContext(GoogleAuthContext)\n  const track = useSelector(state => state.track)\n  const dispatch = useDispatch()\n\n  return (\n    <CurrentTrack\n      userID={googleUser && googleUser.googleId}\n      track={track}\n      onVote={(uri, rating) => dispatch(voteActions.vote(uri, rating))}\n    />\n  )\n}\n\nexport default CurrentTrackContainer\n","import Vote from 'votes/constants'\n\nexport const vote = (uri, vote) => {\n  return {\n    type: Vote.VOTE,\n    key: Vote.CAST_VOTE,\n    params: { uri, vote }\n  }\n}\n","import React, { useContext } from 'react'\nimport { Button, Image } from 'semantic-ui-react'\nimport GoogleAuthContext from 'contexts/google'\nimport './index.css'\n\nexport const Settings = () => {\n  const { googleUser, signIn, signOut } = useContext(GoogleAuthContext)\n\n  let avatar = (\n    <Button\n      icon='power off'\n      floated='right'\n      onClick={() => signIn()}\n      className='jb-settings-toggle'\n      title='Login using Google'\n    />\n  )\n  if (googleUser && googleUser.profileObj) {\n    avatar = (\n      <Image\n        rounded\n        size='mini'\n        floated='right'\n        title={googleUser.profileObj.name}\n        src={googleUser.profileObj.imageUrl}\n        onClick={() => signOut()}\n      />\n    )\n  }\n\n  return (\n    <React.Fragment>{avatar}</React.Fragment>\n  )\n}\n\nexport default Settings\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Comment, Confirm } from 'semantic-ui-react'\n\nconst RemoveTrack = (props) => {\n  const [open, setOpen] = React.useState(false)\n  const confirm = (ev) => {\n    props.onClick(ev)\n    setOpen(false)\n  }\n  const cancel = () => setOpen(false)\n  const show = () => setOpen(true)\n\n  return (\n    <>\n      <Comment.Action className='remove-track' onClick={show}>Remove</Comment.Action>\n      <Confirm\n        content={`Are you sure you want to remove: ${props.name}`}\n        cancelButton='No thanks'\n        confirmButton='Do it!'\n        open={open}\n        onCancel={cancel}\n        onConfirm={confirm}\n      />\n    </>\n  )\n}\n\nRemoveTrack.propTypes = {\n  uri: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default RemoveTrack\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Comment, Label, Item } from 'semantic-ui-react'\nimport { millisToMinutesAndSeconds } from 'utils/time'\nimport defaultImage from 'components/current-track/default-artwork.png'\nimport AddedBy from 'components/added-by'\nimport VotedBy from 'components/voted-by'\nimport RemoveTrack from 'components/remove-track'\nimport './index.css'\n\nconst TrackImage = (props) => (\n  <Comment.Avatar\n    className={props.isCurrent ? 'current-image' : null}\n    src={props.src}\n  />\n)\n\nconst ImageChooser = (props) => {\n  const image = props.image ? props.image : defaultImage\n\n  return (\n    <TrackImage\n      src={image}\n      isCurrent={props.isCurrent}\n    />\n  )\n}\n\nconst TrackHeading = (props) => (\n  <Comment.Author>{props.name}</Comment.Author>\n)\n\nconst TrackDescription = (props) => (\n  <Comment.Text>\n    <Item as='a' className='track-search-link' onClick={props.onClick}>\n      {props.artistName}\n    </Item> <small>({millisToMinutesAndSeconds(props.trackLength)})</small>\n  </Comment.Text>\n)\n\nconst CurrentVote = (props) => {\n  if (!props.metrics) return null\n  const show = props.metrics.votes > 0\n  if (!show) return null\n\n  return (\n    <Comment.Action as='span'>\n      <VotedBy total={props.metrics.votesAverage} show={show} />\n    </Comment.Action>\n  )\n}\n\nconst ActionRemove = (props) => {\n  if (props.isCurrent || props.disabled) return null\n  const removeTrack = (uri, cb) => () => cb(uri)\n\n  return (\n    <RemoveTrack\n      uri={props.uri}\n      name={props.name}\n      onClick={removeTrack(props.uri, props.onClick)}\n    />\n  )\n}\n\nconst CurrentPlays = (props) => {\n  let basic = true\n  let color = 'grey'\n  if (!props.metrics) return null\n  if (props.metrics.plays > 0) {\n    basic = false\n    color = null\n  }\n\n  return (\n    <Comment.Action as='span'>\n      <Label\n        className='track-label'\n        size='tiny'\n        color={color}\n        basic={basic}\n      >Played <Label.Detail>{props.metrics.plays}</Label.Detail>\n      </Label>\n    </Comment.Action>\n  )\n}\n\nconst ListItems = (props) => {\n  let beenPlayed = false\n  const isCurrentTrack = (current, uri) => current && current.uri === uri\n\n  return props.tracks.map((track, i) => {\n    const { addedBy } = track\n    const isCurrent = isCurrentTrack(props.current, track.uri)\n    if (isCurrent) beenPlayed = beenPlayed || true\n\n    return (\n      <Comment\n        className={classnames({ 'current-track': isCurrent })}\n        key={`${i}${track.uri}`}\n      >\n        <ImageChooser\n          image={track.image}\n          isCurrent={isCurrent}\n        />\n        <Comment.Content\n          className={classnames({ 'track-info': !beenPlayed })}\n        >\n          <TrackHeading\n            name={track.name}\n          />\n          <TrackDescription\n            artistName={track.artist.name}\n            trackLength={track.length}\n            onClick={props.onArtistSearch(track.artist.name)}\n          />\n          <Comment.Actions>\n            <CurrentVote metrics={track.metrics} />\n            <CurrentPlays metrics={track.metrics} />\n            <Comment.Action>\n              <AddedBy users={addedBy} />\n            </Comment.Action>\n            <ActionRemove\n              uri={track.uri}\n              name={track.name}\n              disabled={props.disabled}\n              isCurrent={isCurrent}\n              onClick={props.onRemove}\n            />\n          </Comment.Actions>\n        </Comment.Content>\n      </Comment>\n    )\n  })\n}\n\nconst Tracklist = (props) => {\n  if (!props.tracks) { return null }\n\n  return (\n    <Comment.Group size='small'>\n      <ListItems\n        disabled={props.disabled}\n        tracks={props.tracks}\n        current={props.currentTrack}\n        onRemove={props.onRemoveTrack}\n        onArtistSearch={props.onArtistSearch}\n      />\n    </Comment.Group>\n  )\n}\n\nTracklist.propTypes = {\n  disabled: PropTypes.bool,\n  tracks: PropTypes.array,\n  currentTrack: PropTypes.object,\n  onRemoveTrack: PropTypes.func.isRequired,\n  onArtistSearch: PropTypes.func.isRequired\n}\n\nexport default Tracklist\n","import React from 'react'\nimport { func, bool } from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst SearchButton = ({ onClick, disabled }) => (\n  <Button\n    animated='vertical'\n    floated='right'\n    onClick={onClick}\n    disabled={disabled}\n  >\n    <Button.Content hidden>Search</Button.Content>\n    <Button.Content visible>\n      <Icon name='search' />\n    </Button.Content>\n  </Button>\n)\n\nSearchButton.propTypes = {\n  onClick: func.isRequired,\n  disabled: bool.isRequired\n}\n\nexport default SearchButton\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst VOLUME_INC = 5\nconst VOLUME_MAX = 100\nconst VOLUME_MIN = 0\n\nconst volumeUp = (volume, cb) => {\n  volume += VOLUME_INC\n  if (volume <= VOLUME_MAX) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst volumeDown = (volume, cb) => {\n  volume -= VOLUME_INC\n  if (volume >= VOLUME_MIN) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst VolumeDownButton = (props) => (\n  <Button\n    className='jb-volume-down'\n    onClick={volumeDown(props.volume, props.onChange)}\n    disabled={props.disabled}\n  >\n    <Icon name='volume down' />\n  </Button>\n)\n\nconst VolumeUpButton = (props) => (\n  <Button\n    className='jb-volume-up'\n    onClick={volumeUp(props.volume, props.onChange)}\n    disabled={props.disabled}\n  >\n    <Icon name='volume up' />\n  </Button>\n)\n\nconst VolumeButtons = ({ disabled, onVolumeChange }) => {\n  const jukebox = useSelector(state => state.jukebox)\n\n  return (\n    <Button.Group floated='right'>\n      <VolumeDownButton\n        volume={jukebox.volume}\n        onChange={onVolumeChange}\n        disabled={disabled}\n      />\n      <Button.Or text={jukebox.volume} />\n      <VolumeUpButton\n        volume={jukebox.volume}\n        onChange={onVolumeChange}\n        disabled={disabled}\n      />\n    </Button.Group>\n  )\n}\n\nVolumeButtons.propTypes = {\n  disabled: PropTypes.bool,\n  onVolumeChange: PropTypes.func.isRequired\n}\n\nexport default VolumeButtons\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Confirm, Label } from 'semantic-ui-react'\n\nconst ClearPlaylist = (props) => {\n  const [open, setOpen] = React.useState(false)\n  if (props.disabled) { return null }\n\n  const confirm = (ev) => {\n    props.onClear(ev)\n    setOpen(false)\n  }\n  const cancel = () => setOpen(false)\n  const show = () => setOpen(true)\n\n  return (\n    <>\n      <Label\n        horizontal\n        size='mini'\n        as='a'\n        color='red'\n        onClick={show}\n        className='jb-clear-button'\n      >CLEAR</Label>\n      <Confirm\n        content='Are you sure you want to nuke the playlist?'\n        cancelButton='No thanks'\n        confirmButton='Do it!'\n        open={open}\n        onCancel={cancel}\n        onConfirm={confirm}\n      />\n    </>\n  )\n}\n\nClearPlaylist.propTypes = {\n  disabled: PropTypes.bool,\n  onClear: PropTypes.func.isRequired\n}\n\nexport default ClearPlaylist\n","import React, { useRef } from 'react'\nimport classnames from 'classnames'\nimport { string, func, bool, array, number } from 'prop-types'\nimport VotedBy from 'components/voted-by'\nimport { Sidebar, Button, Form, List, Header, Divider, Image, Pagination } from 'semantic-ui-react'\nimport './index.css'\n\nconst VoteInfo = (props) => {\n  if (!props.metrics) return null\n  return <VotedBy size='mini' total={props.metrics.votesAverage} show={props.metrics.votes > 0} />\n}\n\nconst SearchItem = (props) => (\n  <div\n    className={classnames('search-list-item', { 'disabled': props.track.explicit })}\n    onClick={props.track.explicit ? undefined : props.onClick}\n  >\n    <Image\n      floated='left'\n      src={props.track.image}\n      size='tiny'\n      title={`Click to add - ${props.track.name} - ${props.track.artist.name}`}\n      className='search-list-item__image'\n      disabled={props.track.explicit}\n    />\n    <List.Content>\n      <div className='search-list-item__header'>{props.track.name} - {props.track.artist.name}</div>\n      <div className='search-list-item__content'>{props.track.album.name}</div>\n      <VoteInfo metrics={props.track.metrics} />\n    </List.Content>\n  </div>\n)\n\nconst SearchItems = (props) => (\n  props.tracks.map(item => (\n    <SearchItem\n      key={item.track.uri}\n      track={item.track}\n      onClick={() => props.onAddTrack(item.track.uri)}\n    />\n  ))\n)\n\nconst Search = (props) => {\n  const {\n    visible, onClose, results, onSubmit, query,\n    onQueryChange, onAddTrack, totalPages, onPageChange\n  } = props\n  const inputEl = useRef(null)\n\n  return (\n    <Sidebar.Pushable>\n      <Sidebar\n        animation='overlay'\n        icon='labeled'\n        inverted='true'\n        vertical='true'\n        visible={visible}\n        width='very wide'\n        direction='right'\n        className='sidebar-search'\n        onShow={() => inputEl.current.focus()}\n      >\n        <Form inverted onSubmit={onSubmit}>\n          <Form.Field>\n            <label required>SEARCH</label>\n            <input\n              ref={inputEl}\n              placeholder='track, artist or album'\n              onChange={onQueryChange}\n              value={query}\n            />\n          </Form.Field>\n          <Button type='submit' fluid>Submit</Button>\n        </Form>\n        <Divider horizontal>\n          <Header as='h4' inverted>Results</Header>\n        </Divider>\n        {(totalPages > 0) &&\n          <Pagination\n            className='search-list-pagination'\n            defaultActivePage={1}\n            firstItem={null}\n            lastItem={null}\n            pointing\n            secondary\n            totalPages={totalPages}\n            onPageChange={onPageChange}\n          />\n        }\n        <List divided relaxed inverted size='tiny'>\n          <SearchItems tracks={results} onAddTrack={onAddTrack} />\n        </List>\n      </Sidebar>\n      <Sidebar.Pusher\n        dimmed={visible}\n        onClick={visible ? onClose : null}\n      >\n        { props.children }\n      </Sidebar.Pusher>\n    </Sidebar.Pushable >\n  )\n}\n\nSearch.propTypes = {\n  onClose: func.isRequired,\n  onSubmit: func.isRequired,\n  onQueryChange: func.isRequired,\n  onAddTrack: func.isRequired,\n  onPageChange: func.isRequired,\n  visible: bool.isRequired,\n  results: array.isRequired,\n  totalPages: number.isRequired,\n  query: string\n}\n\nexport default Search\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as mopidyActions from 'actions'\nimport * as searchActions from 'search/actions'\nimport SearchSidebar from 'search/components/sidebar'\n\nexport const SearchContainer = (props) => {\n  const search = useSelector(state => state.search)\n  const dispatch = useDispatch()\n\n  const onAddTrack = (uri) => {\n    dispatch(searchActions.removeFromSearchResults(uri))\n    dispatch(mopidyActions.addNewTrack(uri))\n  }\n\n  const onSearch = (params) => {\n    const searchOptions = {\n      offset: (params.activePage - 1) * search.limit,\n      limit: search.limit\n    }\n    dispatch(searchActions.search(search.query, searchOptions))\n  }\n\n  return (\n    <SearchSidebar\n      visible={search.searchSideBarOpen}\n      onClose={() => dispatch(searchActions.toggleSearchSidebar(false))}\n      onSubmit={() => onSearch({ activePage: 1 })}\n      onAddTrack={(uri) => onAddTrack(uri)}\n      onQueryChange={(evt) => dispatch(searchActions.storeSearchQuery(evt.target.value))}\n      onPageChange={(_, data) => onSearch(data)}\n      results={search.results}\n      totalPages={Math.round(search.total / search.limit)}\n      query={search.query}\n    >\n      { props.children }\n    </SearchSidebar>\n  )\n}\n\nexport default SearchContainer\n","import React from 'react'\nimport { Dimmer, Divider, Grid, Header, Container } from 'semantic-ui-react'\nimport Controls from 'components/controls'\nimport DragInTrack from 'components/drag-in-track'\nimport CurrentTrackContainer from 'containers/current-track-container'\nimport Settings from 'components/settings'\nimport TrackList from 'components/tracklist'\nimport SearchButton from 'search/components/button'\nimport VolumeButtons from 'components/volume-buttons'\nimport ClearPlaylist from 'components/clear-playlist'\nimport SearchContainer from 'search'\nimport './index.css'\n\nconst Dashboard = (props) => {\n  const {\n    online,\n    disabled,\n    onPlay,\n    onStop,\n    onPause,\n    onNext,\n    onPrevious,\n    onVolumeChange,\n    onDrop,\n    onTracklistClear,\n    onSearchClick,\n    tracklist,\n    currentTrack,\n    onRemoveTrack,\n    onArtistSearch\n  } = props\n\n  return (\n    <Dimmer.Dimmable\n      blurring\n      dimmed={!online}\n    >\n      <DragInTrack\n        disabled={disabled}\n        onDrop={onDrop}\n      >\n        <SearchContainer>\n          <Container className='header-wrapper' fluid>\n            <Settings />\n            <VolumeButtons\n              disabled={disabled}\n              onVolumeChange={onVolumeChange}\n            />\n            <SearchButton\n              onClick={onSearchClick}\n              disabled={disabled}\n            />\n            <Controls\n              disabled={disabled}\n              onPlay={onPlay}\n              onStop={onStop}\n              onPause={onPause}\n              onNext={onNext}\n              onPrevious={onPrevious}\n            />\n          </Container>\n          <Divider />\n          <Container className='body-wrapper' fluid>\n            <Grid stackable columns={2} className='dashboard-grid'>\n              <Grid.Column width={4}>\n                <Header size='small'>Current Track</Header>\n                <CurrentTrackContainer />\n              </Grid.Column>\n              <Grid.Column width={8}>\n                <Header size='small'>\n                  Playlist <ClearPlaylist disabled={disabled} onClear={onTracklistClear} />\n                </Header>\n                <TrackList\n                  disabled={disabled}\n                  tracks={tracklist}\n                  currentTrack={currentTrack}\n                  onRemoveTrack={onRemoveTrack}\n                  onArtistSearch={onArtistSearch}\n                />\n              </Grid.Column>\n            </Grid>\n          </Container>\n        </SearchContainer>\n      </DragInTrack>\n    </Dimmer.Dimmable>\n  )\n}\n\nexport default Dashboard\n","import React, { useCallback, useEffect, useContext, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DragDropContext } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport SignInToken from 'utils/signin-token'\nimport GoogleAuthContext from 'contexts/google'\nimport * as actions from 'actions'\nimport * as searchActions from 'search/actions'\nimport Dashboard from 'dashboard'\n\nexport const DashboardContainer = () => {\n  const jukebox = useSelector(state => state.jukebox)\n  const tracklist = useSelector(state => state.tracklist)\n  const currentTrack = useSelector(state => state.track)\n  const dispatch = useDispatch()\n  const { isSignedIn, googleUser } = useContext(GoogleAuthContext)\n  const disable = !(isSignedIn && jukebox.mopidyOnline)\n  const googleTokenId = useRef()\n  const refreshTokenTimeoutID = useRef()\n  const hasTokenChanged = (token) => token !== googleTokenId.current\n\n  useEffect(() => {\n    dispatch(actions.wsConnect())\n\n    /* istanbul ignore next */\n    return () => {\n      dispatch(actions.wsDisconnect())\n    }\n  }, [dispatch])\n\n  if (isSignedIn && hasTokenChanged(googleUser.tokenId)) {\n    googleTokenId.current = googleUser.tokenId\n    refreshTokenTimeoutID.current = SignInToken.refresh(googleUser, (token) => {\n      dispatch(actions.updateToken(token))\n    })\n    dispatch(actions.updateToken(googleTokenId.current))\n  }\n\n  if (!isSignedIn) {\n    googleTokenId.current = undefined\n    SignInToken.clear(refreshTokenTimeoutID.current)\n    dispatch(actions.clearToken())\n  }\n\n  const onPlay = useCallback(() => dispatch(actions.startPlaying()), [dispatch])\n  const onStop = useCallback(() => dispatch(actions.stopPlaying()), [dispatch])\n  const onPause = useCallback(() => dispatch(actions.pausePlaying()), [dispatch])\n  const onNext = useCallback(() => dispatch(actions.nextPlaying()), [dispatch])\n  const onPrevious = useCallback(() => dispatch(actions.previousPlaying()), [dispatch])\n  const onVolumeChange = useCallback((evt) => dispatch(actions.setVolume(evt)), [dispatch])\n  /* istanbul ignore next */\n  const onDrop = useCallback((_item, monitor) => {\n    if (monitor) {\n      dispatch(actions.addNewTrack(monitor.getItem().urls[0]))\n    }\n  }, [dispatch])\n  const onTracklistClear = useCallback(() => dispatch(actions.clearTrackList()), [dispatch])\n  const onSearchClick = useCallback(() => dispatch(searchActions.toggleSearchSidebar(true)), [dispatch])\n  const onRemoveTrack = useCallback((evt) => dispatch(actions.removeFromTracklist(evt)), [dispatch])\n  const onArtistSearch = useCallback((query) => _ => {\n    const searchOptions = { offset: 0 }\n    dispatch(searchActions.search(query, searchOptions))\n    dispatch(searchActions.storeSearchQuery(query, searchOptions))\n    dispatch(searchActions.toggleSearchSidebar(true))\n  }, [dispatch])\n\n  return (\n    <Dashboard\n      online={jukebox.online}\n      disabled={disable}\n      onPlay={onPlay}\n      onStop={onStop}\n      onPause={onPause}\n      onNext={onNext}\n      onPrevious={onPrevious}\n      onVolumeChange={onVolumeChange}\n      onDrop={onDrop}\n      onTracklistClear={onTracklistClear}\n      onSearchClick={onSearchClick}\n      tracklist={tracklist}\n      currentTrack={currentTrack}\n      onRemoveTrack={onRemoveTrack}\n      onArtistSearch={onArtistSearch}\n    />\n  )\n}\n\nexport default DragDropContext(HTML5Backend)(DashboardContainer)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport ReactNotification from 'react-notifications-component'\nimport { useGoogleLogin } from 'react-use-googlelogin'\nimport ErrorBoundary from 'components/error-boundary'\nimport GoogleAuthContext from 'contexts/google'\nimport jukeboxMiddleware from 'middleware/jukebox-middleware'\nimport jukeboxApp from 'reducers'\nimport { Container } from 'semantic-ui-react'\nimport DashboardContainer from 'containers/dashboard-container'\nimport 'react-notifications-component/dist/theme.css'\n\nconst store = createStore(jukeboxApp, composeWithDevTools(\n  applyMiddleware(jukeboxMiddleware)\n))\n\nconst App = () => {\n  const googleAuth = useGoogleLogin({\n    clientId: process.env.REACT_APP_CLIENT_ID,\n    hostedDomain: process.env.GOOGLE_AUTH_DOMAIN\n  })\n\n  return (\n    <Provider store={store}>\n      <ReactNotification />\n      <Container fluid>\n        <GoogleAuthContext.Provider value={googleAuth}>\n          <ErrorBoundary>\n            <DashboardContainer />\n          </ErrorBoundary>\n        </GoogleAuthContext.Provider>\n      </Container>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}