{"version":3,"sources":["components/current-track/default-artwork.png","utils/spotify/index.js","components/error-boundary/index.js","contexts/google.js","constants/mopidy-api.js","constants/common.js","actions/index.js","search/constants.js","utils/time/index.js","search/actions/index.js","constants/auth-api.js","utils/payload/index.js","utils/notify/index.js","utils/on-message-handler/index.js","utils/state/index.js","containers/jukebox-middleware/index.js","reducers/track/index.js","reducers/tracklist/index.js","reducers/assets/index.js","reducers/timer/index.js","reducers/jukebox/index.js","reducers/settings/index.js","search/reducers/index.js","reducers/index.js","utils/signin-token/index.js","selectors/index.js","components/skip-buttons/index.js","components/controls/index.js","components/url-drop-area/index.js","components/drag-in-track/index.js","components/current-track/index.js","containers/current-track-container/index.js","components/settings/index.js","components/tracklist/added-by/index.js","components/tracklist/index.js","search/components/button/index.js","components/volume-buttons/index.js","components/clear-playlist/index.js","search/components/sidebar/index.js","search/index.js","dashboard/index.js","containers/dashboard-container/index.js","App.js","index.js"],"names":["module","exports","transformUrl","url","uri","replace","match","ErrorBoundary","props","state","hasError","error","info","this","setState","children","React","Component","GoogleAuthContext","createContext","ADD_CURRENT_TRACK","ADD_TRACKS","CONNECT","CONNECTING","CONNECTED","DISCONNECT","DISCONNECTED","DROP_TYPES","RESOLVE_IMAGE","SEND","IMAGE_REQUEST","STORE_TOKEN","CLEAR_STORE_TOKEN","UPDATE_VOLUME","UPDATE_PLAYBACK_STATE","UPDATE_PROGRESS_TIMER","MOPIDY_CONNECTED","MOPIDY_DISCONNECTED","updateToken","token","type","Types","clearToken","addNewTrack","key","MopidyApi","params","addCurrentTrack","track","addTrackList","list","removeFromTracklist","updateProgressTimer","position","duration","Infinity","wsConnect","wsConnecting","wsConnected","wsDisconnect","wsDisconnected","mopidyConnected","mopidyDisconnected","getCurrentTrack","getTimePosition","getState","getImage","resolveImage","image","getTrackList","clearTrackList","startPlaying","stopPlaying","pausePlaying","nextPlaying","previousPlaying","getVolume","updateVolume","volume","updatePlaybackState","setVolume","Number","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","millisToSeconds","timerToPercentage","timer","percentage","round","isNaN","toggleSearchSidebar","open","Search","Payload","encode","jwt","data","decode","payload","JSON","parse","encodeToJson","stringify","Notify","success","message","notify","show","warning","store","dispatch","actions","imageUriChooser","composer","album","onMessageHandler","progressTimer","AuthApi","console","log","progress","set","length","jukebox","playbackState","start","stop","playBackChanged","tracklist","forEach","item","name","artist","SearchConst","results","State","loadInitial","action","JukeboxMiddleware","process","socket","next","packMessage","settings","mopidyStateChange","online","onOpen","_evt","ProgressTimer","callback","fallbackTargetFrameRate","disableRequestAnimationFrame","trackProgressTimer","onClose","onMessage","onImage","onSearchResults","Constants","close","io","transports","on","reset","emit","assets","map","initalState","initalProgressState","remaining","mopidyOnline","Object","assign","searchSideBarOpen","query","limit","offset","total","search","Constant","filter","tracks","items","jukeboxApp","combineReducers","SignInToken","refresh","googleApi","workerTimers","reloadAuthResponse","then","response","id_token","err","warn","clear","id","getAssets","getCurrentTrackImageInCache","createSelector","cache","getTracklistImagesInCache","images","SkipButtons","disabled","onPrevious","onNext","cb","Button","onClick","animated","className","Content","hidden","visible","Icon","previousButton","nextButton","Controls","onPlay","onPause","onStop","active","playButton","pauseButton","stopButton","UrlDropArea","connectDropTarget","title","DropTarget","accepts","drop","monitor","onDrop","connect","dropTarget","DragInTrack","backend","HTML5Backend","albumArt","defaultImage","Image","src","CurrentTrack","Card","percent","Header","Meta","year","Description","albumDescription","extra","lookup","spotify","split","color","serviceIcon","Settings","useContext","googleUser","signIn","signOut","avatar","icon","floated","profileObj","rounded","size","imageUrl","Fragment","addedByContent","users","List","user","Item","addedAt","userPicture","dateFormat","fullname","picture","AddedBy","Popup","wide","content","trigger","imageChooser","isCurrent","onRemoveTrack","hasBeenPlayed","klass","inline","trackImage","undefined","listItems","currentTrack","time","index","isCurrentTrack","Date","now","addedBy","classnames","as","trackHeading","trackDescription","Tracklist","relaxed","SearchButton","volumeUp","volumeDown","VolumeButtons","onVolumeChange","Group","Or","text","ClearPlaylist","clearButton","Label","horizontal","handleConfirm","ev","onClear","handleCancel","Confirm","cancelButton","confirmButton","onCancel","onConfirm","onSubmit","onQueryChange","onAddTrack","totalPages","onPageChange","inputEl","useRef","Sidebar","Pushable","animation","inverted","vertical","width","direction","onShow","current","focus","Form","Field","required","ref","placeholder","onChange","fluid","Divider","Pagination","defaultActivePage","firstItem","lastItem","pointing","secondary","divided","Pusher","dimmed","SearchContainer","useSelector","useDispatch","searchActions","mopidyActions","onSearch","searchOptions","activePage","options","evt","target","value","_","Dashboard","onTracklistClear","onSearchClick","trackListImages","Dimmer","Dimmable","blurring","Container","Grid","stackable","columns","Column","DragDropContext","tracklistImages","isSignedIn","disable","googleTokenId","refreshTokenTimeoutID","useEffect","Zi","_item","getItem","urls","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","jukeboxMiddleware","App","googleAuth","useGoogleLogin","clientId","hostedDomain","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48ebdb8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-artwork.6bba9800.png\";","// https://open.spotify.com/track/0c41pMosF5Kqwwegcps8ES\nconst transformUrl = (url) => {\n  const uri = url.replace(/^.*\\/track\\//, 'spotify:track:')\n  return (uri.match(/spotify:track/g) ? uri : null)\n}\n\nmodule.exports = {\n  transformUrl\n}\n","import React from 'react'\n\n// uses code from https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html\nclass ErrorBoundary extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true })\n\n    // You can also log the error to an error reporting service\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`error: ${error}`)\n      console.log(`info: ${info}`)\n    }\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Ouch! I broke a bit.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import React from 'react'\n\nconst GoogleAuthContext = React.createContext()\n\nexport default GoogleAuthContext\n","export default {\n  PLAYBACK_GET_CURRENT_TRACK: 'mopidy::playback.getCurrentTrack',\n  EVENT_TRACK_PLAYBACK_STARTED: 'mopidy::event:trackPlaybackStarted',\n  EVENT_PLAYBACK_STATE_CHANGED: 'mopidy::event:playbackStateChanged',\n  EVENT_PLAYBACK_STATE_RESUMED: 'mopidy::event:trackPlaybackResumed',\n  TRACKLIST_GET_TRACKS: 'mopidy::tracklist.getTracks',\n  TRACKLIST_ADD_TRACK: 'mopidy::tracklist.add',\n  TRACKLIST_REMOVE_TRACK: 'mopidy::tracklist.remove',\n  TRACKLIST_CLEAR: 'mopidy::tracklist.clear',\n  LIBRARY_GET_IMAGES: 'mopidy::library.getImages',\n  PLAYBACK_GET_TIME_POSITION: 'mopidy::playback.getTimePosition',\n  PLAYBACK_GET_PLAYBACK_STATE: 'mopidy::playback.getState',\n  PLAYBACK_PLAY: 'mopidy::playback.play',\n  PLAYBACK_STOP: 'mopidy::playback.stop',\n  PLAYBACK_PAUSE: 'mopidy::playback.pause',\n  PLAYBACK_NEXT: 'mopidy::playback.next',\n  PLAYBACK_BACK: 'mopidy::playback.previous',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  STOPPED: 'stopped',\n  SET_VOLUME: 'mopidy::mixer.setVolume',\n  GET_VOLUME: 'mopidy::mixer.getVolume',\n  EVENT_VOLUME_CHANGED: 'mopidy::event:volumeChanged',\n  VALIDATION_ERROR: 'mopidy::validationError'\n}\n","export default {\n  ADD_CURRENT_TRACK: 'actionAddCurrentTrack',\n  ADD_TRACKS: 'actionAddTracks',\n  CONNECT: 'actionConnect',\n  CONNECTING: 'actionConnecting',\n  CONNECTED: 'actionConnected',\n  DISCONNECT: 'actionDisconnect',\n  DISCONNECTED: 'actionDisconnected',\n  DROP_TYPES: ['__NATIVE_URL__'],\n  RESOLVE_IMAGE: 'actionResolveImage',\n  SEND: 'actionSend',\n  IMAGE_REQUEST: 'actionRequestImage',\n  STORE_TOKEN: 'actionStoreToken',\n  CLEAR_STORE_TOKEN: 'actionClearStoreToken',\n  UPDATE_VOLUME: 'actionUpdateVolume',\n  UPDATE_PLAYBACK_STATE: 'actionPlaybackState',\n  UPDATE_PROGRESS_TIMER: 'actionUpdateProgressTimer',\n  MOPIDY_CONNECTED: 'actionMopidyConnected',\n  MOPIDY_DISCONNECTED: 'actionMopidyDisconnected'\n}\n","import MopidyApi from 'constants/mopidy-api'\nimport Types from 'constants/common'\nimport { transformUrl } from 'utils/spotify'\n\nexport const updateToken = token => {\n  return {\n    type: Types.STORE_TOKEN,\n    token\n  }\n}\n\nexport const clearToken = () => {\n  return {\n    type: Types.CLEAR_STORE_TOKEN\n  }\n}\n\nexport const addNewTrack = url => {\n  let uri = transformUrl(url)\n\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_ADD_TRACK,\n    params: { 'uri': uri }\n  }\n}\n\nexport const addCurrentTrack = track => {\n  return {\n    type: Types.ADD_CURRENT_TRACK,\n    track\n  }\n}\n\nexport const addTrackList = list => {\n  return {\n    type: Types.ADD_TRACKS,\n    list\n  }\n}\n\nexport const removeFromTracklist = uri => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_REMOVE_TRACK,\n    params: { 'uri': [uri] }\n  }\n}\n\nexport const updateProgressTimer = (position, duration) => {\n  if (duration === Infinity) { duration = 0 }\n\n  return {\n    type: Types.UPDATE_PROGRESS_TIMER,\n    position,\n    duration\n  }\n}\n\nexport const wsConnect = () => {\n  return {\n    type: Types.CONNECT\n  }\n}\n\nexport const wsConnecting = () => {\n  return {\n    type: Types.CONNECTING\n  }\n}\n\nexport const wsConnected = () => {\n  return {\n    type: Types.CONNECTED\n  }\n}\n\nexport const wsDisconnect = () => {\n  return {\n    type: Types.DISCONNECT\n  }\n}\n\nexport const wsDisconnected = () => {\n  return {\n    type: Types.DISCONNECTED\n  }\n}\n\nexport const mopidyConnected = () => {\n  return {\n    type: Types.MOPIDY_CONNECTED\n  }\n}\n\nexport const mopidyDisconnected = () => {\n  return {\n    type: Types.MOPIDY_DISCONNECTED\n  }\n}\n\nexport const getCurrentTrack = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_CURRENT_TRACK\n  }\n}\n\nexport const getTimePosition = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_TIME_POSITION\n  }\n}\n\nexport const getState = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_PLAYBACK_STATE\n  }\n}\n\nexport const getImage = (uri) => {\n  return {\n    type: Types.IMAGE_REQUEST,\n    key: MopidyApi.LIBRARY_GET_IMAGES,\n    params: [[uri]],\n    uri: uri\n  }\n}\n\nexport const resolveImage = (image) => {\n  return {\n    type: Types.RESOLVE_IMAGE,\n    image\n  }\n}\n\nexport const getTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_GET_TRACKS\n  }\n}\n\nexport const clearTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_CLEAR\n  }\n}\n\nexport const startPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PLAY\n  }\n}\n\nexport const stopPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_STOP\n  }\n}\n\nexport const pausePlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PAUSE\n  }\n}\n\nexport const nextPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_NEXT\n  }\n}\n\nexport const previousPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_BACK\n  }\n}\n\nexport const getVolume = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.GET_VOLUME\n  }\n}\n\nexport const updateVolume = (volume) => {\n  return {\n    type: Types.UPDATE_VOLUME,\n    volume\n  }\n}\n\nexport const updatePlaybackState = (state) => {\n  return {\n    type: Types.UPDATE_PLAYBACK_STATE,\n    state\n  }\n}\n\nexport const setVolume = (volume) => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.SET_VOLUME,\n    params: [Number(volume)]\n  }\n}\n","export default {\n  SEARCH: 'actionTrackSearch',\n  SEARCH_GET_TRACKS: 'search::getTracks',\n  STORE_SEARCH_RESULTS: 'actionStoreSearchResults',\n  STORE_SEARCH_QUERY: 'actionStoreSearchQuery',\n  TOGGLE_SEARCH_SIDEBAR: 'actionToggleSearchSidebar',\n  REMOVE_FROM_SEARCH_RESULTS: 'actionRemoveFromSearchResults'\n}\n","import ProgressTimer from 'media-progress-timer'\n\nexport const millisToMinutesAndSeconds = (millis) => {\n  let minutes = Math.floor(millis / 60000)\n  let seconds = ((millis % 60000) / 1000).toFixed(0)\n  return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n}\n\nexport const millisToSeconds = (millis) => {\n  return millis * 0.001\n}\n\nexport const timerToPercentage = timer => {\n  if (timer.duration === 0) { return 0 }\n  const position = millisToSeconds(timer.position)\n  const duration = millisToSeconds(timer.duration)\n  const percentage = Math.round((position / duration) * 100)\n\n  return isNaN(percentage) ? 0 : percentage\n}\n\nexport const trackProgressTimer = (store, actions) => {\n  return ProgressTimer({\n    callback: (position, duration) => {\n      store.dispatch(actions.updateProgressTimer(position, duration))\n    },\n    fallbackTargetFrameRate: 1,\n    disableRequestAnimationFrame: true\n  })\n}\n","import Search from 'search/constants'\n\nexport const toggleSearchSidebar = (open) => {\n  return {\n    type: Search.TOGGLE_SEARCH_SIDEBAR,\n    open\n  }\n}\n\nexport const storeSearchResults = (results) => {\n  return {\n    type: Search.STORE_SEARCH_RESULTS,\n    results\n  }\n}\n\nexport const storeSearchQuery = (query) => {\n  return {\n    type: Search.STORE_SEARCH_QUERY,\n    query\n  }\n}\n\nexport const search = (query, options) => {\n  return {\n    type: Search.SEARCH,\n    key: Search.SEARCH_GET_TRACKS,\n    params: { query, options }\n  }\n}\n\nexport const removeFromSearchResults = (uri) => {\n  return {\n    type: Search.REMOVE_FROM_SEARCH_RESULTS,\n    uri\n  }\n}\n","export default {\n  AUTHENTICATION_TOKEN_INVALID: 'auth::authenticationTokenInvalid'\n}\n","const Payload = {\n  encode: (jwt, key, data) => {\n    return {\n      jwt,\n      key,\n      data\n    }\n  },\n\n  decode: payload => {\n    return JSON.parse(payload)\n  },\n\n  encodeToJson: (jwt, key, data) => {\n    return JSON.stringify(Payload.encode(jwt, key, data))\n  }\n}\n\nexport default Payload\n","import { notify } from 'react-notify-toast'\n\nconst Notify = {\n  success: (message) => notify.show(message, 'success', 3000, {}),\n  warning: (message) => notify.show(message, 'warning', 3000, {})\n}\n\nexport default Notify\n","import * as actions from 'actions'\nimport * as searchActions from 'search/actions'\nimport AuthApi from 'constants/auth-api'\nimport MopidyApi from 'constants/mopidy-api'\nimport SearchConst from 'search/constants'\nimport Payload from 'utils/payload'\nimport notify from 'utils/notify'\n\nconst updatePlaybackState = (store, state) => {\n  store.dispatch(actions.updatePlaybackState(state))\n}\n\nconst playBackChanged = (store, state, progress) => {\n  switch (state) {\n    case MopidyApi.PAUSED:\n    case MopidyApi.STOPPED:\n      updatePlaybackState(store, state)\n      progress.stop()\n      notify.success('Jukebox Halted')\n      break\n    case MopidyApi.PLAYING:\n      updatePlaybackState(store, state)\n      progress.start()\n      break\n    default:\n      break\n  }\n}\n\nconst imageUriChooser = (track) => {\n  if (track.composer) return track.composer.uri\n  return track.album.uri\n}\n\nconst addCurrentTrack = (track, store, progress) => {\n  store.dispatch(actions.addCurrentTrack(track))\n  if (!track.image) {\n    store.dispatch(actions.getImage(imageUriChooser(track)))\n  }\n  const progressTimer = progress.set(0, track.length)\n  if (store.getState().jukebox.playbackState === MopidyApi.PLAYING) progressTimer.start()\n}\n\nconst addTrackList = (tracklist, store) => {\n  store.dispatch(actions.addTrackList(tracklist))\n  tracklist.forEach(item => {\n    if (!item.track.image) {\n      store.dispatch(actions.getImage(imageUriChooser(item.track)))\n    }\n  })\n}\n\nconst onMessageHandler = (store, payload, progressTimer) => {\n  const { key, data } = Payload.decode(payload)\n\n  switch (key) {\n    case AuthApi.AUTHENTICATION_TOKEN_INVALID:\n      console.log(`AUTHENTICATION_TOKEN_INVALID: ${data.error}`)\n      store.dispatch(actions.clearToken())\n      break\n    case MopidyApi.PLAYBACK_GET_CURRENT_TRACK:\n    case MopidyApi.EVENT_TRACK_PLAYBACK_STARTED:\n      if (data && data.track) addCurrentTrack(data.track, store, progressTimer)\n      break\n    case MopidyApi.EVENT_PLAYBACK_STATE_CHANGED:\n    case MopidyApi.PLAYBACK_GET_PLAYBACK_STATE:\n      playBackChanged(store, data, progressTimer)\n      break\n    case MopidyApi.TRACKLIST_GET_TRACKS:\n      addTrackList(data, store)\n      break\n    case MopidyApi.TRACKLIST_ADD_TRACK:\n      const track = data.track\n      notify.success(`Adding: ${track.name} / ${track.album.name} by ${track.artist.name}`)\n      break\n    case MopidyApi.PLAYBACK_NEXT:\n    case MopidyApi.PLAYBACK_BACK:\n      store.dispatch(actions.getCurrentTrack())\n      break\n    case MopidyApi.GET_VOLUME:\n      store.dispatch(actions.updateVolume(data))\n      break\n    case MopidyApi.EVENT_VOLUME_CHANGED:\n      store.dispatch(actions.updateVolume(data))\n      notify.success('Volume Changed')\n      break\n    case MopidyApi.LIBRARY_GET_IMAGES:\n      store.dispatch(actions.resolveImage(data))\n      break\n    case MopidyApi.PLAYBACK_GET_TIME_POSITION:\n      progressTimer.set(data)\n      break\n    case SearchConst.SEARCH_GET_TRACKS:\n      store.dispatch(searchActions.storeSearchResults(data))\n      break\n    case MopidyApi.VALIDATION_ERROR:\n      notify.warning(data)\n      break\n    default:\n      console.log(`Unknown message: ${key} body: ${data}`)\n      break\n  }\n}\n\nexport default onMessageHandler\n","import * as actions from 'actions'\n\nconst State = {\n  loadInitial: (store) => {\n    [\n      'getCurrentTrack',\n      'getTimePosition',\n      'getState',\n      'getTrackList',\n      'getVolume'\n    ].forEach(action => {\n      store.dispatch(actions[action]())\n    })\n  }\n}\n\nexport default State\n","import io from 'socket.io-client'\nimport * as actions from 'actions'\nimport Constants from 'constants/common'\nimport SearchConst from 'search/constants'\nimport { trackProgressTimer } from 'utils/time'\nimport onMessageHandler from 'utils/on-message-handler'\nimport Payload from 'utils/payload'\nimport State from 'utils/state'\n\nconst JukeboxMiddleware = (() => {\n  let url = `http://${process.env.REACT_APP_WS_URL}:${process.env.REACT_APP_WS_PORT}`\n  let socket = null\n  let progressTimer = null\n\n  return store => next => action => {\n    const imageIsCached = () => store.getState().assets[action.uri]\n    const getJWT = () => store.getState().settings.token\n    const packMessage = () => Payload.encodeToJson(getJWT(store), action.key, action.params)\n\n    const mopidyStateChange = data => {\n      if (JSON.parse(data).online) {\n        store.dispatch(actions.mopidyConnected())\n        return State.loadInitial(store)\n      }\n      store.dispatch(actions.mopidyDisconnected())\n    }\n    const onOpen = _evt => {\n      progressTimer = trackProgressTimer(store, actions)\n      store.dispatch(actions.wsConnected())\n    }\n    const onClose = _evt => store.dispatch(actions.wsDisconnect())\n    const onMessage = data => onMessageHandler(store, data, progressTimer)\n    const onImage = data => onMessageHandler(store, data, progressTimer)\n    const onSearchResults = data => onMessageHandler(store, data, progressTimer)\n    const onConnect = () => {\n      if (socket != null) socket.close()\n      socket = io(url, { transports: ['websocket'] })\n      socket.on('image', onImage)\n      socket.on('search', onSearchResults)\n      socket.on('mopidy', mopidyStateChange)\n      socket.on('message', onMessage)\n      socket.on('connect', onOpen)\n      socket.on('disconnect', onClose)\n\n      store.dispatch(actions.wsConnecting())\n    }\n    const onDisconnect = () => {\n      if (progressTimer) { progressTimer.reset() }\n      store.dispatch(actions.wsDisconnected())\n    }\n\n    switch (action.type) {\n      case Constants.CONNECT:\n        return onConnect()\n      case Constants.DISCONNECT:\n        return onDisconnect()\n      case Constants.SEND:\n        return socket.emit('message', packMessage())\n      case SearchConst.SEARCH:\n        return socket.emit('search', packMessage())\n      case Constants.IMAGE_REQUEST:\n        if (imageIsCached()) return\n        return socket.emit('message', packMessage())\n      default:\n        return next(action)\n    }\n  }\n})()\n\nexport default JukeboxMiddleware\n","import Types from 'constants/common'\n\nconst track = (state = null, action) => {\n  switch (action.type) {\n    case Types.ADD_CURRENT_TRACK:\n      return action.track\n    default:\n      return state\n  }\n}\n\nexport default track\n","import Types from 'constants/common'\n\nconst tracklist = (state = [], action) => {\n  switch (action.type) {\n    case Types.ADD_TRACKS:\n      return action.list.map(item => item.track)\n    default:\n      return state\n  }\n}\n\nexport default tracklist\n","import Types from 'constants/common'\n\nconst initalState = {}\n\nconst assets = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.RESOLVE_IMAGE:\n      return { ...state, ...action.image }\n    default:\n      return state\n  }\n}\n\nexport default assets\n","import Types from 'constants/common'\n\nconst initalProgressState = {\n  position: 0,\n  duration: 0,\n  remaining: 0\n}\n\nconst timer = (state = initalProgressState, action) => {\n  switch (action.type) {\n    case Types.UPDATE_PROGRESS_TIMER:\n      return {\n        position: action.position,\n        duration: action.duration,\n        remaining: action.duration - action.position\n      }\n    default:\n      return state\n  }\n}\n\nexport default timer\n","import MopidyApi from 'constants/mopidy-api'\nimport Types from 'constants/common'\n\nconst initalState = {\n  online: false,\n  mopidyOnline: false,\n  volume: 0,\n  playbackState: MopidyApi.STOPPED\n}\n\nconst jukebox = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.CONNECTED:\n      return Object.assign({}, state, {\n        online: true\n      })\n    case Types.DISCONNECTED:\n      return Object.assign({}, state, {\n        online: false\n      })\n    case Types.MOPIDY_CONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: true\n      })\n    case Types.MOPIDY_DISCONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: false\n      })\n    case Types.UPDATE_VOLUME:\n      return Object.assign({}, state, {\n        volume: action.volume\n      })\n    case Types.UPDATE_PLAYBACK_STATE:\n      return Object.assign({}, state, {\n        playbackState: action.state\n      })\n    default:\n      return state\n  }\n}\n\nexport default jukebox\n","import Types from 'constants/common'\n\nconst initalState = {\n  token: null\n}\n\nconst settings = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.STORE_TOKEN:\n      if (action.token === state.token) return state\n      return Object.assign({}, state, {\n        token: action.token\n      })\n    case Types.CLEAR_STORE_TOKEN:\n      return Object.assign({}, state, {\n        token: null\n      })\n    default:\n      return state\n  }\n}\n\nexport default settings\n","import Constant from 'search/constants'\n\nconst initalState = {\n  searchSideBarOpen: false,\n  query: '',\n  limit: 20,\n  offset: 0,\n  total: 0,\n  results: []\n}\n\nconst search = (state = initalState, action) => {\n  switch (action.type) {\n    case Constant.REMOVE_FROM_SEARCH_RESULTS:\n      return {\n        ...state,\n        results: state.results.filter(item => {\n          return item.track.uri !== action.uri\n        })\n      }\n    case Constant.TOGGLE_SEARCH_SIDEBAR:\n      return Object.assign({}, state, {\n        searchSideBarOpen: action.open\n      })\n    case Constant.STORE_SEARCH_QUERY:\n      return Object.assign({}, state, {\n        query: action.query\n      })\n    case Constant.STORE_SEARCH_RESULTS:\n      const results = action.results.tracks\n      return Object.assign({}, state, {\n        limit: results.limit,\n        offset: results.offset,\n        total: results.total > 10000 ? 10000 : results.total,\n        results: results.items\n      })\n    default:\n      return state\n  }\n}\n\nexport default search\n","import { combineReducers } from 'redux'\nimport track from 'reducers/track'\nimport tracklist from 'reducers/tracklist'\nimport assets from 'reducers/assets'\nimport timer from 'reducers/timer'\nimport jukebox from 'reducers/jukebox'\nimport settings from 'reducers/settings'\nimport search from 'search/reducers'\n\nconst jukeboxApp = combineReducers({\n  track,\n  tracklist,\n  assets,\n  timer,\n  jukebox,\n  settings,\n  search\n})\n\nexport default jukeboxApp\n","import * as workerTimers from 'worker-timers'\n\nconst checkForTokenInMilliseconds = 2700000\n\nconst SignInToken = {\n  refresh: (googleApi, success) => {\n    return workerTimers.setTimeout(() => {\n      googleApi.reloadAuthResponse().then(\n        (response) => success(response.id_token),\n        (err) => console.warn('Token un-refreshable: ', err.message))\n    }, checkForTokenInMilliseconds)\n  },\n  clear: (id) => { if (id) workerTimers.clearTimeout(id) }\n}\n\nexport default SignInToken\n","import { createSelector } from 'reselect'\n\nconst getCurrentTrack = (state) => state.track\nconst getTrackList = (state) => state.tracklist\nconst getAssets = (state) => state.assets\n\nexport const getCurrentTrackImageInCache = createSelector(\n  [getCurrentTrack, getAssets],\n  (track, cache) => {\n    if (!track) { return null }\n    return track.album.image || cache[track.album.uri]\n  }\n)\n\nexport const getTracklistImagesInCache = createSelector(\n  [getTrackList, getAssets],\n  (tracklist, cache) => {\n    const images = {}\n    tracklist.forEach(track => {\n      images[track.album.uri] = track.album.image || cache[track.album.uri]\n    })\n    return images\n  }\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst previousButton = (cb, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    className='jb-previous-button'\n    disabled={disabled}\n  >\n    <Button.Content hidden>Prev</Button.Content>\n    <Button.Content visible>\n      <Icon name='step backward' />\n    </Button.Content>\n  </Button>\n)\n\nconst nextButton = (cb, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    className='jb-next-button'\n    disabled={disabled}\n  >\n    <Button.Content hidden>Next</Button.Content>\n    <Button.Content visible>\n      <Icon name='step forward' />\n    </Button.Content>\n  </Button>\n)\n\nconst SkipButtons = ({ disabled, onPrevious, onNext }) => (\n  <span>\n    {previousButton(onPrevious, disabled)}\n    {nextButton(onNext, disabled)}\n  </span>\n)\n\nSkipButtons.propTypes = {\n  disabled: PropTypes.bool,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default SkipButtons\n","import React from 'react'\nimport SkipButtons from 'components/skip-buttons'\nimport MopidyApi from 'constants/mopidy-api'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst playButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.PLAYING || disabled)}\n    active={(playbackState === MopidyApi.PLAYING)}\n    className='jb-play-button'\n  >\n    <Button.Content hidden>Play</Button.Content>\n    <Button.Content visible>\n      <Icon name='play' />\n    </Button.Content>\n  </Button>\n)\n\nconst pauseButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.PAUSED || playbackState === MopidyApi.STOPPED || disabled)}\n    active={(playbackState === MopidyApi.PAUSED)}\n    className='jb-pause-button'\n  >\n    <Button.Content hidden>Pause</Button.Content>\n    <Button.Content visible>\n      <Icon name='pause' />\n    </Button.Content>\n  </Button>\n)\n\nconst stopButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.STOPPED || disabled)}\n    active={(playbackState === MopidyApi.STOPPED)}\n    className='jb-stop-button'\n  >\n    <Button.Content hidden>Stop</Button.Content>\n    <Button.Content visible>\n      <Icon name='stop' />\n    </Button.Content>\n  </Button>\n)\n\nconst Controls = (props) => {\n  const { disabled, playbackState, onPlay, onPause, onStop, onPrevious, onNext } = props\n  return (\n    <span>\n      <SkipButtons\n        disabled={disabled}\n        onPrevious={onPrevious}\n        onNext={onNext}\n      />\n      {playButton(onPlay, playbackState, disabled)}\n      {pauseButton(onPause, playbackState, disabled)}\n      {stopButton(onStop, playbackState, disabled)}\n    </span>\n  )\n}\n\nControls.propTypes = {\n  disabled: PropTypes.bool,\n  playbackState: PropTypes.string,\n  onPlay: PropTypes.func.isRequired,\n  onPause: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default Controls\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DropTarget } from 'react-dnd'\n\nconst boxTarget = {\n  drop (props, monitor) {\n    if (props.onDrop) {\n      props.onDrop(props, monitor)\n    }\n  }\n}\n\nconst boxHandler = (connect, monitor) => {\n  return {\n    connectDropTarget: connect.dropTarget()\n  }\n}\n\nclass UrlDropArea extends Component {\n  render () {\n    const { connectDropTarget } = this.props\n\n    return connectDropTarget(\n      <div title='Drag in Spotify tracks to add to playlist'>\n        { this.props.children }\n      </div>\n    )\n  }\n}\n\nUrlDropArea.propTypes = {\n  connectDropTarget: PropTypes.func.isRequired,\n  accepts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onDrop: PropTypes.func\n}\n\nexport default DropTarget(props => props.accepts, boxTarget, boxHandler)(UrlDropArea)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DragDropContextProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport Constants from 'constants/common'\nimport UrlDropArea from 'components/url-drop-area'\n\nconst DragInTrack = ({ disabled, onDrop, children }) => {\n  if (disabled) { return children }\n\n  return (\n    <DragDropContextProvider backend={HTML5Backend}>\n      <UrlDropArea accepts={Constants.DROP_TYPES} onDrop={onDrop}>\n        { children }\n      </UrlDropArea>\n    </DragDropContextProvider>\n  )\n}\n\nDragInTrack.propTypes = {\n  disabled: PropTypes.bool,\n  onDrop: PropTypes.func.isRequired\n}\n\nexport default DragInTrack\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Icon, Image } from 'semantic-ui-react'\nimport { Line } from 'rc-progress'\nimport defaultImage from './default-artwork.png'\nimport { millisToMinutesAndSeconds } from 'utils/time'\nimport './index.css'\n\nconst albumDescription = album => {\n  if (!album) return null\n  const year = album.year ? ` (${album.year})` : null\n  return <Card.Description>{album.name}{year}</Card.Description>\n}\n\nconst composerDescription = composer => {\n  if (!composer) return null\n  return <Card.Description>{composer.name}</Card.Description>\n}\n\nconst albumArt = (image) => {\n  if (!image) image = defaultImage\n  return <Image src={image} />\n}\n\nconst serviceIcon = (uri) => {\n  const lookup = {\n    spotify: 'green'\n  }\n  const key = uri.split(':')[0]\n  if (!lookup[key]) return null\n  return <Icon name={key} color={lookup[key]} />\n}\n\nconst noTrack = () => (\n  <Card>\n    { albumArt(null) }\n    <Card.Content>\n      <Card.Header>Nothing playing</Card.Header>\n      <Card.Description>Drag some music here or press play.</Card.Description>\n    </Card.Content>\n  </Card>\n)\n\nconst CurrentTrack = ({ track, image, progress, remaining }) => {\n  if (!track) { return noTrack() }\n\n  return (\n    <Card>\n      { albumArt(image) }\n      <Card.Content>\n        <div className='progress-container'>\n          <span className='remaining-text'>{millisToMinutesAndSeconds(remaining)}</span>\n          <span className='track-length'>{millisToMinutesAndSeconds(track.length)}</span>\n          <Line percent={progress} />\n        </div>\n        <Card.Header>{track.name}</Card.Header>\n        <Card.Meta>{track.artist.name}</Card.Meta>\n        { albumDescription(track.album) }\n        { composerDescription(track.composer) }\n      </Card.Content>\n      <Card.Content extra>\n        {serviceIcon(track.uri)}\n      </Card.Content>\n    </Card>\n  )\n}\n\nCurrentTrack.propTypes = {\n  track: PropTypes.object,\n  image: PropTypes.string,\n  progress: PropTypes.number,\n  remaining: PropTypes.number\n}\n\nexport default CurrentTrack\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { timerToPercentage } from 'utils/time'\nimport { getCurrentTrackImageInCache } from 'selectors'\nimport CurrentTrack from 'components/current-track'\n\nexport const CurrentTrackContainer = ({ track, image, progress, remaining }) => (\n  <CurrentTrack\n    track={track}\n    image={image}\n    progress={progress}\n    remaining={remaining}\n  />\n)\n\nconst mapStateToProps = state => {\n  return {\n    track: state.track,\n    image: getCurrentTrackImageInCache(state),\n    progress: timerToPercentage(state.timer),\n    remaining: state.timer.remaining\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(CurrentTrackContainer)\n","import React, { useContext } from 'react'\nimport { Button, Image } from 'semantic-ui-react'\nimport GoogleAuthContext from 'contexts/google'\nimport './index.css'\n\nexport const Settings = () => {\n  const { googleUser, signIn, signOut } = useContext(GoogleAuthContext)\n\n  let avatar = (\n    <Button\n      icon='power off'\n      floated='right'\n      onClick={() => signIn()}\n      className='jb-settings-toggle'\n      title='Login using Google'\n    />\n  )\n  if (googleUser && googleUser.profileObj) {\n    avatar = (\n      <Image\n        rounded\n        size='mini'\n        floated='right'\n        title={googleUser.profileObj.name}\n        src={googleUser.profileObj.imageUrl}\n        onClick={() => signOut()}\n      />\n    )\n  }\n\n  return (\n    <React.Fragment>{avatar}</React.Fragment>\n  )\n}\n\nexport default Settings\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { List, Popup, Icon, Image } from 'semantic-ui-react'\nimport dateFormat from 'dateformat'\n\nconst addedByContent = (users) => {\n  if (users.length) {\n    return (\n      <List>\n        {\n          users.map(user => {\n            return (\n              <List.Item key={user.addedAt}>\n                {userPicture(user)}\n                <List.Content>\n                  <List.Description>\n                    <strong>{dateFormat(user.addedAt, 'dd mmm yyyy @ h:MM tt')}</strong> - {user.fullname}\n                  </List.Description>\n                </List.Content>\n              </List.Item>\n            )\n          })\n        }\n      </List>\n    )\n  }\n\n  return 'First time played.'\n}\n\nconst userPicture = user => {\n  if (user && user.picture) return <Image avatar className='tracklist_avatar_image' src={user.picture} />\n  return <Icon name='spotify' color='green' />\n}\n\nconst AddedBy = ({ users = [] }) => {\n  return (\n    <Popup\n      wide\n      content={addedByContent(users)}\n      trigger={userPicture(users[0])}\n    />\n  )\n}\n\nAddedBy.propTypes = {\n  users: PropTypes.array\n}\n\nexport default AddedBy\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { List, Image } from 'semantic-ui-react'\nimport { millisToMinutesAndSeconds } from 'utils/time'\nimport defaultImage from 'components/current-track/default-artwork.png'\nimport AddedBy from './added-by'\nimport './index.css'\n\nconst isCurrentTrack = (currentTrack, track) => {\n  if (!currentTrack) return false\n  return currentTrack.uri === track.uri\n}\n\nconst trackImage = ({ image, isCurrent, onClick, hasBeenPlayed }) => {\n  let klass, title\n\n  if (isCurrent) klass = 'current-image'\n  if (onClick && !isCurrent) {\n    title = 'Click to remove from playlist'\n    klass = 'remove-image'\n  }\n\n  return (\n    <Image\n      className={klass}\n      size={hasBeenPlayed ? 'tiny' : 'mini'}\n      src={image}\n      title={title}\n      onClick={onClick}\n      inline\n    />\n  )\n}\n\nconst removeTrack = (uri, cb) => {\n  return () => cb(uri)\n}\n\nconst imageChooser = (disabled, track, images, isCurrent, onRemoveTrack, hasBeenPlayed) => {\n  let image\n  if (track.image) image = track.image\n  if (!image && images && track.album) image = images[track.album.uri]\n  if (!image && images && track.composer) image = images[track.composer.uri]\n  if (!image) image = defaultImage\n\n  return trackImage({\n    image,\n    hasBeenPlayed,\n    isCurrent,\n    onClick: (!disabled && !isCurrent) ? removeTrack(track.uri, onRemoveTrack) : undefined\n  })\n}\n\nconst trackHeading = (track) => (\n  <List.Header as='h4'>{track.name}</List.Header>\n)\n\nconst trackDescription = (track) => (\n  <List.Description>\n    {track.artist.name} <small>({millisToMinutesAndSeconds(track.length)})</small>\n  </List.Description>\n)\n\nconst listItems = (disabled, tracks, images, currentTrack, onRemoveTrack) => {\n  let time\n\n  return tracks.map((track, index) => {\n    const isCurrent = isCurrentTrack(currentTrack, track)\n    if (time) time += track.length\n    if (isCurrent) time = Date.now()\n    const { addedBy } = track\n    return (\n      <List.Item\n        className={classnames({ 'current-track': isCurrent })}\n        key={`${index}-${track.uri}`}\n      >\n        { imageChooser(disabled, track, images, isCurrent, onRemoveTrack, time) }\n        <List.Content\n          className={classnames({ 'track-info': !time })}\n        >\n          {trackHeading(track)}\n          {trackDescription(track)}\n          <AddedBy users={addedBy} />\n        </List.Content>\n      </List.Item>\n    )\n  })\n}\n\nconst Tracklist = ({ disabled, tracks, images, currentTrack, onRemoveTrack }) => {\n  if (!tracks) { return null }\n\n  return (\n    <List relaxed>\n      {listItems(disabled, tracks, images, currentTrack, onRemoveTrack)}\n    </List>\n  )\n}\n\nTracklist.propTypes = {\n  disabled: PropTypes.bool,\n  tracks: PropTypes.array,\n  images: PropTypes.object,\n  currentTrack: PropTypes.object,\n  onRemoveTrack: PropTypes.func.isRequired\n}\n\nexport default Tracklist\n","import React from 'react'\nimport { func, bool } from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst SearchButton = ({ onClick, disabled }) => (\n  <Button\n    animated='vertical'\n    floated='right'\n    onClick={onClick}\n    disabled={disabled}\n  >\n    <Button.Content hidden>Search</Button.Content>\n    <Button.Content visible>\n      <Icon name='search' />\n    </Button.Content>\n  </Button>\n)\n\nSearchButton.propTypes = {\n  onClick: func.isRequired,\n  disabled: bool.isRequired\n}\n\nexport default SearchButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst VOLUME_INC = 1\nconst VOLUME_MAX = 100\nconst VOLUME_MIN = 0\n\nconst volumeUp = (volume, cb) => {\n  volume += VOLUME_INC\n  if (volume <= VOLUME_MAX) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst volumeDown = (volume, cb) => {\n  volume -= VOLUME_INC\n  if (volume >= VOLUME_MIN) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst VolumeButtons = ({ disabled, volume, onVolumeChange }) => (\n  <Button.Group floated='right'>\n    <Button\n      className='jb-volume-down'\n      onClick={volumeDown(volume, onVolumeChange)}\n      disabled={disabled}\n    >\n      <Icon name='volume down' />\n    </Button>\n    <Button.Or text={volume} />\n    <Button\n      className='jb-volume-up'\n      onClick={volumeUp(volume, onVolumeChange)}\n      disabled={disabled}\n    >\n      <Icon name='volume up' />\n    </Button>\n  </Button.Group>\n)\n\nVolumeButtons.propTypes = {\n  disabled: PropTypes.bool,\n  volume: PropTypes.number,\n  onVolumeChange: PropTypes.func.isRequired\n}\n\nexport default VolumeButtons\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Confirm, Label } from 'semantic-ui-react'\n\nclass ClearPlaylist extends Component {\n  state = { open: false }\n\n  clearButton = () => {\n    return (\n      <Label\n        horizontal\n        size='mini'\n        as='a'\n        color='red'\n        onClick={this.show}\n        className='jb-clear-button'\n      >CLEAR</Label>\n    )\n  }\n\n  show = () => {\n    this.setState({ open: true })\n  }\n\n  handleConfirm = (ev) => {\n    this.setState({ open: false })\n    this.props.onClear(ev)\n  }\n\n  handleCancel = () => {\n    this.setState({ open: false })\n  }\n\n  render () {\n    if (this.props.disabled) { return null }\n\n    return (\n      <span>\n        {this.clearButton()}\n        <Confirm\n          content='Are you sure you want to nuke the playlist?'\n          cancelButton='No thanks'\n          confirmButton='Do it!'\n          open={this.state.open}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n        />\n      </span>\n    )\n  }\n}\n\nClearPlaylist.propTypes = {\n  disabled: PropTypes.bool,\n  onClear: PropTypes.func.isRequired\n}\n\nexport default ClearPlaylist\n","import React, { useRef } from 'react'\nimport { func, bool, array, number } from 'prop-types'\nimport { Sidebar, Button, Form, List, Header, Divider, Image, Pagination } from 'semantic-ui-react'\nimport './index.css'\n\nconst Search = (props) => {\n  const {\n    visible, onClose, results, onSubmit,\n    onQueryChange, onAddTrack, totalPages, onPageChange\n  } = props\n  const inputEl = useRef(null)\n\n  const addTrack = (uri) => () => {\n    onAddTrack(uri)\n  }\n\n  const SearchItems = () => (\n    results.map((item) => (\n      <div className='search-list-item' key={item.track.uri} onClick={addTrack(item.track.uri)}>\n        <Image\n          floated='left'\n          src={item.track.image}\n          size='mini'\n          title={`Click to add - ${item.track.name} - ${item.track.artist.name}`}\n          className='search-list-item__image'\n        />\n        <List.Content>\n          <div className='search-list-item__header'>{item.track.name} - {item.track.artist.name}</div>\n          <div className='search-list-item__content'>{item.track.album.name}</div>\n        </List.Content>\n      </div>\n    ))\n  )\n\n  return (\n    <Sidebar.Pushable>\n      <Sidebar\n        animation='overlay'\n        icon='labeled'\n        inverted='true'\n        vertical='true'\n        visible={visible}\n        width='very wide'\n        direction='right'\n        className='sidebar-search'\n        onShow={() => inputEl.current.focus()}\n      >\n        <Form inverted onSubmit={onSubmit}>\n          <Form.Field>\n            <label required>SEARCH</label>\n            <input\n              ref={inputEl}\n              placeholder='track, artist or album'\n              onChange={onQueryChange}\n            />\n          </Form.Field>\n          <Button type='submit' fluid>Submit</Button>\n        </Form>\n        <Divider horizontal>\n          <Header as='h4' inverted>Results</Header>\n        </Divider>\n        {(totalPages > 0) &&\n          <Pagination\n            className='search-list-pagination'\n            defaultActivePage={1}\n            firstItem={null}\n            lastItem={null}\n            pointing\n            secondary\n            totalPages={totalPages}\n            onPageChange={onPageChange}\n          />\n        }\n        <List divided relaxed inverted size='tiny'>\n          <SearchItems />\n        </List>\n      </Sidebar>\n      <Sidebar.Pusher\n        dimmed={visible}\n        onClick={visible ? onClose : null}\n      >\n        { props.children }\n      </Sidebar.Pusher>\n    </Sidebar.Pushable >\n  )\n}\n\nSearch.propTypes = {\n  onClose: func.isRequired,\n  onSubmit: func.isRequired,\n  onQueryChange: func.isRequired,\n  onAddTrack: func.isRequired,\n  onPageChange: func.isRequired,\n  visible: bool.isRequired,\n  results: array.isRequired,\n  totalPages: number.isRequired\n}\n\nexport default Search\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as mopidyActions from 'actions'\nimport * as searchActions from 'search/actions'\nimport SearchSidebar from 'search/components/sidebar'\n\nexport const SearchContainer = (props) => {\n  const search = useSelector(state => state.search)\n  const dispatch = useDispatch()\n\n  const onAddTrack = (uri) => {\n    dispatch(searchActions.removeFromSearchResults(uri))\n    dispatch(mopidyActions.addNewTrack(uri))\n  }\n\n  const onSearch = (params) => {\n    const searchOptions = {\n      offset: (params.activePage - 1) * search.limit,\n      limit: search.limit\n    }\n    dispatch(searchActions.search(search.query, searchOptions))\n  }\n\n  return (\n    <SearchSidebar\n      visible={search.searchSideBarOpen}\n      onClose={() => dispatch(searchActions.toggleSearchSidebar(false))}\n      onSubmit={() => onSearch({ activePage: 1 })}\n      onAddTrack={(uri) => onAddTrack(uri)}\n      onQueryChange={(evt) => dispatch(searchActions.storeSearchQuery(evt.target.value))}\n      onPageChange={(_, data) => onSearch(data)}\n      results={search.results}\n      totalPages={Math.round(search.total / search.limit)}\n    >\n      { props.children }\n    </SearchSidebar>\n  )\n}\n\nexport default SearchContainer\n","import React from 'react'\nimport { Dimmer, Divider, Grid, Header, Container } from 'semantic-ui-react'\nimport Controls from 'components/controls'\nimport DragInTrack from 'components/drag-in-track'\nimport CurrentTrackContainer from 'containers/current-track-container'\nimport Settings from 'components/settings'\nimport TrackList from 'components/tracklist'\nimport SearchButton from 'search/components/button'\nimport VolumeButtons from 'components/volume-buttons'\nimport ClearPlaylist from 'components/clear-playlist'\nimport SearchContainer from 'search'\nimport './index.css'\n\nconst Dashboard = (props) => {\n  const {\n    online,\n    disabled,\n    volume,\n    playbackState,\n    onPlay,\n    onStop,\n    onPause,\n    onNext,\n    onPrevious,\n    onVolumeChange,\n    onDrop,\n    onTracklistClear,\n    onSearchClick,\n    trackListImages,\n    tracklist,\n    currentTrack,\n    onRemoveTrack\n  } = props\n\n  return (\n    <Dimmer.Dimmable\n      blurring\n      dimmed={!online}\n    >\n      <SearchContainer>\n        <Container className='header-wrapper' fluid>\n          <Settings />\n          <VolumeButtons\n            disabled={disabled}\n            volume={volume}\n            onVolumeChange={onVolumeChange}\n          />\n          <SearchButton\n            onClick={onSearchClick}\n            disabled={disabled}\n          />\n          <Controls\n            disabled={disabled}\n            playbackState={playbackState}\n            onPlay={onPlay}\n            onStop={onStop}\n            onPause={onPause}\n            onNext={onNext}\n            onPrevious={onPrevious}\n          />\n        </Container>\n        <Divider />\n        <Container className='body-wrapper' fluid>\n          <Grid stackable columns={2} className='dashboard-grid'>\n            <Grid.Column width={4}>\n              <DragInTrack\n                disabled={disabled}\n                onDrop={onDrop}\n              >\n                <Header size='small'>Current Track</Header>\n                <CurrentTrackContainer />\n              </DragInTrack>\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <Header size='small'>\n                Playlist <ClearPlaylist\n                  disabled={disabled}\n                  onClear={onTracklistClear}\n                />\n              </Header>\n              <TrackList\n                disabled={disabled}\n                images={trackListImages}\n                tracks={tracklist}\n                currentTrack={currentTrack}\n                onRemoveTrack={onRemoveTrack}\n              />\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </SearchContainer>\n    </Dimmer.Dimmable>\n  )\n}\n\nexport default Dashboard\n","import React, { useEffect, useContext, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DragDropContext } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport SignInToken from 'utils/signin-token'\nimport GoogleAuthContext from 'contexts/google'\nimport * as actions from 'actions'\nimport * as searchActions from 'search/actions'\nimport { getTracklistImagesInCache } from 'selectors'\nimport Dashboard from 'dashboard'\n\nexport const DashboardContainer = () => {\n  const jukebox = useSelector(state => state.jukebox)\n  const tracklist = useSelector(state => state.tracklist)\n  const currentTrack = useSelector(state => state.track)\n  const tracklistImages = useSelector(state => getTracklistImagesInCache(state))\n  const dispatch = useDispatch()\n  const { isSignedIn, googleUser } = useContext(GoogleAuthContext)\n  const disable = !(isSignedIn && jukebox.mopidyOnline)\n  const googleTokenId = useRef()\n  const refreshTokenTimeoutID = useRef()\n  const hasTokenChanged = (token) => token !== googleTokenId.current\n\n  useEffect(() => {\n    dispatch(actions.wsConnect())\n\n    /* istanbul ignore next */\n    return () => {\n      dispatch(actions.wsDisconnect())\n    }\n  }, [dispatch])\n\n  if (isSignedIn && hasTokenChanged(googleUser.Zi.id_token)) {\n    googleTokenId.current = googleUser.Zi.id_token\n    refreshTokenTimeoutID.current = SignInToken.refresh(googleUser, (token) => {\n      dispatch(actions.updateToken(token))\n    })\n    dispatch(actions.updateToken(googleTokenId.current))\n  }\n\n  if (!isSignedIn) {\n    googleTokenId.current = undefined\n    SignInToken.clear(refreshTokenTimeoutID.current)\n    dispatch(actions.clearToken())\n  }\n\n  return (\n    <Dashboard\n      online={jukebox.online}\n      disabled={disable}\n      volume={jukebox.volume}\n      playbackState={jukebox.playbackState}\n      onPlay={() => dispatch(actions.startPlaying())}\n      onStop={() => dispatch(actions.stopPlaying())}\n      onPause={() => dispatch(actions.pausePlaying())}\n      onNext={() => dispatch(actions.nextPlaying())}\n      onPrevious={() => dispatch(actions.previousPlaying())}\n      onVolumeChange={(evt) => dispatch(actions.setVolume(evt))}\n      onDrop={\n        /* istanbul ignore next */\n        (_item, monitor) => {\n          if (monitor) {\n            dispatch(actions.addNewTrack(monitor.getItem().urls[0]))\n          }\n        }\n      }\n      onTracklistClear={() => dispatch(actions.clearTrackList())}\n      onSearchClick={() => dispatch(searchActions.toggleSearchSidebar(true))}\n      trackListImages={tracklistImages}\n      tracklist={tracklist}\n      currentTrack={currentTrack}\n      onRemoveTrack={\n        /* istanbul ignore next */\n        (evt) => dispatch(actions.removeFromTracklist(evt))\n      }\n    />\n  )\n}\n\nexport default DragDropContext(HTML5Backend)(DashboardContainer)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport Notifications from 'react-notify-toast'\nimport { useGoogleLogin } from 'react-use-googlelogin'\nimport ErrorBoundary from 'components/error-boundary'\nimport GoogleAuthContext from 'contexts/google'\nimport jukeboxMiddleware from 'containers/jukebox-middleware'\nimport jukeboxApp from 'reducers'\nimport { Container } from 'semantic-ui-react'\nimport DashboardContainer from 'containers/dashboard-container'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(jukeboxApp, composeEnhancers(applyMiddleware(jukeboxMiddleware)))\n\nconst App = () => {\n  const googleAuth = useGoogleLogin({\n    clientId: process.env.REACT_APP_CLIENT_ID,\n    hostedDomain: 'kyanmedia.com'\n  })\n\n  return (\n    <Provider store={store}>\n      <Container fluid>\n        <GoogleAuthContext.Provider value={googleAuth}>\n          <ErrorBoundary>\n            <Notifications />\n            <DashboardContainer />\n          </ErrorBoundary>\n        </GoogleAuthContext.Provider>\n      </Container>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}