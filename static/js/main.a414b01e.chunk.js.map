{"version":3,"sources":["components/current-track/default-artwork.png","utils/spotify/index.js","components/error-boundary/index.js","contexts/google.js","constants/mopidy-api.js","constants/index.js","actions/index.js","utils/images/index.js","utils/time/index.js","constants/auth-api.js","utils/payload/index.js","utils/notify/index.js","utils/on-message-handler/index.js","utils/state/index.js","containers/jukebox-middleware/index.js","reducers/track/index.js","reducers/tracklist/index.js","reducers/assets/index.js","reducers/timer/index.js","reducers/jukebox/index.js","reducers/settings/index.js","reducers/index.js","utils/signin-token/index.js","components/volume-buttons/index.js","components/clear-playlist/index.js","selectors/index.js","components/current-track/index.js","containers/current-track-container/index.js","components/settings/index.js","components/tracklist/index.js","components/skip-buttons/index.js","components/controls/index.js","components/url-drop-area/index.js","components/drag-in-track/index.js","containers/dashboard/index.js","App.js","index.js"],"names":["module","exports","transformUrl","url","uri","replace","match","ErrorBoundary","props","state","hasError","error","info","this","setState","children","React","Component","GoogleAuthContext","createContext","ADD_CURRENT_TRACK","ADD_TRACKS","CONNECT","CONNECTING","CONNECTED","DISCONNECT","DISCONNECTED","DROP_TYPES","NEW_IMAGE","RESOLVE_IMAGE","SEND","STORE_TOKEN","CLEAR_STORE_TOKEN","UPDATE_VOLUME","UPDATE_PLAYBACK_STATE","UPDATE_PROGRESS_TIMER","MOPIDY_CONNECTED","MOPIDY_DISCONNECTED","updateToken","token","type","Types","clearToken","addNewTrack","key","MopidyApi","params","addCurrentTrack","track","addTrackList","list","removeFromTracklist","updateProgressTimer","position","duration","Infinity","wsConnect","wsConnecting","wsConnected","wsDisconnect","wsDisconnected","mopidyConnected","mopidyDisconnected","getCurrentTrack","getTimePosition","getState","getImage","newImage","resolveImage","data","getTrackList","clearTrackList","startPlaying","stopPlaying","pausePlaying","nextPlaying","previousPlaying","getVolume","updateVolume","volume","updatePlaybackState","setVolume","Number","findImageInCache","cache","index","findIndex","asset","ref","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","millisToSeconds","timerToPercentage","timer","percentage","round","isNaN","Payload","encode","jwt","decode","payload","JSON","parse","encodeToJson","stringify","Notify","message","notify","show","store","dispatch","actions","imageUriChooser","composer","album","onMessageHandler","progressTimer","AuthApi","console","log","progress","set","length","jukebox","playbackState","start","stop","playBackChanged","tracklist","forEach","item","State","loadInitial","action","JukeboxMiddleware","process","socket","next","isImageRequest","mopidyStateChange","online","onOpen","_evt","ProgressTimer","callback","fallbackTargetFrameRate","disableRequestAnimationFrame","trackProgressTimer","onClose","onMessage","Constants","close","io","transports","on","reset","assets","emit","settings","map","initalState","find","a","slice","initalProgressState","remaining","mopidyOnline","Object","assign","jukeboxApp","combineReducers","SignInToken","refresh","googleApi","success","workerTimers","reloadAuthResponse","then","response","id_token","err","warn","clear","id","volumeUp","cb","volumeDown","VolumeButtons","disabled","onVolumeChange","Button","Group","floated","className","onClick","Icon","name","Or","text","ClearPlaylist","open","clearButton","Label","horizontal","size","as","color","handleConfirm","ev","onClear","handleCancel","Confirm","content","cancelButton","confirmButton","onCancel","onConfirm","getAssets","getCurrentTrackImageInCache","createSelector","getTracklistImagesInCache","images","albumArt","image","defaultImage","Image","src","CurrentTrack","Card","Content","percent","Header","Meta","artist","year","Description","albumDescription","extra","lookup","spotify","split","serviceIcon","connect","Settings","useContext","googleUser","signIn","signOut","avatar","icon","title","profileObj","rounded","imageUrl","Fragment","imageChooser","isCurrent","onRemoveTrack","hasBeenPlayed","klass","inline","trackImage","undefined","listItems","tracks","currentTrack","time","isCurrentTrack","Date","now","List","Item","classnames","trackHeading","trackDescription","Tracklist","relaxed","SkipButtons","onPrevious","onNext","animated","hidden","visible","previousButton","nextButton","Controls","onPlay","onPause","onStop","active","playButton","pauseButton","stopButton","UrlDropArea","connectDropTarget","DropTarget","accepts","drop","monitor","onDrop","dropTarget","DragInTrack","backend","HTML5Backend","DragDropContext","useSelector","tracklistImages","useDispatch","isSignedIn","disable","googleTokenId","useRef","refreshTokenTimeoutID","useEffect","Zi","current","Dimmer","Dimmable","blurring","dimmed","evt","Divider","Grid","columns","Column","width","_item","getItem","urls","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","jukeboxMiddleware","App","googleAuth","useGoogleLogin","clientId","hostedDomain","Container","fluid","Provider","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a414b01e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-artwork.6bba9800.png\";","// https://open.spotify.com/track/0c41pMosF5Kqwwegcps8ES\nconst transformUrl = (url) => {\n  const uri = url.replace(/^.*\\/track\\//, 'spotify:track:')\n  return (uri.match(/spotify:track/g) ? uri : null)\n}\n\nmodule.exports = {\n  transformUrl\n}\n","import React from 'react'\n\n// uses code from https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html\nclass ErrorBoundary extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true })\n\n    // You can also log the error to an error reporting service\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`error: ${error}`)\n      console.log(`info: ${info}`)\n    }\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Ouch! I broke a bit.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import React from 'react'\n\nconst GoogleAuthContext = React.createContext()\n\nexport default GoogleAuthContext\n","export default {\n  PLAYBACK_GET_CURRENT_TRACK: 'mopidy::playback.getCurrentTrack',\n  EVENT_TRACK_PLAYBACK_STARTED: 'mopidy::event:trackPlaybackStarted',\n  EVENT_PLAYBACK_STATE_CHANGED: 'mopidy::event:playbackStateChanged',\n  EVENT_PLAYBACK_STATE_RESUMED: 'mopidy::event:trackPlaybackResumed',\n  TRACKLIST_GET_TRACKS: 'mopidy::tracklist.getTracks',\n  TRACKLIST_ADD_TRACK: 'mopidy::tracklist.add',\n  TRACKLIST_REMOVE_TRACK: 'mopidy::tracklist.remove',\n  TRACKLIST_CLEAR: 'mopidy::tracklist.clear',\n  LIBRARY_GET_IMAGES: 'mopidy::library.getImages',\n  PLAYBACK_GET_TIME_POSITION: 'mopidy::playback.getTimePosition',\n  PLAYBACK_GET_PLAYBACK_STATE: 'mopidy::playback.getState',\n  PLAYBACK_PLAY: 'mopidy::playback.play',\n  PLAYBACK_STOP: 'mopidy::playback.stop',\n  PLAYBACK_PAUSE: 'mopidy::playback.pause',\n  PLAYBACK_NEXT: 'mopidy::playback.next',\n  PLAYBACK_BACK: 'mopidy::playback.previous',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  STOPPED: 'stopped',\n  SET_VOLUME: 'mopidy::mixer.setVolume',\n  GET_VOLUME: 'mopidy::mixer.getVolume',\n  EVENT_VOLUME_CHANGED: 'mopidy::event:volumeChanged'\n}\n","export default {\n  ADD_CURRENT_TRACK: 'actionAddCurrentTrack',\n  ADD_TRACKS: 'actionAddTracks',\n  CONNECT: 'actionConnect',\n  CONNECTING: 'actionConnecting',\n  CONNECTED: 'actionConnected',\n  DISCONNECT: 'actionDisconnect',\n  DISCONNECTED: 'actionDisconnected',\n  DROP_TYPES: ['__NATIVE_URL__'],\n  NEW_IMAGE: 'actionNewImage',\n  RESOLVE_IMAGE: 'actionResolveImage',\n  SEND: 'actionSend',\n  STORE_TOKEN: 'actionStoreToken',\n  CLEAR_STORE_TOKEN: 'actionClearStoreToken',\n  UPDATE_VOLUME: 'actionUpdateVolume',\n  UPDATE_PLAYBACK_STATE: 'actionPlaybackState',\n  UPDATE_PROGRESS_TIMER: 'actionUpdateProgressTimer',\n  MOPIDY_CONNECTED: 'actionMopidyConnected',\n  MOPIDY_DISCONNECTED: 'actionMopidyDisconnected'\n}\n","import MopidyApi from '../constants/mopidy-api'\nimport Types from '../constants'\nimport { transformUrl } from '../utils/spotify'\n\nexport const updateToken = token => {\n  return {\n    type: Types.STORE_TOKEN,\n    token\n  }\n}\n\nexport const clearToken = () => {\n  return {\n    type: Types.CLEAR_STORE_TOKEN\n  }\n}\n\nexport const addNewTrack = url => {\n  let uri = transformUrl(url)\n\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_ADD_TRACK,\n    params: { 'uri': uri }\n  }\n}\n\nexport const addCurrentTrack = track => {\n  return {\n    type: Types.ADD_CURRENT_TRACK,\n    track\n  }\n}\n\nexport const addTrackList = list => {\n  return {\n    type: Types.ADD_TRACKS,\n    list\n  }\n}\n\nexport const removeFromTracklist = uri => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_REMOVE_TRACK,\n    params: { 'uri': [uri] }\n  }\n}\n\nexport const updateProgressTimer = (position, duration) => {\n  if (duration === Infinity) { duration = 0 }\n\n  return {\n    type: Types.UPDATE_PROGRESS_TIMER,\n    position,\n    duration\n  }\n}\n\nexport const wsConnect = () => {\n  return {\n    type: Types.CONNECT\n  }\n}\n\nexport const wsConnecting = () => {\n  return {\n    type: Types.CONNECTING\n  }\n}\n\nexport const wsConnected = () => {\n  return {\n    type: Types.CONNECTED\n  }\n}\n\nexport const wsDisconnect = () => {\n  return {\n    type: Types.DISCONNECT\n  }\n}\n\nexport const wsDisconnected = () => {\n  return {\n    type: Types.DISCONNECTED\n  }\n}\n\nexport const mopidyConnected = () => {\n  return {\n    type: Types.MOPIDY_CONNECTED\n  }\n}\n\nexport const mopidyDisconnected = () => {\n  return {\n    type: Types.MOPIDY_DISCONNECTED\n  }\n}\n\nexport const getCurrentTrack = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_CURRENT_TRACK\n  }\n}\n\nexport const getTimePosition = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_TIME_POSITION\n  }\n}\n\nexport const getState = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_PLAYBACK_STATE\n  }\n}\n\nexport const getImage = (uri) => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.LIBRARY_GET_IMAGES,\n    params: [[uri]],\n    uri: uri\n  }\n}\n\nexport const newImage = (uri) => {\n  return {\n    type: Types.NEW_IMAGE,\n    uri\n  }\n}\n\nexport const resolveImage = (data) => {\n  return {\n    type: Types.RESOLVE_IMAGE,\n    data\n  }\n}\n\nexport const getTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_GET_TRACKS\n  }\n}\n\nexport const clearTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_CLEAR\n  }\n}\n\nexport const startPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PLAY\n  }\n}\n\nexport const stopPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_STOP\n  }\n}\n\nexport const pausePlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PAUSE\n  }\n}\n\nexport const nextPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_NEXT\n  }\n}\n\nexport const previousPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_BACK\n  }\n}\n\nexport const getVolume = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.GET_VOLUME\n  }\n}\n\nexport const updateVolume = (volume) => {\n  return {\n    type: Types.UPDATE_VOLUME,\n    volume\n  }\n}\n\nexport const updatePlaybackState = (state) => {\n  return {\n    type: Types.UPDATE_PLAYBACK_STATE,\n    state\n  }\n}\n\nexport const setVolume = (volume) => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.SET_VOLUME,\n    params: [Number(volume)]\n  }\n}\n","export const findImageInCache = (uri, cache) => {\n  const index = cache.findIndex(asset => asset.ref === uri)\n  if (cache[index]) { return cache[index].uri }\n  return null\n}\n","import ProgressTimer from 'media-progress-timer'\n\nexport const millisToMinutesAndSeconds = (millis) => {\n  let minutes = Math.floor(millis / 60000)\n  let seconds = ((millis % 60000) / 1000).toFixed(0)\n  return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n}\n\nexport const millisToSeconds = (millis) => {\n  return millis * 0.001\n}\n\nexport const timerToPercentage = timer => {\n  if (timer.duration === 0) { return 0 }\n  const position = millisToSeconds(timer.position)\n  const duration = millisToSeconds(timer.duration)\n  const percentage = Math.round((position / duration) * 100)\n\n  return isNaN(percentage) ? 0 : percentage\n}\n\nexport const trackProgressTimer = (store, actions) => {\n  return ProgressTimer({\n    callback: (position, duration) => {\n      store.dispatch(actions.updateProgressTimer(position, duration))\n    },\n    fallbackTargetFrameRate: 1,\n    disableRequestAnimationFrame: true\n  })\n}\n","export default {\n  AUTHENTICATION_TOKEN_INVALID: 'auth::authenticationTokenInvalid'\n}\n","const Payload = {\n  encode: (jwt, key, data) => {\n    return {\n      jwt,\n      key,\n      data\n    }\n  },\n\n  decode: payload => {\n    return JSON.parse(payload)\n  },\n\n  encodeToJson: (jwt, key, data) => {\n    return JSON.stringify(Payload.encode(jwt, key, data))\n  }\n}\n\nexport default Payload\n","import { notify } from 'react-notify-toast'\n\nconst Notify = (message) => notify.show(message, 'success', 3000, {})\n\nexport default Notify\n","import * as actions from '../../actions'\nimport AuthApi from '../../constants/auth-api'\nimport MopidyApi from '../../constants/mopidy-api'\nimport Payload from '../../utils/payload'\nimport notify from '../../utils/notify'\n\nconst updatePlaybackState = (store, state) => {\n  store.dispatch(actions.updatePlaybackState(state))\n}\n\nconst playBackChanged = (store, state, progress) => {\n  switch (state) {\n    case MopidyApi.PAUSED:\n    case MopidyApi.STOPPED:\n      updatePlaybackState(store, state)\n      progress.stop()\n      notify('Jukebox Halted')\n      break\n    case MopidyApi.PLAYING:\n      updatePlaybackState(store, state)\n      progress.start()\n      break\n    default:\n      break\n  }\n}\n\nconst imageUriChooser = (track) => {\n  if (track.composer) return track.composer.uri\n  return track.album.uri\n}\n\nconst addCurrentTrack = (track, store, progress) => {\n  store.dispatch(actions.addCurrentTrack(track))\n  store.dispatch(actions.getImage(imageUriChooser(track)))\n  const progressTimer = progress.set(0, track.length)\n  if (store.getState().jukebox.playbackState === MopidyApi.PLAYING) progressTimer.start()\n}\n\nconst addTrackList = (tracklist, store) => {\n  store.dispatch(actions.addTrackList(tracklist))\n  tracklist.forEach(item => {\n    store.dispatch(actions.getImage(imageUriChooser(item.track)))\n  })\n}\n\nconst onMessageHandler = (store, payload, progressTimer) => {\n  const { key, data } = Payload.decode(payload)\n\n  switch (key) {\n    case AuthApi.AUTHENTICATION_TOKEN_INVALID:\n      console.log(`AUTHENTICATION_TOKEN_INVALID: ${data.error}`)\n      store.dispatch(actions.clearToken())\n      break\n    case MopidyApi.PLAYBACK_GET_CURRENT_TRACK:\n    case MopidyApi.EVENT_TRACK_PLAYBACK_STARTED:\n      if (data && data.track) addCurrentTrack(data.track, store, progressTimer)\n      break\n    case MopidyApi.EVENT_PLAYBACK_STATE_CHANGED:\n    case MopidyApi.PLAYBACK_GET_PLAYBACK_STATE:\n      playBackChanged(store, data, progressTimer)\n      break\n    case MopidyApi.TRACKLIST_GET_TRACKS:\n      addTrackList(data, store)\n      break\n    case MopidyApi.PLAYBACK_NEXT:\n    case MopidyApi.PLAYBACK_BACK:\n      store.dispatch(actions.getCurrentTrack())\n      break\n    case MopidyApi.GET_VOLUME:\n      store.dispatch(actions.updateVolume(data))\n      break\n    case MopidyApi.EVENT_VOLUME_CHANGED:\n      store.dispatch(actions.updateVolume(data))\n      notify('Volume Changed')\n      break\n    case MopidyApi.LIBRARY_GET_IMAGES:\n      store.dispatch(actions.resolveImage(data))\n      break\n    case MopidyApi.PLAYBACK_GET_TIME_POSITION:\n      progressTimer.set(data)\n      break\n    default:\n      console.log(`Unknown message: ${key} body: ${data}`)\n      break\n  }\n}\n\nexport default onMessageHandler\n","import * as actions from '../../actions'\n\nconst State = {\n  loadInitial: (store) => {\n    [\n      'getCurrentTrack',\n      'getTimePosition',\n      'getState',\n      'getTrackList',\n      'getVolume'\n    ].forEach(action => {\n      store.dispatch(actions[action]())\n    })\n  }\n}\n\nexport default State\n","import io from 'socket.io-client'\nimport * as actions from '../../actions'\nimport MopidyApi from '../../constants/mopidy-api'\nimport Constants from '../../constants'\nimport { findImageInCache } from '../../utils/images'\nimport { trackProgressTimer } from '../../utils/time'\nimport onMessageHandler from '../../utils/on-message-handler'\nimport Payload from '../../utils/payload'\nimport State from '../../utils/state'\n\nconst JukeboxMiddleware = (() => {\n  let url = `http://${process.env.REACT_APP_WS_URL}:${process.env.REACT_APP_WS_PORT}`\n  let socket = null\n  let progressTimer = null\n\n  return store => next => action => {\n    const isImageRequest = () => action.key === MopidyApi.LIBRARY_GET_IMAGES\n    const imageIsCached = () => findImageInCache(action.uri, store.getState().assets)\n    const preStoreImage = () => store.dispatch(actions.newImage(action.uri))\n    const getJWT = () => store.getState().settings.token\n    const packMessage = () => Payload.encodeToJson(getJWT(store), action.key, action.params)\n\n    const mopidyStateChange = data => {\n      if (JSON.parse(data).online) {\n        store.dispatch(actions.mopidyConnected())\n        return State.loadInitial(store)\n      }\n      store.dispatch(actions.mopidyDisconnected())\n    }\n    const onOpen = _evt => {\n      progressTimer = trackProgressTimer(store, actions)\n      store.dispatch(actions.wsConnected())\n    }\n    const onClose = _evt => store.dispatch(actions.wsDisconnect())\n    const onMessage = data => onMessageHandler(store, data, progressTimer)\n    const onConnect = () => {\n      if (socket != null) socket.close()\n      socket = io(url, { transports: ['websocket'] })\n      socket.on('mopidy', mopidyStateChange)\n      socket.on('message', onMessage)\n      socket.on('connect', onOpen)\n      socket.on('disconnect', onClose)\n\n      store.dispatch(actions.wsConnecting())\n    }\n    const onDisconnect = () => {\n      if (progressTimer) { progressTimer.reset() }\n      store.dispatch(actions.wsDisconnected())\n    }\n\n    switch (action.type) {\n      case Constants.CONNECT:\n        return onConnect()\n      case Constants.DISCONNECT:\n        return onDisconnect()\n      case Constants.SEND:\n        if (isImageRequest() && imageIsCached()) return\n        if (isImageRequest()) preStoreImage()\n\n        return socket.emit('message', packMessage())\n      default:\n        return next(action)\n    }\n  }\n})()\n\nexport default JukeboxMiddleware\n","import Types from '../../constants'\n\nconst track = (state = null, action) => {\n  switch (action.type) {\n    case Types.ADD_CURRENT_TRACK:\n      return action.track\n    default:\n      return state\n  }\n}\n\nexport default track\n","import Types from '../../constants'\n\nconst tracklist = (state = [], action) => {\n  switch (action.type) {\n    case Types.ADD_TRACKS:\n      return action.list.map(item => item.track)\n    default:\n      return state\n  }\n}\n\nexport default tracklist\n","import Types from '../../constants'\n\nconst initalState = []\nconst MAX_IMAGES_IN_CACHE = 200\n\nconst assets = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.NEW_IMAGE:\n      return (state.find(a => action.uri && a.ref === action.uri))\n        ? state\n        : [ ...state, { ref: action.uri } ]\n    case Types.RESOLVE_IMAGE:\n      return state.map(asset =>\n        (action.data[asset.ref] && action.data[asset.ref][0])\n          ? { ...asset, uri: action.data[asset.ref][0].uri }\n          : asset\n      ).slice(0, MAX_IMAGES_IN_CACHE)\n    default:\n      return state\n  }\n}\n\nexport default assets\n","import Types from '../../constants'\n\nconst initalProgressState = {\n  position: 0,\n  duration: 0,\n  remaining: 0\n}\n\nconst timer = (state = initalProgressState, action) => {\n  switch (action.type) {\n    case Types.UPDATE_PROGRESS_TIMER:\n      return {\n        position: action.position,\n        duration: action.duration,\n        remaining: action.duration - action.position\n      }\n    default:\n      return state\n  }\n}\n\nexport default timer\n","import MopidyApi from '../../constants/mopidy-api'\nimport Types from '../../constants'\n\nconst initalState = {\n  online: false,\n  mopidyOnline: false,\n  volume: 0,\n  playbackState: MopidyApi.STOPPED\n}\n\nconst jukebox = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.CONNECTED:\n      return Object.assign({}, state, {\n        online: true\n      })\n    case Types.DISCONNECTED:\n      return Object.assign({}, state, {\n        online: false\n      })\n    case Types.MOPIDY_CONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: true\n      })\n    case Types.MOPIDY_DISCONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: false\n      })\n    case Types.UPDATE_VOLUME:\n      return Object.assign({}, state, {\n        volume: action.volume\n      })\n    case Types.UPDATE_PLAYBACK_STATE:\n      return Object.assign({}, state, {\n        playbackState: action.state\n      })\n    default:\n      return state\n  }\n}\n\nexport default jukebox\n","import Types from '../../constants'\n\nconst initalState = {\n  token: null\n}\n\nconst settings = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.STORE_TOKEN:\n      if (action.token === state.token) return state\n      return Object.assign({}, state, {\n        token: action.token\n      })\n    case Types.CLEAR_STORE_TOKEN:\n      return Object.assign({}, state, {\n        token: null\n      })\n    default:\n      return state\n  }\n}\n\nexport default settings\n","import { combineReducers } from 'redux'\nimport track from './track'\nimport tracklist from './tracklist'\nimport assets from './assets'\nimport timer from './timer'\nimport jukebox from './jukebox'\nimport settings from './settings'\n\nconst jukeboxApp = combineReducers({\n  track,\n  tracklist,\n  assets,\n  timer,\n  jukebox,\n  settings\n})\n\nexport default jukeboxApp\n","import * as workerTimers from 'worker-timers'\n\nconst checkForTokenInMilliseconds = 2700000\n\nconst SignInToken = {\n  refresh: (googleApi, success) => {\n    return workerTimers.setTimeout(() => {\n      googleApi.reloadAuthResponse().then(\n        (response) => success(response.id_token),\n        (err) => console.warn('Token un-refreshable: ', err.message))\n    }, checkForTokenInMilliseconds)\n  },\n  clear: (id) => { if (id) workerTimers.clearTimeout(id) }\n}\n\nexport default SignInToken\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst VOLUME_INC = 1\nconst VOLUME_MAX = 100\nconst VOLUME_MIN = 0\n\nconst volumeUp = (volume, cb) => {\n  volume += VOLUME_INC\n  if (volume <= VOLUME_MAX) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst volumeDown = (volume, cb) => {\n  volume -= VOLUME_INC\n  if (volume >= VOLUME_MIN) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst VolumeButtons = ({ disabled, volume, onVolumeChange }) => (\n  <Button.Group floated='right'>\n    <Button\n      className='jb-volume-down'\n      onClick={volumeDown(volume, onVolumeChange)}\n      disabled={disabled}\n    >\n      <Icon name='volume down' />\n    </Button>\n    <Button.Or text={volume} />\n    <Button\n      className='jb-volume-up'\n      onClick={volumeUp(volume, onVolumeChange)}\n      disabled={disabled}\n    >\n      <Icon name='volume up' />\n    </Button>\n  </Button.Group>\n)\n\nVolumeButtons.propTypes = {\n  disabled: PropTypes.bool,\n  volume: PropTypes.number,\n  onVolumeChange: PropTypes.func.isRequired\n}\n\nexport default VolumeButtons\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Confirm, Label } from 'semantic-ui-react'\n\nclass ClearPlaylist extends Component {\n  state = { open: false }\n\n  clearButton = () => {\n    return (\n      <Label\n        horizontal\n        size='mini'\n        as='a'\n        color='red'\n        onClick={this.show}\n        className='jb-clear-button'\n      >CLEAR</Label>\n    )\n  }\n\n  show = () => {\n    this.setState({ open: true })\n  }\n\n  handleConfirm = (ev) => {\n    this.setState({ open: false })\n    this.props.onClear(ev)\n  }\n\n  handleCancel = () => {\n    this.setState({ open: false })\n  }\n\n  render () {\n    if (this.props.disabled) { return null }\n\n    return (\n      <span>\n        {this.clearButton()}\n        <Confirm\n          content='Are you sure you want to nuke the playlist?'\n          cancelButton='No thanks'\n          confirmButton='Do it!'\n          open={this.state.open}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n        />\n      </span>\n    )\n  }\n}\n\nClearPlaylist.propTypes = {\n  disabled: PropTypes.bool,\n  onClear: PropTypes.func.isRequired\n}\n\nexport default ClearPlaylist\n","import { createSelector } from 'reselect'\nimport { findImageInCache } from '../utils/images'\n\nconst getCurrentTrack = (state) => state.track\nconst getTrackList = (state) => state.tracklist\nconst getAssets = (state) => state.assets\n\nexport const getCurrentTrackImageInCache = createSelector(\n  [getCurrentTrack, getAssets],\n  (track, cache) => {\n    if (!track) { return null }\n    return findImageInCache(track.album.uri, cache)\n  }\n)\n\nexport const getTracklistImagesInCache = createSelector(\n  [getTrackList, getAssets],\n  (tracklist, cache) => {\n    const images = {}\n    tracklist.forEach(track => {\n      images[track.album.uri] = findImageInCache(track.album.uri, cache)\n    })\n    return images\n  }\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Icon, Image } from 'semantic-ui-react'\nimport { Line } from 'rc-progress'\nimport defaultImage from './default-artwork.png'\nimport { millisToMinutesAndSeconds } from '../../utils/time'\nimport './index.css'\n\nconst albumDescription = album => {\n  if (!album) return null\n  const year = album.year ? ` (${album.year})` : null\n  return <Card.Description>{album.name}{year}</Card.Description>\n}\n\nconst composerDescription = composer => {\n  if (!composer) return null\n  return <Card.Description>{composer.name}</Card.Description>\n}\n\nconst albumArt = (image) => {\n  if (!image) image = defaultImage\n  return <Image src={image} />\n}\n\nconst serviceIcon = (uri) => {\n  const lookup = {\n    spotify: 'green'\n  }\n  const key = uri.split(':')[0]\n  if (!lookup[key]) return null\n  return <Icon name={key} color={lookup[key]} />\n}\n\nconst noTrack = () => (\n  <Card>\n    { albumArt(null) }\n    <Card.Content>\n      <Card.Header>Nothing playing</Card.Header>\n      <Card.Description>Drag some music here or press play.</Card.Description>\n    </Card.Content>\n  </Card>\n)\n\nconst CurrentTrack = ({ track, image, progress, remaining }) => {\n  if (!track) { return noTrack() }\n\n  return (\n    <Card>\n      { albumArt(image) }\n      <Card.Content>\n        <div className='progress-container'>\n          <span className='remaining-text'>{millisToMinutesAndSeconds(remaining)}</span>\n          <span className='track-length'>{millisToMinutesAndSeconds(track.length)}</span>\n          <Line percent={progress} />\n        </div>\n        <Card.Header>{track.name}</Card.Header>\n        <Card.Meta>{track.artist.name}</Card.Meta>\n        { albumDescription(track.album) }\n        { composerDescription(track.composer) }\n      </Card.Content>\n      <Card.Content extra>\n        {serviceIcon(track.uri)}\n      </Card.Content>\n    </Card>\n  )\n}\n\nCurrentTrack.propTypes = {\n  track: PropTypes.object,\n  image: PropTypes.string,\n  progress: PropTypes.number,\n  remaining: PropTypes.number\n}\n\nexport default CurrentTrack\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { timerToPercentage } from '../../utils/time'\nimport { getCurrentTrackImageInCache } from '../../selectors'\nimport CurrentTrack from '../../components/current-track'\n\nexport const CurrentTrackContainer = ({ track, image, progress, remaining }) => (\n  <CurrentTrack\n    track={track}\n    image={image}\n    progress={progress}\n    remaining={remaining}\n  />\n)\n\nconst mapStateToProps = state => {\n  return {\n    track: state.track,\n    image: getCurrentTrackImageInCache(state),\n    progress: timerToPercentage(state.timer),\n    remaining: state.timer.remaining\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(CurrentTrackContainer)\n","import React, { useContext } from 'react'\nimport { Button, Image } from 'semantic-ui-react'\nimport GoogleAuthContext from '../../contexts/google'\n\nexport const Settings = () => {\n  const { googleUser, signIn, signOut } = useContext(GoogleAuthContext)\n\n  let avatar = (\n    <Button\n      icon='power off'\n      floated='right'\n      onClick={() => signIn()}\n      className='jb-settings-toggle'\n      title='Login using Google'\n    />\n  )\n  if (googleUser && googleUser.profileObj) {\n    avatar = (\n      <Image\n        rounded\n        size='mini'\n        floated='right'\n        title={googleUser.profileObj.name}\n        src={googleUser.profileObj.imageUrl}\n        onClick={() => signOut()}\n      />\n    )\n  }\n\n  return (\n    <React.Fragment>{avatar}</React.Fragment>\n  )\n}\n\nexport default Settings\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { List, Image } from 'semantic-ui-react'\nimport { millisToMinutesAndSeconds } from '../../utils/time'\nimport defaultImage from './../current-track/default-artwork.png'\nimport './index.css'\n\nconst isCurrentTrack = (currentTrack, track) => {\n  if (!currentTrack) return false\n  return currentTrack.uri === track.uri\n}\n\nconst trackImage = ({ image, isCurrent, onClick, hasBeenPlayed }) => {\n  let klass, title\n\n  if (isCurrent) klass = 'current-image'\n  if (onClick && !isCurrent) {\n    title = 'Click to remove from playlist'\n    klass = 'remove-image'\n  }\n\n  return (\n    <Image\n      className={klass}\n      size={hasBeenPlayed ? 'tiny' : 'mini'}\n      src={image}\n      title={title}\n      onClick={onClick}\n      inline\n    />\n  )\n}\n\nconst removeTrack = (uri, cb) => {\n  return () => cb(uri)\n}\n\nconst imageChooser = (disabled, track, images, isCurrent, onRemoveTrack, hasBeenPlayed) => {\n  let image\n  if (images && track.album) image = images[track.album.uri]\n  if (images && track.composer) image = images[track.composer.uri]\n  if (!image) image = defaultImage\n\n  return trackImage({\n    image,\n    hasBeenPlayed,\n    isCurrent,\n    onClick: (!disabled && !isCurrent) ? removeTrack(track.uri, onRemoveTrack) : undefined\n  })\n}\n\nconst trackHeading = (track) => (\n  <List.Header as='h4'>{track.name}</List.Header>\n)\n\nconst trackDescription = (track) => (\n  <List.Description>\n    {track.artist.name} <small>({millisToMinutesAndSeconds(track.length)})</small>\n  </List.Description>\n)\n\nconst listItems = (disabled, tracks, images, currentTrack, onRemoveTrack) => {\n  let time\n\n  return tracks.map((track, index) => {\n    const isCurrent = isCurrentTrack(currentTrack, track)\n    if (time) time += track.length\n    if (isCurrent) time = Date.now()\n\n    return (\n      <List.Item\n        className={classnames({ 'current-track': isCurrent })}\n        key={`${index}-${track.uri}`}\n      >\n        { imageChooser(disabled, track, images, isCurrent, onRemoveTrack, time) }\n        <List.Content\n          className={classnames({ 'track-info': !time })}\n        >\n          {trackHeading(track)}\n          {trackDescription(track)}\n        </List.Content>\n      </List.Item>\n    )\n  })\n}\n\nconst Tracklist = ({ disabled, tracks, images, currentTrack, onRemoveTrack }) => {\n  if (!tracks) { return null }\n\n  return (\n    <List relaxed>\n      {listItems(disabled, tracks, images, currentTrack, onRemoveTrack)}\n    </List>\n  )\n}\n\nTracklist.propTypes = {\n  disabled: PropTypes.bool,\n  tracks: PropTypes.array,\n  images: PropTypes.object,\n  currentTrack: PropTypes.object,\n  onRemoveTrack: PropTypes.func.isRequired\n}\n\nexport default Tracklist\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst previousButton = (cb, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    className='jb-previous-button'\n    disabled={disabled}\n  >\n    <Button.Content hidden>Prev</Button.Content>\n    <Button.Content visible>\n      <Icon name='step backward' />\n    </Button.Content>\n  </Button>\n)\n\nconst nextButton = (cb, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    className='jb-next-button'\n    disabled={disabled}\n  >\n    <Button.Content hidden>Next</Button.Content>\n    <Button.Content visible>\n      <Icon name='step forward' />\n    </Button.Content>\n  </Button>\n)\n\nconst SkipButtons = ({ disabled, onPrevious, onNext }) => (\n  <span>\n    {previousButton(onPrevious, disabled)}\n    {nextButton(onNext, disabled)}\n  </span>\n)\n\nSkipButtons.propTypes = {\n  disabled: PropTypes.bool,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default SkipButtons\n","import React from 'react'\nimport SkipButtons from '../../components/skip-buttons'\nimport MopidyApi from '../../constants/mopidy-api'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst playButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.PLAYING || disabled)}\n    active={(playbackState === MopidyApi.PLAYING)}\n    className='jb-play-button'\n  >\n    <Button.Content hidden>Play</Button.Content>\n    <Button.Content visible>\n      <Icon name='play' />\n    </Button.Content>\n  </Button>\n)\n\nconst pauseButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.PAUSED || playbackState === MopidyApi.STOPPED || disabled)}\n    active={(playbackState === MopidyApi.PAUSED)}\n    className='jb-pause-button'\n  >\n    <Button.Content hidden>Pause</Button.Content>\n    <Button.Content visible>\n      <Icon name='pause' />\n    </Button.Content>\n  </Button>\n)\n\nconst stopButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.STOPPED || disabled)}\n    active={(playbackState === MopidyApi.STOPPED)}\n    className='jb-stop-button'\n  >\n    <Button.Content hidden>Stop</Button.Content>\n    <Button.Content visible>\n      <Icon name='stop' />\n    </Button.Content>\n  </Button>\n)\n\nconst Controls = ({ disabled, playbackState, onPlay, onPause, onStop, onPrevious, onNext }) => {\n  return (\n    <span>\n      <SkipButtons\n        disabled={disabled}\n        onPrevious={onPrevious}\n        onNext={onNext}\n      />\n      {playButton(onPlay, playbackState, disabled)}\n      {pauseButton(onPause, playbackState, disabled)}\n      {stopButton(onStop, playbackState, disabled)}\n    </span>\n  )\n}\n\nControls.propTypes = {\n  disabled: PropTypes.bool,\n  playbackState: PropTypes.string,\n  onPlay: PropTypes.func.isRequired,\n  onPause: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default Controls\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DropTarget } from 'react-dnd'\n\nconst boxTarget = {\n  drop (props, monitor) {\n    if (props.onDrop) {\n      props.onDrop(props, monitor)\n    }\n  }\n}\n\nconst boxHandler = (connect, monitor) => {\n  return {\n    connectDropTarget: connect.dropTarget()\n  }\n}\n\nclass UrlDropArea extends Component {\n  render () {\n    const { connectDropTarget } = this.props\n\n    return connectDropTarget(\n      <div title='Drag in Spotify tracks to add to playlist'>\n        { this.props.children }\n      </div>\n    )\n  }\n}\n\nUrlDropArea.propTypes = {\n  connectDropTarget: PropTypes.func.isRequired,\n  accepts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onDrop: PropTypes.func\n}\n\nexport default DropTarget(props => props.accepts, boxTarget, boxHandler)(UrlDropArea)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DragDropContextProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport Constants from '../../constants'\nimport UrlDropArea from '../url-drop-area'\n\nconst DragInTrack = ({ disabled, onDrop, children }) => {\n  if (disabled) { return children }\n\n  return (\n    <DragDropContextProvider backend={HTML5Backend}>\n      <UrlDropArea accepts={Constants.DROP_TYPES} onDrop={onDrop}>\n        { children }\n      </UrlDropArea>\n    </DragDropContextProvider>\n  )\n}\n\nDragInTrack.propTypes = {\n  disabled: PropTypes.bool,\n  onDrop: PropTypes.func.isRequired\n}\n\nexport default DragInTrack\n","import React, { useEffect, useContext, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DragDropContext } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport { Dimmer, Divider, Grid, Header } from 'semantic-ui-react'\nimport SignInToken from '../../utils/signin-token'\nimport GoogleAuthContext from '../../contexts/google'\nimport VolumeButtons from '../../components/volume-buttons'\nimport ClearPlaylist from '../../components/clear-playlist'\nimport * as actions from '../../actions'\nimport CurrentTrackContainer from '../current-track-container'\nimport Settings from '../../components/settings'\nimport TrackList from '../../components/tracklist'\nimport { getTracklistImagesInCache } from '../../selectors'\nimport Controls from '../../components/controls'\nimport DragInTrack from '../../components/drag-in-track'\n\nexport const Dashboard = () => {\n  const jukebox = useSelector(state => state.jukebox)\n  const tracklist = useSelector(state => state.tracklist)\n  const currentTrack = useSelector(state => state.track)\n  const tracklistImages = useSelector(state => getTracklistImagesInCache(state))\n  const dispatch = useDispatch()\n  const { isSignedIn, googleUser } = useContext(GoogleAuthContext)\n  const disable = !(isSignedIn && jukebox.mopidyOnline)\n  const googleTokenId = useRef()\n  const refreshTokenTimeoutID = useRef()\n  const hasTokenChanged = (token) => token !== googleTokenId.current\n\n  useEffect(() => {\n    dispatch(actions.wsConnect())\n\n    /* istanbul ignore next */\n    return () => {\n      dispatch(actions.wsDisconnect())\n    }\n  }, [dispatch])\n\n  if (isSignedIn && hasTokenChanged(googleUser.Zi.id_token)) {\n    googleTokenId.current = googleUser.Zi.id_token\n    refreshTokenTimeoutID.current = SignInToken.refresh(googleUser, (token) => {\n      dispatch(actions.updateToken(token))\n    })\n    dispatch(actions.updateToken(googleTokenId.current))\n  }\n\n  if (!isSignedIn) {\n    googleTokenId.current = undefined\n    SignInToken.clear(refreshTokenTimeoutID.current)\n    dispatch(actions.clearToken())\n  }\n\n  return (\n    <Dimmer.Dimmable\n      blurring\n      className='jukebox-dashboard'\n      dimmed={!jukebox.online}\n    >\n      <Settings />\n      <VolumeButtons\n        disabled={disable}\n        volume={jukebox.volume}\n        onVolumeChange={(evt) => dispatch(actions.setVolume(evt))}\n      />\n      <Controls\n        disabled={disable}\n        playbackState={jukebox.playbackState}\n        onPlay={() => dispatch(actions.startPlaying())}\n        onStop={() => dispatch(actions.stopPlaying())}\n        onPause={() => dispatch(actions.pausePlaying())}\n        onNext={() => dispatch(actions.nextPlaying())}\n        onPrevious={() => dispatch(actions.previousPlaying())}\n      />\n      <Divider />\n      <Grid columns={2}>\n        <Grid.Column width={4}>\n          <DragInTrack\n            disabled={disable}\n            onDrop={\n              /* istanbul ignore next */\n              (_item, monitor) => {\n                if (monitor) {\n                  dispatch(actions.addNewTrack(monitor.getItem().urls[0]))\n                }\n              }\n            }\n          >\n            <Header size='small'>Current Track</Header>\n            <CurrentTrackContainer />\n          </DragInTrack>\n        </Grid.Column>\n        <Grid.Column width={12}>\n          <Header size='small'>\n            Playlist <ClearPlaylist\n              disabled={disable}\n              onClear={() => dispatch(actions.clearTrackList())}\n            />\n          </Header>\n          <TrackList\n            disabled={disable}\n            images={tracklistImages}\n            tracks={tracklist}\n            currentTrack={currentTrack}\n            onRemoveTrack={\n              /* istanbul ignore next */\n              (evt) => dispatch(actions.removeFromTracklist(evt))\n            }\n          />\n        </Grid.Column>\n      </Grid>\n    </Dimmer.Dimmable>\n  )\n}\n\nexport default DragDropContext(HTML5Backend)(Dashboard)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport Notifications from 'react-notify-toast'\nimport { useGoogleLogin } from 'react-use-googlelogin'\nimport ErrorBoundary from './components/error-boundary'\nimport GoogleAuthContext from './contexts/google'\nimport jukeboxMiddleware from './containers/jukebox-middleware'\nimport jukeboxApp from './reducers'\nimport { Container } from 'semantic-ui-react'\nimport Dashboard from './containers/dashboard'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(jukeboxApp, composeEnhancers(applyMiddleware(jukeboxMiddleware)))\n\nconst App = () => {\n  const googleAuth = useGoogleLogin({\n    clientId: process.env.REACT_APP_CLIENT_ID,\n    hostedDomain: 'kyanmedia.com'\n  })\n\n  return (\n    <Provider store={store}>\n      <Container fluid>\n        <GoogleAuthContext.Provider value={googleAuth}>\n          <ErrorBoundary>\n            <Notifications />\n            <Dashboard />\n          </ErrorBoundary>\n        </GoogleAuthContext.Provider>\n      </Container>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}