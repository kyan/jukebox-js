{"version":3,"sources":["utils/spotify/index.js","components/error-boundary/index.js","contexts/google.js","constants/mopidy-api.js","constants/common.js","actions/index.js","votes/constants.js","search/constants.js","utils/time/index.js","search/actions/index.js","constants/auth-api.js","utils/payload/index.js","utils/notify/index.js","utils/on-message-handler/index.js","utils/state/index.js","containers/jukebox-middleware/index.js","reducers/track/index.js","reducers/tracklist/index.js","reducers/timer/index.js","reducers/jukebox/index.js","reducers/settings/index.js","search/reducers/index.js","reducers/index.js","utils/signin-token/index.js","components/skip-buttons/index.js","components/controls/index.js","components/url-drop-area/index.js","components/drag-in-track/index.js","components/added-by/index.js","components/voted-by/index.js","components/current-track/index.js","containers/current-track-container/index.js","votes/actions/index.js","components/settings/index.js","components/tracklist/index.js","search/components/button/index.js","components/volume-buttons/index.js","components/clear-playlist/index.js","search/components/sidebar/index.js","search/index.js","dashboard/index.js","containers/dashboard-container/index.js","App.js","index.js","components/current-track/default-artwork.png"],"names":["module","exports","transformUrl","url","uri","replace","match","ErrorBoundary","props","state","hasError","error","info","this","setState","children","React","Component","GoogleAuthContext","createContext","ADD_CURRENT_TRACK","ADD_TRACKS","CONNECT","CONNECTING","CONNECTED","DISCONNECT","DISCONNECTED","DROP_TYPES","SEND","STORE_TOKEN","CLEAR_STORE_TOKEN","UPDATE_VOLUME","UPDATE_PLAYBACK_STATE","UPDATE_PROGRESS_TIMER","MOPIDY_CONNECTED","MOPIDY_DISCONNECTED","SYNC_SOCIAL_DATA","updateToken","token","type","Types","clearToken","addNewTrack","key","MopidyApi","params","addCurrentTrack","track","syncSocialData","addTrackList","list","removeFromTracklist","updateProgressTimer","position","duration","Infinity","wsConnect","wsConnecting","wsConnected","wsDisconnect","wsDisconnected","mopidyConnected","mopidyDisconnected","getCurrentTrack","getTimePosition","getState","getTrackList","clearTrackList","startPlaying","stopPlaying","pausePlaying","nextPlaying","previousPlaying","getVolume","updateVolume","volume","updatePlaybackState","setVolume","Number","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","millisToSeconds","toggleSearchSidebar","open","Search","storeSearchQuery","query","search","options","Payload","decode","payload","JSON","parse","encodeToJson","jwt","data","stringify","Notify","success","message","notify","show","warning","store","dispatch","actions","onMessageHandler","progressTimer","AuthApi","console","log","progress","set","length","jukebox","playbackState","start","stop","playBackChanged","tracklist","name","album","artist","SearchConst","results","VoteConst","State","loadInitial","forEach","action","JukeboxMiddleware","process","socket","next","packMessage","settings","onMopidyStateChange","online","onOpen","_evt","ProgressTimer","callback","fallbackTargetFrameRate","disableRequestAnimationFrame","trackProgressTimer","onClose","onMessage","onSearchResults","onVote","Constants","close","io","transports","on","reset","emit","VoteConstant","Object","assign","addedBy","metrics","map","item","initalProgressState","remaining","timer","initalState","mopidyOnline","searchSideBarOpen","limit","offset","total","Constant","filter","tracks","items","jukeboxApp","combineReducers","SignInToken","refresh","googleApi","workerTimers","reloadAuthResponse","then","response","id_token","err","warn","clear","id","PreviousButton","Button","onClick","animated","className","disabled","Content","hidden","visible","Icon","NextButton","SkipButtons","onPrevious","onNext","Controls","onPlay","onPause","onStop","cb","active","playButton","pauseButton","stopButton","UrlDropArea","connectDropTarget","isOver","DropTarget","accepts","drop","monitor","onDrop","connect","dropTarget","DragInTrack","backend","HTML5Backend","addedByContent","users","List","i","fullName","user","fullname","Item","userPicture","Description","dateFormat","addedAt","picture","Image","avatar","src","color","AddedBy","Popup","wide","content","trigger","voteNormaliser","v","round","votedByContent","votes","voteScore","Label","circular","size","vote","at","voteLabel","ribbon","icon","normalisedTotal","VotedBy","voteCount","spotifyLink","code","split","pop","calcVoteAverage","mean","flatten","CurrentTrack","userID","Card","defaultImage","Header","playCount","plays","averageVote","votesAverage","currentUserVoter","find","u","_id","currentUserVote","image","label","percent","Meta","year","albumDescription","extra","Rating","maxRating","rating","onRate","_","Detail","href","target","rel","CurrentTrackContainer","googleUser","useContext","progressAsPercent","useSelector","percentage","isNaN","timerToPercentage","useDispatch","googleId","Vote","voteActions","Settings","signIn","signOut","floated","title","profileObj","rounded","imageUrl","Fragment","TrackImage","klass","isCurrent","bordered","hasBeenPlayed","inline","ImageChooser","undefined","TrackHeading","as","TrackDescription","artistName","trackLength","ListItems","beenPlayed","current","classnames","disable","onRemove","onArtistSearch","Tracklist","currentTrack","onRemoveTrack","relaxed","divided","SearchButton","volumeUp","volumeDown","VolumeButtons","onVolumeChange","Group","Or","text","ClearPlaylist","clearButton","horizontal","handleConfirm","ev","onClear","handleCancel","Confirm","cancelButton","confirmButton","onCancel","onConfirm","SearchItem","explicit","SearchItems","onAddTrack","onSubmit","onQueryChange","totalPages","onPageChange","inputEl","useRef","Sidebar","Pushable","animation","inverted","vertical","width","direction","onShow","focus","Form","Field","required","ref","placeholder","onChange","value","fluid","Divider","Pagination","defaultActivePage","firstItem","lastItem","pointing","secondary","Pusher","dimmed","SearchContainer","searchActions","mopidyActions","onSearch","searchOptions","activePage","evt","Dashboard","onTracklistClear","onSearchClick","Dimmer","Dimmable","blurring","Container","Grid","stackable","columns","Column","DragDropContext","isSignedIn","googleTokenId","refreshTokenTimeoutID","useEffect","Zi","_item","getItem","urls","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","jukeboxMiddleware","App","googleAuth","useGoogleLogin","clientId","hostedDomain","Provider","ReactDOM","render","document","getElementById"],"mappings":"uFAMAA,EAAOC,QAAU,CACfC,aANmB,SAACC,GACpB,IAAMC,EAAMD,EAAIE,QAAQ,eAAgB,kBACxC,OAAQD,EAAIE,MAAM,kBAAoBF,EAAM,Q,wvDCyB/BG,E,YAxBb,WAAaC,GAAQ,IAAD,8BAClB,4CAAMA,KACDC,MAAQ,CAAEC,UAAU,GAFP,E,+EAKDC,EAAOC,GAExBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAU1B,OAAIG,KAAKJ,MAAMC,SACN,oDAEFG,KAAKL,MAAMO,a,GArBMC,IAAMC,WCCnBC,EAFWF,IAAMG,gB,kBCFjB,EACe,2BADf,EAEiB,6BAFjB,EAGiB,6BAHjB,EAKS,sBALT,EAMQ,gBANR,EAOW,mBAPX,EAQI,kBARJ,EASe,2BATf,EAUgB,oBAVhB,EAWE,gBAXF,EAYE,gBAZF,EAaG,iBAbH,EAcE,gBAdF,EAeE,oBAfF,EAgBJ,UAhBI,EAiBL,SAjBK,EAkBJ,UAlBI,EAmBD,kBAnBC,EAoBD,kBApBC,EAqBS,sBArBT,EAsBK,kBCtBL,GACbC,kBAAmB,wBACnBC,WAAY,kBACZC,QAAS,gBACTC,WAAY,mBACZC,UAAW,kBACXC,WAAY,mBACZC,aAAc,qBACdC,WAAY,CAAC,kBACbC,KAAM,aACNC,YAAa,mBACbC,kBAAmB,wBACnBC,cAAe,qBACfC,sBAAuB,sBACvBC,sBAAuB,4BACvBC,iBAAkB,wBAClBC,oBAAqB,2BACrBC,iBAAkB,kB,SCbPC,EAAc,SAAAC,GACzB,MAAO,CACLC,KAAMC,EAAMX,YACZS,UAISG,EAAa,WACxB,MAAO,CACLF,KAAMC,EAAMV,oBAIHY,EAAc,SAAAvC,GACzB,IAAIC,EAAMF,uBAAaC,GAEvB,MAAO,CACLoC,KAAMC,EAAMZ,KACZe,IAAKC,EACLC,OAAQ,CAAE,IAAOzC,KAIR0C,EAAkB,SAAAC,GAC7B,MAAO,CACLR,KAAMC,EAAMpB,kBACZ2B,UAISC,EAAiB,SAAAD,GAC5B,MAAO,CACLR,KAAMC,EAAMJ,iBACZW,UAISE,EAAe,SAAAC,GAC1B,MAAO,CACLX,KAAMC,EAAMnB,WACZ6B,SAISC,EAAsB,SAAA/C,GACjC,MAAO,CACLmC,KAAMC,EAAMZ,KACZe,IAAKC,EACLC,OAAQ,CAAE,IAAO,CAACzC,MAITgD,EAAsB,SAACC,EAAUC,GAG5C,OAFIA,IAAaC,MAAYD,EAAW,GAEjC,CACLf,KAAMC,EAAMP,sBACZoB,WACAC,aAISE,EAAY,WACvB,MAAO,CACLjB,KAAMC,EAAMlB,UAIHmC,GAAe,WAC1B,MAAO,CACLlB,KAAMC,EAAMjB,aAIHmC,GAAc,WACzB,MAAO,CACLnB,KAAMC,EAAMhB,YAIHmC,GAAe,WAC1B,MAAO,CACLpB,KAAMC,EAAMf,aAIHmC,GAAiB,WAC5B,MAAO,CACLrB,KAAMC,EAAMd,eAIHmC,GAAkB,WAC7B,MAAO,CACLtB,KAAMC,EAAMN,mBAIH4B,GAAqB,WAChC,MAAO,CACLvB,KAAMC,EAAML,sBAIH4B,GAAkB,WAC7B,MAAO,CACLxB,KAAMC,EAAMZ,KACZe,IAAKC,IAIIoB,GAAkB,WAC7B,MAAO,CACLzB,KAAMC,EAAMZ,KACZe,IAAKC,IAIIqB,GAAW,WACtB,MAAO,CACL1B,KAAMC,EAAMZ,KACZe,IAAKC,IAIIsB,GAAe,WAC1B,MAAO,CACL3B,KAAMC,EAAMZ,KACZe,IAAKC,IAIIuB,GAAiB,WAC5B,MAAO,CACL5B,KAAMC,EAAMZ,KACZe,IAAKC,IAIIwB,GAAe,WAC1B,MAAO,CACL7B,KAAMC,EAAMZ,KACZe,IAAKC,IAIIyB,GAAc,WACzB,MAAO,CACL9B,KAAMC,EAAMZ,KACZe,IAAKC,IAII0B,GAAe,WAC1B,MAAO,CACL/B,KAAMC,EAAMZ,KACZe,IAAKC,IAII2B,GAAc,WACzB,MAAO,CACLhC,KAAMC,EAAMZ,KACZe,IAAKC,IAII4B,GAAkB,WAC7B,MAAO,CACLjC,KAAMC,EAAMZ,KACZe,IAAKC,IAII6B,GAAY,WACvB,MAAO,CACLlC,KAAMC,EAAMZ,KACZe,IAAKC,IAII8B,GAAe,SAACC,GAC3B,MAAO,CACLpC,KAAMC,EAAMT,cACZ4C,WAISC,GAAsB,SAACnE,GAClC,MAAO,CACL8B,KAAMC,EAAMR,sBACZvB,UAISoE,GAAY,SAACF,GACxB,MAAO,CACLpC,KAAMC,EAAMZ,KACZe,IAAKC,EACLC,OAAQ,CAACiC,OAAOH,MC3ML,GACP,aADO,GAEF,WAFE,GAGA,aCHA,GACL,oBADK,GAEM,kBAFN,GAGS,2BAHT,GAIO,yBAJP,GAKU,4BALV,GAMe,gC,qBCJjBI,GAA4B,SAACC,GACxC,IAAIC,EAAUC,KAAKC,MAAMH,EAAS,KAC9BI,GAAYJ,EAAS,IAAS,KAAMK,QAAQ,GAChD,OAAOJ,EAAU,KAAOG,EAAU,GAAK,IAAM,IAAMA,GAGxCE,GAAkB,SAACN,GAC9B,MAAgB,KAATA,GCPIO,GAAsB,SAACC,GAClC,MAAO,CACLjD,KAAMkD,GACND,SAWSE,GAAmB,SAACC,GAC/B,MAAO,CACLpD,KAAMkD,GACNE,UAISC,GAAS,SAACD,EAAOE,GAC5B,MAAO,CACLtD,KAAMkD,GACN9C,IAAK8C,GACL5C,OAAQ,CAAE8C,QAAOE,aC3BN,GACiB,6BCIjBC,GALC,CACdC,OAAQ,SAAAC,GAAO,OAAIC,KAAKC,MAAMF,IAC9BG,aAAc,SAACC,EAAKzD,EAAK0D,GAAX,OAAoBJ,KAAKK,UAAU,CAAEF,MAAKzD,MAAK0D,WCKhDE,GALA,CACbC,QAAS,SAACC,GAAD,OAAaC,SAAOC,KAAKF,EAAS,UAAW,IAAM,KAC5DG,QAAS,SAACH,GAAD,OAAaC,SAAOC,KAAKF,EAAS,UAAW,IAAM,MCKxD7B,GAAsB,SAACiC,EAAOpG,GAClCoG,EAAMC,SAASC,GAA4BtG,KAqF9BuG,GAtDU,SAACH,EAAOb,EAASiB,GAAmB,IAAD,EACpCnB,GAAQC,OAAOC,GAA7BrD,EADkD,EAClDA,IAAK0D,EAD6C,EAC7CA,KAEb,OAAQ1D,GACN,KAAKuE,GACHC,QAAQC,IAAR,wCAA6Cf,EAAK1F,QAClDkG,EAAMC,SAASC,KACf,MACF,KAAKnE,EACL,KAAKA,EACCyD,GAAQA,EAAKtD,OArBC,SAACA,EAAO8D,EAAOQ,GACrCR,EAAMC,SAASC,EAAwBhE,IACvC8D,EAAMC,SAASC,EAAuBhE,IACtC,IAAMkE,EAAgBI,EAASC,IAAI,EAAGvE,EAAMwE,QACxCV,EAAM5C,WAAWuD,QAAQC,gBAAkB7E,GAAmBqE,EAAcS,QAiBpD5E,CAAgBuD,EAAKtD,MAAO8D,EAAOI,GAC3D,MACF,KAAKrE,EACL,KAAKA,GAzCe,SAACiE,EAAOpG,EAAO4G,GACrC,OAAQ5G,GACN,KAAKmC,EACL,KAAKA,EACHgC,GAAoBiC,EAAOpG,GAC3B4G,EAASM,OACTjB,GAAOF,QAAQ,kBACf,MACF,KAAK5D,EACHgC,GAAoBiC,EAAOpG,GAC3B4G,EAASK,SAgCTE,CAAgBf,EAAOR,EAAMY,GAC7B,MACF,KAAKrE,GApBY,SAACiF,EAAWhB,GAC/BA,EAAMC,SAASC,EAAqBc,IAoBhC5E,CAAaoD,EAAMQ,GACnB,MACF,KAAKjE,EACH,IAAMG,EAAQsD,EAAKtD,MACnB2D,GAAOF,QAAP,kBAA0BzD,EAAM+E,KAAhC,cAA0C/E,EAAMgF,MAAMD,KAAtD,eAAiE/E,EAAMiF,OAAOF,OAC9E,MACF,KAAKlF,EACL,KAAKA,EACHiE,EAAMC,SAASC,MACf,MACF,KAAKnE,EACHiE,EAAMC,SAASC,GAAqBV,IACpC,MACF,KAAKzD,EACHiE,EAAMC,SAASC,GAAqBV,IACpCK,GAAOF,QAAQ,kBACf,MACF,KAAK5D,EACHqE,EAAcK,IAAIjB,GAClB,MACF,KAAK4B,GACHpB,EAAMC,SJrEH,CACLvE,KAAMkD,GACNyC,QImEkD7B,IAChD,MACF,KAAK8B,GACC9B,GACFQ,EAAMC,SAASC,EAAuBV,IAExC,MACF,KAAKzD,EACH8D,GAAOE,QAAQP,GACf,MACF,QACEc,QAAQC,IAAR,2BAAgCzE,EAAhC,kBAA6C0D,MC1EpC+B,GAdD,CACZC,YAAa,SAACxB,GACZ,CACE,kBACA,kBACA,WACA,eACA,aACAyB,SAAQ,SAAAC,GACR1B,EAAMC,SAASC,EAAQwB,WCyDdC,GA1DY,WACzB,IAAIrI,EAAG,iBAAasI,yBAAb,YAA6CA,QAChDC,EAAS,KACTzB,EAAgB,KAEpB,OAAO,SAAAJ,GAAK,OAAI,SAAA8B,GAAI,OAAI,SAAAJ,GACtB,IACMK,EAAc,kBAAM9C,GAAQK,aADbU,EAAM5C,WAAW4E,SAASvG,MACeiG,EAAO5F,IAAK4F,EAAO1F,SAE3EiG,EAAsB,SAAAzC,GAC1B,GAAIJ,KAAKC,MAAMG,GAAM0C,OAEnB,OADAlC,EAAMC,SAASC,MACRqB,GAAMC,YAAYxB,GAE3BA,EAAMC,SAASC,OAEXiC,EAAS,SAAAC,GACbhC,EPN4B,SAACJ,EAAOE,GACxC,OAAOmC,KAAc,CACnBC,SAAU,SAAC9F,EAAUC,GACnBuD,EAAMC,SAASC,EAAQ3D,oBAAoBC,EAAUC,KAEvD8F,wBAAyB,EACzBC,8BAA8B,IOAZC,CAAmBzC,EAAOE,GAC1CF,EAAMC,SAASC,OAEXwC,EAAU,SAAAN,GAAI,OAAIpC,EAAMC,SAASC,OACjCyC,EAAY,SAAAnD,GAAI,OAAIW,GAAiBH,EAAOR,EAAMY,IAClDwC,EAAkB,SAAApD,GAAI,OAAIW,GAAiBH,EAAOR,EAAMY,IACxDyC,EAAS,SAAArD,GAAI,OAAIW,GAAiBH,EAAOR,EAAMY,IAkBrD,OAAQsB,EAAOhG,MACb,KAAKoH,EAAUrI,QACb,OAlBY,MAAVoH,GAAgBA,EAAOkB,SAC3BlB,EAASmB,IAAG1J,EAAK,CAAE2J,WAAY,CAAC,gBACzBC,GAAG,OAAQL,GAClBhB,EAAOqB,GAAG,SAAUN,GACpBf,EAAOqB,GAAG,SAAUjB,GACpBJ,EAAOqB,GAAG,UAAWP,GACrBd,EAAOqB,GAAG,UAAWf,GACrBN,EAAOqB,GAAG,aAAcR,QAExB1C,EAAMC,SAASC,MAUf,KAAK4C,EAAUlI,WACb,OAREwF,GAAiBA,EAAc+C,aACnCnD,EAAMC,SAASC,MAQf,KAAK4C,EAAU/H,KACb,OAAO8G,EAAOuB,KAAK,UAAWrB,KAChC,KAAKX,GACH,OAAOS,EAAOuB,KAAK,SAAUrB,KAC/B,KAAKsB,GACH,OAAOxB,EAAOuB,KAAK,OAAQrB,KAC7B,QACE,OAAOD,EAAKJ,OArDO,GCMZxF,GAdD,WAA2B,IAA1BtC,EAAyB,uDAAjB,KAAM8H,EAAW,uCACtC,OAAQA,EAAOhG,MACb,KAAKC,EAAMpB,kBACT,OAAOmH,EAAOxF,MAChB,KAAKP,EAAMJ,iBACT,OAAO+H,OAAOC,OAAO,GAAI3J,EAAO,CAC9B4J,QAAS9B,EAAOxF,MAAMsH,QACtBC,QAAS/B,EAAOxF,MAAMuH,UAE1B,QACE,OAAO7J,ICUEoH,GApBG,WAAyB,IAAxBpH,EAAuB,uDAAf,GAAI8H,EAAW,uCACxC,OAAQA,EAAOhG,MACb,KAAKC,EAAMnB,WACT,OAAOkH,EAAOrF,KAAKqH,KAAI,SAAAC,GAAI,OAAIA,EAAKzH,SACtC,KAAKP,EAAMJ,iBACT,OAAO3B,EAAM8J,KAAI,SAAAC,GACf,OAAIA,EAAKpK,MAAQmI,EAAOxF,MAAM3C,IACrB+J,OAAOC,OAAO,GAAII,EAAM,CAC7BH,QAAS9B,EAAOxF,MAAMsH,QACtBC,QAAS/B,EAAOxF,MAAMuH,UAInBE,KAEX,QACE,OAAO/J,IChBPgK,GAAsB,CAC1BpH,SAAU,EACVC,SAAU,EACVoH,UAAW,GAgBEC,GAbD,WAA0C,IAAzClK,EAAwC,uDAAhCgK,GAAqBlC,EAAW,uCACrD,OAAQA,EAAOhG,MACb,KAAKC,EAAMP,sBACT,MAAO,CACLoB,SAAUkF,EAAOlF,SACjBC,SAAUiF,EAAOjF,SACjBoH,UAAWnC,EAAOjF,SAAWiF,EAAOlF,UAExC,QACE,OAAO5C,ICdPmK,GAAc,CAClB7B,QAAQ,EACR8B,cAAc,EACdlG,OAAQ,EACR8C,cAAe7E,GAkCF4E,GA/BC,WAAkC,IAAjC/G,EAAgC,uDAAxBmK,GAAarC,EAAW,uCAC/C,OAAQA,EAAOhG,MACb,KAAKC,EAAMhB,UACT,OAAO2I,OAAOC,OAAO,GAAI3J,EAAO,CAC9BsI,QAAQ,IAEZ,KAAKvG,EAAMd,aACT,OAAOyI,OAAOC,OAAO,GAAI3J,EAAO,CAC9BsI,QAAQ,IAEZ,KAAKvG,EAAMN,iBACT,OAAOiI,OAAOC,OAAO,GAAI3J,EAAO,CAC9BoK,cAAc,IAElB,KAAKrI,EAAML,oBACT,OAAOgI,OAAOC,OAAO,GAAI3J,EAAO,CAC9BoK,cAAc,IAElB,KAAKrI,EAAMT,cACT,OAAOoI,OAAOC,OAAO,GAAI3J,EAAO,CAC9BkE,OAAQ4D,EAAO5D,SAEnB,KAAKnC,EAAMR,sBACT,OAAOmI,OAAOC,OAAO,GAAI3J,EAAO,CAC9BgH,cAAec,EAAO9H,QAE1B,QACE,OAAOA,ICnCPmK,GAAc,CAClBtI,MAAO,MAmBMuG,GAhBE,WAAkC,IAAjCpI,EAAgC,uDAAxBmK,GAAarC,EAAW,uCAChD,OAAQA,EAAOhG,MACb,KAAKC,EAAMX,YACT,OAAI0G,EAAOjG,QAAU7B,EAAM6B,MAAc7B,EAClC0J,OAAOC,OAAO,GAAI3J,EAAO,CAC9B6B,MAAOiG,EAAOjG,QAElB,KAAKE,EAAMV,kBACT,OAAOqI,OAAOC,OAAO,GAAI3J,EAAO,CAC9B6B,MAAO,OAEX,QACE,OAAO7B,I,wkBChBb,IAAMmK,GAAc,CAClBE,mBAAmB,EACnBnF,MAAO,GACPoF,MAAO,GACPC,OAAQ,EACRC,MAAO,EACP/C,QAAS,IAiCItC,GA9BA,WAAkC,IAAjCnF,EAAgC,uDAAxBmK,GAAarC,EAAW,uCAC9C,OAAQA,EAAOhG,MACb,KAAK2I,GACH,OAAO,GAAP,GACKzK,EADL,CAEEyH,QAASzH,EAAMyH,QAAQiD,QAAO,SAAAX,GAC5B,OAAOA,EAAKzH,MAAM3C,MAAQmI,EAAOnI,SAGvC,KAAK8K,GACH,OAAOf,OAAOC,OAAO,GAAI3J,EAAO,CAC9BqK,kBAAmBvC,EAAO/C,OAE9B,KAAK0F,GACH,OAAOf,OAAOC,OAAO,GAAI3J,EAAO,CAC9BkF,MAAO4C,EAAO5C,QAElB,KAAKuF,GACH,IAAMhD,EAAUK,EAAOL,QAAQkD,OAC/B,OAAOjB,OAAOC,OAAO,GAAI3J,EAAO,CAC9BsK,MAAO7C,EAAQ6C,MACfC,OAAQ9C,EAAQ8C,OAChBC,MAAO/C,EAAQ+C,MAAQ,IAAQ,IAAQ/C,EAAQ+C,MAC/C/C,QAASA,EAAQmD,QAErB,QACE,OAAO5K,ICpBE6K,GATIC,0BAAgB,CACjCxI,SACA8E,aACA8C,SACAnD,WACAqB,YACAjD,Y,kDCCa4F,GAXK,CAClBC,QAAS,SAACC,EAAWlF,GACnB,OAAOmF,MAAwB,WAC7BD,EAAUE,qBAAqBC,MAC7B,SAACC,GAAD,OAActF,EAAQsF,EAASC,aAC/B,SAACC,GAAD,OAAS7E,QAAQ8E,KAAK,yBAA0BD,EAAIvF,cAPxB,OAUlCyF,MAAO,SAACC,GAAaA,GAAIR,KAA0BQ,K,2DCR/CC,GAAiB,SAAC5L,GAAD,OACrB,kBAAC6L,GAAA,EAAD,CACEC,QAAS9L,EAAM8L,QACfC,SAAS,WACTC,UAAU,qBACVC,SAAUjM,EAAMiM,UAEhB,kBAACJ,GAAA,EAAOK,QAAR,CAAgBC,QAAM,GAAtB,QACA,kBAACN,GAAA,EAAOK,QAAR,CAAgBE,SAAO,GACrB,kBAACC,GAAA,EAAD,CAAM/E,KAAK,qBAKXgF,GAAa,SAACtM,GAAD,OACjB,kBAAC6L,GAAA,EAAD,CACEC,QAAS9L,EAAM8L,QACfC,SAAS,WACTC,UAAU,iBACVC,SAAUjM,EAAMiM,UAEhB,kBAACJ,GAAA,EAAOK,QAAR,CAAgBC,QAAM,GAAtB,QACA,kBAACN,GAAA,EAAOK,QAAR,CAAgBE,SAAO,GACrB,kBAACC,GAAA,EAAD,CAAM/E,KAAK,oBAkBFiF,GAbK,SAAC,GAAD,IAAGN,EAAH,EAAGA,SAAUO,EAAb,EAAaA,WAAYC,EAAzB,EAAyBA,OAAzB,OAClB,oCACE,kBAAC,GAAD,CAAgBX,QAASU,EAAYP,SAAUA,IAC/C,kBAAC,GAAD,CAAYH,QAASW,EAAQR,SAAUA,MC0C5BS,GA1BE,SAAC1M,GAAW,IACnBiM,EAAyEjM,EAAzEiM,SAAUhF,EAA+DjH,EAA/DiH,cAAe0F,EAAgD3M,EAAhD2M,OAAQC,EAAwC5M,EAAxC4M,QAASC,EAA+B7M,EAA/B6M,OAAQL,EAAuBxM,EAAvBwM,WAAYC,EAAWzM,EAAXyM,OACtE,OACE,8BACE,kBAAC,GAAD,CACER,SAAUA,EACVO,WAAYA,EACZC,OAAQA,IApDG,SAACK,EAAI7F,EAAegF,GAApB,OACjB,kBAACJ,GAAA,EAAD,CACEC,QAASgB,EACTf,SAAS,WACTE,SAAWhF,IAAkB7E,GAAqB6J,EAClDc,OAAS9F,IAAkB7E,EAC3B4J,UAAU,kBAEV,kBAACH,GAAA,EAAOK,QAAR,CAAgBC,QAAM,GAAtB,QACA,kBAACN,GAAA,EAAOK,QAAR,CAAgBE,SAAO,GACrB,kBAACC,GAAA,EAAD,CAAM/E,KAAK,WA4CV0F,CAAWL,EAAQ1F,EAAegF,GAvCrB,SAACa,EAAI7F,EAAegF,GAApB,OAClB,kBAACJ,GAAA,EAAD,CACEC,QAASgB,EACTf,SAAS,WACTE,SAAWhF,IAAkB7E,GAAoB6E,IAAkB7E,GAAqB6J,EACxFc,OAAS9F,IAAkB7E,EAC3B4J,UAAU,mBAEV,kBAACH,GAAA,EAAOK,QAAR,CAAgBC,QAAM,GAAtB,SACA,kBAACN,GAAA,EAAOK,QAAR,CAAgBE,SAAO,GACrB,kBAACC,GAAA,EAAD,CAAM/E,KAAK,YA8BV2F,CAAYL,EAAS3F,EAAegF,GAzBxB,SAACa,EAAI7F,EAAegF,GAApB,OACjB,kBAACJ,GAAA,EAAD,CACEC,QAASgB,EACTf,SAAS,WACTE,SAAWhF,IAAkB7E,GAAqB6J,EAClDc,OAAS9F,IAAkB7E,EAC3B4J,UAAU,kBAEV,kBAACH,GAAA,EAAOK,QAAR,CAAgBC,QAAM,GAAtB,QACA,kBAACN,GAAA,EAAOK,QAAR,CAAgBE,SAAO,GACrB,kBAACC,GAAA,EAAD,CAAM/E,KAAK,WAgBV4F,CAAWL,EAAQ5F,EAAegF,KCrCnCkB,I,wLACO,IAAD,EAC8B9M,KAAKL,MAAnCoN,EADA,EACAA,kBAAmBC,EADnB,EACmBA,OAE3B,OAAOD,EACL,6BACcC,EATX,yBAAKrB,UAAU,gBAAe,6CADnB,KAWV3L,KAAKL,MAAMO,e,GAPKE,cAmBX6M,0BAAW,SAAAtN,GAAK,OAAIA,EAAMuN,UAvCvB,CAChBC,KADgB,SACVxN,EAAOyN,GACPzN,EAAM0N,QACR1N,EAAM0N,OAAO1N,EAAOyN,MAKP,SAACE,EAASF,GAC3B,MAAO,CACLL,kBAAmBO,EAAQC,aAC3BP,OAAQI,EAAQJ,YA4BLC,CAA0DH,ICpB1DU,GAjBK,SAAC,GAAoC,IAAlC5B,EAAiC,EAAjCA,SAAUyB,EAAuB,EAAvBA,OAAQnN,EAAe,EAAfA,SACvC,OAAI0L,EAAmB1L,EAGrB,kBAAC,2BAAD,CAAyBuN,QAASC,MAChC,kBAAC,GAAD,CAAaR,QAASpE,EAAUhI,WAAYuM,OAAQA,GAChDnN,K,2FCPJyN,I,OAAiB,SAACC,GAAD,OACrB,kBAACC,GAAA,EAAD,KAEID,EAAMlE,KAAI,SAAClE,EAAMsI,GACf,IAAMC,EAAWvI,EAAKwI,KAAOxI,EAAKwI,KAAKC,SAAW,eAElD,OACE,kBAACJ,GAAA,EAAKK,KAAN,CAAWpM,IAAKgM,GACbK,GAAY3I,GACb,kBAACqI,GAAA,EAAKhC,QAAN,KACE,kBAACgC,GAAA,EAAKO,YAAN,KACE,gCAASC,KAAW7I,EAAK8I,QAAS,0BADpC,MAC0EP,WAUlFI,GAAc,SAAA3I,GAClB,OAAIA,GAAQA,EAAKwI,MAAQxI,EAAKwI,KAAKO,QAAgB,kBAACC,GAAA,EAAD,CAAOC,QAAM,EAAC9C,UAAU,wBAAwB+C,IAAKlJ,EAAKwI,KAAKO,UAC3G,kBAACvC,GAAA,EAAD,CAAM/E,KAAK,UAAU0H,MAAM,WAoBrBC,GAjBC,SAAC,GAAoB,IAAD,IAAjBhB,aAAiB,MAAT,GAAS,EAC5Ba,EAASN,GAAYP,EAAM,IACjC,OAAKA,EAAMlH,OAGT,kBAACmI,GAAA,EAAD,CACEC,MAAI,EACJC,QAASpB,GAAeC,GACxBoB,QAASP,IANaA,GC5BtBQ,I,OAAiB,SAACC,GAAD,OAAO7K,KAAK8K,MAAOD,EAAI,GAAM,KAE9CE,GAAiB,SAACC,GAAD,OACrB,kBAACxB,GAAA,EAAD,KAEIwB,EAAM3F,KAAI,SAAClE,EAAMsI,GACf,IAAMC,EAAWvI,EAAKwI,KAAOxI,EAAKwI,KAAKC,SAAW,eAC5CqB,EAAY,kBAACC,GAAA,EAAD,CAAOC,UAAQ,EAACC,KAAK,QAAQR,GAAezJ,EAAKkK,OAEnE,OACE,kBAAC7B,GAAA,EAAKK,KAAN,CAAWpM,IAAKgM,GACbK,GAAY3I,GACb,kBAACqI,GAAA,EAAKhC,QAAN,KACE,kBAACgC,GAAA,EAAKO,YAAN,KACE,gCAASC,KAAW7I,EAAKmK,GAAI,0BAD/B,MACqE5B,EADrE,IACgFuB,UAUxFnB,GAAc,SAAA3I,GAClB,OAAIA,GAAQA,EAAKwI,MAAQxI,EAAKwI,KAAKO,QAAgB,kBAACC,GAAA,EAAD,CAAOC,QAAM,EAAC9C,UAAU,wBAAwB+C,IAAKlJ,EAAKwI,KAAKO,UAC3G,MAGHqB,GAAY,SAACxF,EAAOyF,GACxB,IAAIlB,EAAQ,QACRmB,EAAO,YACLC,EAAkBd,GAAe7E,GAKvC,OAHI2F,EAAkB,IAAGD,EAAO,eAC5BC,EAAkB,IAAGpB,EAAQ,OAG/B,kBAACY,GAAA,EAAD,CACE5D,UAAU,+BACV8D,KAAK,OACLd,MAAOA,EACPmB,KAAMA,EACNf,QAASgB,EACTF,OAAQA,EAAS,QAAU,QAyBlBG,GApBC,SAAC,GAA8B,IAA5B5F,EAA2B,EAA3BA,MAAOiF,EAAoB,EAApBA,MAAOQ,EAAa,EAAbA,OACzBI,EAAYZ,EAAQA,EAAM3I,OAAS,EACzC,OAAI0D,EAAQ,EAAU,KAClB6F,EAAY,EAAUL,GAAUxF,EAAOyF,GAGzC,kBAAChB,GAAA,EAAD,CACEC,KAAK,OACLC,QAASK,GAAeC,GACxBL,QAASY,GAAUxF,EAAOyF,M,8BCrD1BK,I,OAAc,SAAC3Q,GACnB,IAAM4Q,EAAO5Q,EAAI6Q,MAAM,KAAKC,MAC5B,MAAM,kCAAN,OAAyCF,KAmBrCG,GAAkB,SAAC9K,GACvB,IAAM6J,EAAQ7J,EAAKkE,KAAI,SAAAoE,GAAC,OAAIA,EAAE4B,QAC9B,OAAIL,EAAM3I,OAAS,EAAU,EACtB6J,gBAAKC,mBAAQnB,KAuEPoB,GApEM,SAAC9Q,GAAW,IACvBuC,EAA+CvC,EAA/CuC,MAAOsE,EAAwC7G,EAAxC6G,SAAUqD,EAA8BlK,EAA9BkK,UAAWhB,EAAmBlJ,EAAnBkJ,OAAQ6H,EAAW/Q,EAAX+Q,OAC5C,IAAKxO,EAAS,OAjBd,kBAACyO,GAAA,EAAD,KACE,kBAACnC,GAAA,EAAD,CAAOE,IAAKkC,OACZ,kBAACD,GAAA,EAAK9E,QAAN,KACE,kBAAC8E,GAAA,EAAKE,OAAN,wBACA,kBAACF,GAAA,EAAKvC,YAAN,8CAcJ,IAOgB7O,EAVc,EAIL2C,EAAjBsH,eAJsB,MAIZ,GAJY,EAKxB6F,EAAS7F,EAAQ,IAAMA,EAAQ,GAAG6F,OAAU,GAC5CyB,EAAY5O,EAAMuH,QAAQsH,MAC1BC,EAAc9O,EAAMuH,QAAQwH,aAC5BC,EAAmB7B,EAAM8B,MAAK,SAAAC,GAAC,OAAIA,EAAEpD,KAAKqD,MAAQX,KAClDY,EAAkBJ,EAAoBA,EAAiBxB,KAN3C,GAM+D,EAGjF,OACE,kBAACiB,GAAA,EAAD,KACE,kBAACnC,GAAA,EAAD,CACEE,IAAKxM,EAAMqP,OAASX,KACpBY,MAAO,kBAAC,GAAD,CAASpH,MAAO4G,EAAanB,QAAM,MAE5C,kBAACc,GAAA,EAAK9E,QAAN,KACE,yBAAKF,UAAU,sBACb,0BAAMA,UAAU,kBAAkBzH,GAA0B2F,IAC5D,0BAAM8B,UAAU,gBAAgBzH,GAA0BhC,EAAMwE,SAChE,kBAAC,KAAD,CAAM+K,QAASjL,KAEjB,kBAACmK,GAAA,EAAKE,OAAN,KAAc3O,EAAM+E,MACpB,kBAAC0J,GAAA,EAAKe,KAAN,KAAYxP,EAAMiF,OAAOF,MA/CR,SAAAC,GACvB,IAAKA,EAAO,OAAO,KACnB,IAAMyK,EAAOzK,EAAMyK,KAAN,YAAkBzK,EAAMyK,KAAxB,KAAkC,KAC/C,OAAO,kBAAChB,GAAA,EAAKvC,YAAN,KAAmBlH,EAAMD,KAAM0K,GA6C9BC,CAAiB1P,EAAMgF,QAE3B,kBAACyJ,GAAA,EAAK9E,QAAN,CAAcF,UAAU,mBAAmBkG,OAAK,GAC9C,kBAACC,GAAA,EAAD,CACElG,UAAW8E,EACXqB,UA5BU,GA6BVC,OAAQV,EACRW,QAvBQ1S,EAuBO2C,EAAM3C,IAvBL,SAAC2S,EAAG1M,GAAJ,OAAaqD,EAAOtJ,EAAKiG,EAAKwM,YAyBhD,kBAAC,GAAD,CAAS5H,MAAOkG,GAAgBjB,GAAQA,MAAOA,KAEjD,kBAACsB,GAAA,EAAK9E,QAAN,CAAcgG,OAAK,GACjB,kBAACtC,GAAA,EAAD,CAAOE,KAAK,QAAZ,QAEE,kBAACF,GAAA,EAAM4C,OAAP,KAAe3I,EAAQ9C,SAEzB,kBAAC6I,GAAA,EAAD,CAAOE,KAAK,QAAZ,SAEE,kBAACF,GAAA,EAAM4C,OAAP,KAAerB,KAGnB,kBAACH,GAAA,EAAK9E,QAAN,CAAcgG,OAAK,GACjB,kBAAC,GAAD,CAASjE,MAAO1L,EAAMsH,UACtB,uBACEmC,UAAU,YACVyG,KAAMlC,GAAYhO,EAAM3C,KACxB8S,OAAO,SACPC,IAAI,uBACJpQ,EAAM3C,QCnEDgT,GAlBsB,WAAO,IAClCC,EAAeC,qBAAWpS,GAA1BmS,WACFE,EAAoBC,aAAY,SAAA/S,GAAK,OvBGZ,SAAAkK,GAC/B,GAAuB,IAAnBA,EAAMrH,SAAkB,OAAO,EACnC,IAAMD,EAAWiC,GAAgBqF,EAAMtH,UACjCC,EAAWgC,GAAgBqF,EAAMrH,UACjCmQ,EAAavO,KAAK8K,MAAO3M,EAAWC,EAAY,KAEtD,OAAOoQ,MAAMD,GAAc,EAAIA,EuBTgBE,CAAkBlT,EAAMkK,UACjED,EAAY8I,aAAY,SAAA/S,GAAK,OAAIA,EAAMkK,MAAMD,aAC7C3H,EAAQyQ,aAAY,SAAA/S,GAAK,OAAIA,EAAMsC,SACnC+D,EAAW8M,cAEjB,OACE,kBAAC,GAAD,CACErC,OAAQ8B,GAAcA,EAAWQ,SACjC9Q,MAAOA,EACPsE,SAAUkM,EACV7I,UAAWA,EACXhB,OAAQ,SAACtJ,EAAKyS,GAAN,OAAiB/L,EClBX,SAAC1G,EAAKmQ,GACxB,MAAO,CACLhO,KAAMuR,GACNnR,IAAKmR,GACLjR,OAAQ,CAAEzC,MAAKmQ,SDcqBwD,CAAiB3T,EAAKyS,QEe/CmB,I,OA9BS,WAAO,IAAD,EACYV,qBAAWpS,GAA3CmS,EADoB,EACpBA,WAAYY,EADQ,EACRA,OAAQC,EADA,EACAA,QAExB5E,EACF,kBAACjD,GAAA,EAAD,CACEsE,KAAK,YACLwD,QAAQ,QACR7H,QAAS,kBAAM2H,KACfzH,UAAU,qBACV4H,MAAM,uBAgBV,OAbIf,GAAcA,EAAWgB,aAC3B/E,EACE,kBAACD,GAAA,EAAD,CACEiF,SAAO,EACPhE,KAAK,OACL6D,QAAQ,QACRC,MAAOf,EAAWgB,WAAWvM,KAC7ByH,IAAK8D,EAAWgB,WAAWE,SAC3BjI,QAAS,kBAAM4H,QAMnB,kBAAC,IAAMM,SAAP,KAAiBlF,K,6BCrBfmF,I,OAAa,SAACjU,GAClB,IAAIkU,EAAON,EAQX,OANI5T,EAAMmU,YAAWD,EAAQ,iBACzBlU,EAAM8L,UAAY9L,EAAMmU,YAC1BP,EAAQ,gCACRM,EAAQ,gBAIR,kBAACrF,GAAA,EAAD,CACEuF,UAAQ,EACRpI,UAAWkI,EACXpE,KAAM9P,EAAMqU,cAAgB,QAAU,OACtCtF,IAAK/O,EAAM+O,IACX6E,MAAOA,EACP9H,QAAS9L,EAAM8L,QACfwI,QAAM,MAKNC,GAAe,SAACvU,GACpB,IAAqBJ,EAAKkN,EACpB8E,EAAQ5R,EAAM4R,MAAQ5R,EAAM4R,MAAQX,KACpCnF,EAAY9L,EAAMiM,UAAajM,EAAMmU,eAAqDK,GAF3E5U,EAE+CI,EAAMJ,IAFhDkN,EAEqD9M,EAAM8L,QAFpD,kBAAMgB,EAAGlN,KAI1C,OACE,kBAAC,GAAD,CACEmP,IAAK6C,EACLuC,UAAWnU,EAAMmU,UACjBrI,QAASA,EACTuI,cAAerU,EAAMqU,iBAKrBI,GAAe,SAACzU,GAAD,OAAW,kBAACkO,GAAA,EAAKgD,OAAN,CAAawD,GAAG,MAAM1U,EAAMsH,OAEtDqN,GAAmB,SAAC3U,GAAD,OACvB,kBAACkO,GAAA,EAAKO,YAAN,KACE,kBAACF,GAAA,EAAD,CAAMmG,GAAG,IAAI1I,UAAU,oBAAoBF,QAAS9L,EAAM8L,SACvD9L,EAAM4U,YAFX,IAGU,mCAASrQ,GAA0BvE,EAAM6U,aAAzC,OAINC,GAAY,SAAC9U,GACjB,IAAI+U,GAAa,EAGjB,OAAO/U,EAAM4K,OAAOb,KAAI,SAACxH,EAAO4L,GAAO,IAFf6G,EAASpV,EAGvBiK,EAAYtH,EAAZsH,QACFsK,GAJgBa,EAIWhV,EAAMgV,QAJRpV,EAIiB2C,EAAM3C,IAJfoV,GAAWA,EAAQpV,MAAQA,GAK5DyR,EAAc9O,EAAMuH,QAAQwH,aAC5BH,EAAY5O,EAAMuH,QAAQsH,MAGhC,OAFI+C,IAAWY,EAAaA,IAAc,GAGxC,kBAAC7G,GAAA,EAAKK,KAAN,CACEvC,UAAWiJ,KAAW,CAAE,gBAAiBd,IACzChS,IAAG,UAAKgM,GAAL,OAAS5L,EAAM3C,MAElB,kBAAC,GAAD,CACEsV,QAASlV,EAAMiM,SACfrM,IAAK2C,EAAM3C,IACXgS,MAAOrP,EAAMqP,MACbuC,UAAWA,EACXrI,QAAS9L,EAAMmV,SACfd,cAAeU,IAEjB,kBAAC7G,GAAA,EAAKhC,QAAN,CACEF,UAAWiJ,KAAW,CAAE,cAAeF,KAEvC,kBAAC,GAAD,CAAczN,KAAM/E,EAAM+E,OAC1B,kBAAC,GAAD,CACEsN,WAAYrS,EAAMiF,OAAOF,KACzBuN,YAAatS,EAAMwE,OACnB+E,QAAS9L,EAAMoV,eAAe7S,EAAMiF,OAAOF,QAE7C,kBAAC,GAAD,CAASmD,MAAO4G,IAChB,kBAACzB,GAAA,EAAD,CAAO5D,UAAU,cAAc8D,KAAK,QAApC,SAEE,kBAACF,GAAA,EAAM4C,OAAP,KAAerB,IAEjB,kBAAC,GAAD,CAASlD,MAAOpE,UA+BXwL,GAxBG,SAAC,GAAuE,IAArEpJ,EAAoE,EAApEA,SAAUrB,EAA0D,EAA1DA,OAAQ0K,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,cAAeH,EAAqB,EAArBA,eAClE,OAAKxK,EAGH,kBAACsD,GAAA,EAAD,CAAMsH,QAAQ,OAAOC,SAAO,GAC1B,kBAAC,GAAD,CACExJ,SAAUA,EACVrB,OAAQA,EACRoK,QAASM,EACTH,SAAUI,EACVH,eAAgBA,KATA,MChFTM,GAnBM,SAAC,GAAD,IAAG5J,EAAH,EAAGA,QAASG,EAAZ,EAAYA,SAAZ,OACnB,kBAACJ,GAAA,EAAD,CACEE,SAAS,WACT4H,QAAQ,QACR7H,QAASA,EACTG,SAAUA,GAEV,kBAACJ,GAAA,EAAOK,QAAR,CAAgBC,QAAM,GAAtB,UACA,kBAACN,GAAA,EAAOK,QAAR,CAAgBE,SAAO,GACrB,kBAACC,GAAA,EAAD,CAAM/E,KAAK,cCLXqO,GAAW,SAACxR,EAAQ2I,GAExB,IADA3I,GALiB,IACA,IAMf,OAAO,WACL2I,EAAG3I,KAKHyR,GAAa,SAACzR,EAAQ2I,GAE1B,IADA3I,GAdiB,IAEA,EAcf,OAAO,WACL2I,EAAG3I,KA+BM0R,GA1BO,SAAC,GAAD,IAAG5J,EAAH,EAAGA,SAAU9H,EAAb,EAAaA,OAAQ2R,EAArB,EAAqBA,eAArB,OACpB,kBAACjK,GAAA,EAAOkK,MAAR,CAAcpC,QAAQ,SACpB,kBAAC9H,GAAA,EAAD,CACEG,UAAU,iBACVF,QAAS8J,GAAWzR,EAAQ2R,GAC5B7J,SAAUA,GAEV,kBAACI,GAAA,EAAD,CAAM/E,KAAK,iBAEb,kBAACuE,GAAA,EAAOmK,GAAR,CAAWC,KAAM9R,IACjB,kBAAC0H,GAAA,EAAD,CACEG,UAAU,eACVF,QAAS6J,GAASxR,EAAQ2R,GAC1B7J,SAAUA,GAEV,kBAACI,GAAA,EAAD,CAAM/E,KAAK,iB,UCgBF4O,G,2MApDbjW,MAAQ,CAAE+E,MAAM,G,EAEhBmR,YAAc,WACZ,OACE,kBAACvG,GAAA,EAAD,CACEwG,YAAU,EACVtG,KAAK,OACL4E,GAAG,IACH1F,MAAM,MACNlD,QAAS,EAAK3F,KACd6F,UAAU,mBANZ,U,EAWJ7F,KAAO,WACL,EAAK7F,SAAS,CAAE0E,MAAM,K,EAGxBqR,cAAgB,SAACC,GACf,EAAKhW,SAAS,CAAE0E,MAAM,IACtB,EAAKhF,MAAMuW,QAAQD,I,EAGrBE,aAAe,WACb,EAAKlW,SAAS,CAAE0E,MAAM,K,wEAItB,OAAI3E,KAAKL,MAAMiM,SAAmB,KAGhC,8BACG5L,KAAK8V,cACN,kBAACM,GAAA,EAAD,CACErH,QAAQ,8CACRsH,aAAa,YACbC,cAAc,SACd3R,KAAM3E,KAAKJ,MAAM+E,KACjB4R,SAAUvW,KAAKmW,aACfK,UAAWxW,KAAKgW,qB,GAzCE5V,a,8BCEtBqW,I,OAAa,SAAC9W,GAAD,OACjB,yBACEgM,UAAWiJ,KAAW,mBAAoB,CAAE,SAAYjV,EAAMuC,MAAMwU,WACpEjL,QAAS9L,EAAMuC,MAAMwU,cAAWvC,EAAYxU,EAAM8L,SAElD,kBAAC+C,GAAA,EAAD,CACE8E,QAAQ,OACR5E,IAAK/O,EAAMuC,MAAMqP,MACjB9B,KAAK,OACL8D,MAAK,yBAAoB5T,EAAMuC,MAAM+E,KAAhC,cAA0CtH,EAAMuC,MAAMiF,OAAOF,MAClE0E,UAAU,0BACVC,SAAUjM,EAAMuC,MAAMwU,WAExB,kBAAC7I,GAAA,EAAKhC,QAAN,KACE,yBAAKF,UAAU,4BAA4BhM,EAAMuC,MAAM+E,KAAvD,MAAgEtH,EAAMuC,MAAMiF,OAAOF,MACnF,yBAAK0E,UAAU,6BAA6BhM,EAAMuC,MAAMgF,MAAMD,UAK9D0P,GAAc,SAAChX,GAAD,OAClBA,EAAM4K,OAAOb,KAAI,SAAAC,GAAI,OACnB,kBAAC,GAAD,CACE7H,IAAK6H,EAAKzH,MAAM3C,IAChB2C,MAAOyH,EAAKzH,MACZuJ,QAAS,kBAAM9L,EAAMiX,WAAWjN,EAAKzH,MAAM3C,YA8ElCqF,GAzEA,SAACjF,GAAW,IAEvBoM,EAEEpM,EAFFoM,QAASrD,EAEP/I,EAFO+I,QAASrB,EAEhB1H,EAFgB0H,QAASwP,EAEzBlX,EAFyBkX,SAAU/R,EAEnCnF,EAFmCmF,MACrCgS,EACEnX,EADFmX,cAAeF,EACbjX,EADaiX,WAAYG,EACzBpX,EADyBoX,WAAYC,EACrCrX,EADqCqX,aAEnCC,EAAUC,iBAAO,MAEvB,OACE,kBAACC,GAAA,EAAQC,SAAT,KACE,kBAACD,GAAA,EAAD,CACEE,UAAU,UACVvH,KAAK,UACLwH,SAAS,OACTC,SAAS,OACTxL,QAASA,EACTyL,MAAM,YACNC,UAAU,QACV9L,UAAU,iBACV+L,OAAQ,kBAAMT,EAAQtC,QAAQgD,UAE9B,kBAACC,GAAA,EAAD,CAAMN,UAAQ,EAACT,SAAUA,GACvB,kBAACe,GAAA,EAAKC,MAAN,KACE,2BAAOC,UAAQ,GAAf,UACA,2BACEC,IAAKd,EACLe,YAAY,yBACZC,SAAUnB,EACVoB,MAAOpT,KAGX,kBAAC0G,GAAA,EAAD,CAAQ9J,KAAK,SAASyW,OAAK,GAA3B,WAEF,kBAACC,GAAA,EAAD,CAASrC,YAAU,GACjB,kBAAClF,GAAA,EAAD,CAAQwD,GAAG,KAAKiD,UAAQ,GAAxB,YAEAP,EAAa,GACb,kBAACsB,GAAA,EAAD,CACE1M,UAAU,yBACV2M,kBAAmB,EACnBC,UAAW,KACXC,SAAU,KACVC,UAAQ,EACRC,WAAS,EACT3B,WAAYA,EACZC,aAAcA,IAGlB,kBAACnJ,GAAA,EAAD,CAAMuH,SAAO,EAACD,SAAO,EAACmC,UAAQ,EAAC7H,KAAK,QAClC,kBAAC,GAAD,CAAalF,OAAQlD,EAASuP,WAAYA,MAG9C,kBAACO,GAAA,EAAQwB,OAAT,CACEC,OAAQ7M,EACRN,QAASM,EAAUrD,EAAU,MAE3B/I,EAAMO,YCnDD2Y,GAlCgB,SAAClZ,GAC9B,IAAMoF,EAAS4N,aAAY,SAAA/S,GAAK,OAAIA,EAAMmF,UACpCkB,EAAW8M,cAEX6D,EAAa,SAACrX,GAClB0G,E9BoBmC,SAAC1G,GACtC,MAAO,CACLmC,KAAMkD,GACNrF,O8BvBSuZ,CAAsCvZ,IAC/C0G,EAAS8S,EAA0BxZ,KAG/ByZ,EAAW,SAAChX,GAChB,IAAMiX,EAAgB,CACpB9O,QAASnI,EAAOkX,WAAa,GAAKnU,EAAOmF,MACzCA,MAAOnF,EAAOmF,OAEhBjE,EAAS6S,GAAqB/T,EAAOD,MAAOmU,KAG9C,OACE,kBAAC,GAAD,CACElN,QAAShH,EAAOkF,kBAChBvB,QAAS,kBAAMzC,EAAS6S,IAAkC,KAC1DjC,SAAU,kBAAMmC,EAAS,CAAEE,WAAY,KACvCtC,WAAY,SAACrX,GAAD,OAASqX,EAAWrX,IAChCuX,cAAe,SAACqC,GAAD,OAASlT,EAAS6S,GAA+BK,EAAI9G,OAAO6F,SAC3ElB,aAAc,SAAC9E,EAAG1M,GAAJ,OAAawT,EAASxT,IACpC6B,QAAStC,EAAOsC,QAChB0P,WAAY1S,KAAK8K,MAAMpK,EAAOqF,MAAQrF,EAAOmF,OAC7CpF,MAAOC,EAAOD,OAEZnF,EAAMO,WCyDCkZ,I,OA/EG,SAACzZ,GAAW,IAE1BuI,EAiBEvI,EAjBFuI,OACA0D,EAgBEjM,EAhBFiM,SACA9H,EAeEnE,EAfFmE,OACA8C,EAcEjH,EAdFiH,cACA0F,EAaE3M,EAbF2M,OACAE,EAYE7M,EAZF6M,OACAD,EAWE5M,EAXF4M,QACAH,EAUEzM,EAVFyM,OACAD,EASExM,EATFwM,WACAsJ,EAQE9V,EARF8V,eACApI,EAOE1N,EAPF0N,OACAgM,EAME1Z,EANF0Z,iBACAC,EAKE3Z,EALF2Z,cACAtS,EAIErH,EAJFqH,UACAiO,EAGEtV,EAHFsV,aACAC,EAEEvV,EAFFuV,cACAH,EACEpV,EADFoV,eAGF,OACE,kBAACwE,GAAA,EAAOC,SAAR,CACEC,UAAQ,EACRb,QAAS1Q,GAET,kBAAC,GAAD,CACE0D,SAAUA,EACVyB,OAAQA,GAER,kBAAC,GAAD,KACE,kBAACqM,GAAA,EAAD,CAAW/N,UAAU,iBAAiBwM,OAAK,GACzC,kBAAC,GAAD,MACA,kBAAC,GAAD,CACEvM,SAAUA,EACV9H,OAAQA,EACR2R,eAAgBA,IAElB,kBAAC,GAAD,CACEhK,QAAS6N,EACT1N,SAAUA,IAEZ,kBAAC,GAAD,CACEA,SAAUA,EACVhF,cAAeA,EACf0F,OAAQA,EACRE,OAAQA,EACRD,QAASA,EACTH,OAAQA,EACRD,WAAYA,KAGhB,kBAACiM,GAAA,EAAD,MACA,kBAACsB,GAAA,EAAD,CAAW/N,UAAU,eAAewM,OAAK,GACvC,kBAACwB,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGlO,UAAU,kBACpC,kBAACgO,GAAA,EAAKG,OAAN,CAAatC,MAAO,GAClB,kBAAC3G,GAAA,EAAD,CAAQpB,KAAK,SAAb,iBACA,kBAAC,GAAD,OAEF,kBAACkK,GAAA,EAAKG,OAAN,CAAatC,MAAO,GAClB,kBAAC3G,GAAA,EAAD,CAAQpB,KAAK,SAAb,YACW,kBAAC,GAAD,CAAe7D,SAAUA,EAAUsK,QAASmD,KAEvD,kBAAC,GAAD,CACEzN,SAAUA,EACVrB,OAAQvD,EACRiO,aAAcA,EACdC,cAAeA,EACfH,eAAgBA,YCGnBgF,8BAAgBrM,KAAhBqM,EA1EmB,WAChC,IAAMpT,EAAUgM,aAAY,SAAA/S,GAAK,OAAIA,EAAM+G,WACrCK,EAAY2L,aAAY,SAAA/S,GAAK,OAAIA,EAAMoH,aACvCiO,EAAetC,aAAY,SAAA/S,GAAK,OAAIA,EAAMsC,SAC1C+D,EAAW8M,cAJqB,EAKHN,qBAAWpS,GAAtC2Z,EAL8B,EAK9BA,WAAYxH,EALkB,EAKlBA,WACdqC,IAAYmF,GAAcrT,EAAQqD,cAClCiQ,EAAgB/C,mBAChBgD,EAAwBhD,mBAiC9B,OAvBAiD,qBAAU,WAIR,OAHAlU,EAASC,KAGF,WACLD,EAASC,SAEV,CAACD,IAEA+T,GAA8BxH,EAAW4H,GAAGlP,WAlBH+O,EAActF,UAmBzDsF,EAActF,QAAUnC,EAAW4H,GAAGlP,SACtCgP,EAAsBvF,QAAUhK,GAAYC,QAAQ4H,GAAY,SAAC/Q,GAC/DwE,EAASC,EAAoBzE,OAE/BwE,EAASC,EAAoB+T,EAActF,WAGxCqF,IACHC,EAActF,aAAUR,EACxBxJ,GAAYU,MAAM6O,EAAsBvF,SACxC1O,EAASC,MAIT,kBAAC,GAAD,CACEgC,OAAQvB,EAAQuB,OAChB0D,SAAUiJ,EACV/Q,OAAQ6C,EAAQ7C,OAChB8C,cAAeD,EAAQC,cACvB0F,OAAQ,kBAAMrG,EAASC,OACvBsG,OAAQ,kBAAMvG,EAASC,OACvBqG,QAAS,kBAAMtG,EAASC,OACxBkG,OAAQ,kBAAMnG,EAASC,OACvBiG,WAAY,kBAAMlG,EAASC,OAC3BuP,eAAgB,SAAC0D,GAAD,OAASlT,EAASC,GAAkBiT,KACpD9L,OAEE,SAACgN,EAAOjN,GACFA,GACFnH,EAASC,EAAoBkH,EAAQkN,UAAUC,KAAK,MAI1DlB,iBAAkB,kBAAMpT,EAASC,OACjCoT,cAAe,kBAAMrT,EAAS6S,IAAkC,KAChE9R,UAAWA,EACXiO,aAAcA,EACdC,cAEE,SAACiE,GAAD,OAASlT,EAASC,EAA4BiT,KAEhDpE,eAAgB,SAAAjQ,GAAK,OAAI,SAAAoN,GAAC,OA1Db,SAACpN,GAChB,IAAMmU,EAAgB,CAAE9O,OAAQ,GAChClE,EAAS6S,GAAqBhU,EAAOmU,IACrChT,EAAS6S,GAA+BhU,IACxCmB,EAAS6S,IAAkC,IAsDXE,CAASlU,UCnEvC0V,GAAmBC,OAAOC,sCAAwCC,UAClE3U,GAAQ4U,sBAAYnQ,GAAY+P,GAAiBK,0BAAgBC,MAsBxDC,GApBH,WACV,IAAMC,EAAaC,yBAAe,CAChCC,SAAUtT,2EACVuT,aAAc,kBAGhB,OACE,kBAAC,IAAD,CAAUnV,MAAOA,IACf,kBAAC0T,GAAA,EAAD,CAAWvB,OAAK,GACd,kBAAC,EAAkBiD,SAAnB,CAA4BlD,MAAO8C,GACjC,kBAAC,EAAD,KACE,kBAAC,IAAD,MACA,kBAAC,GAAD,W,OCtBZK,IAASC,OACP,kBAAC,GAAD,MACAC,SAASC,eAAe,U,mBCP1Brc,EAAOC,QAAU,IAA0B,8C","file":"static/js/main.741a31f5.chunk.js","sourcesContent":["// https://open.spotify.com/track/0c41pMosF5Kqwwegcps8ES\nconst transformUrl = (url) => {\n  const uri = url.replace(/^.*\\/track\\//, 'spotify:track:')\n  return (uri.match(/spotify:track/g) ? uri : null)\n}\n\nmodule.exports = {\n  transformUrl\n}\n","import React from 'react'\n\n// uses code from https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html\nclass ErrorBoundary extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true })\n\n    // You can also log the error to an error reporting service\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`error: ${error}`)\n      console.log(`info: ${info}`)\n    }\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Ouch! I broke a bit.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import React from 'react'\n\nconst GoogleAuthContext = React.createContext()\n\nexport default GoogleAuthContext\n","export default {\n  PLAYBACK_GET_CURRENT_TRACK: 'playback.getCurrentTrack',\n  EVENT_TRACK_PLAYBACK_STARTED: 'event:trackPlaybackStarted',\n  EVENT_PLAYBACK_STATE_CHANGED: 'event:playbackStateChanged',\n  EVENT_PLAYBACK_STATE_RESUMED: 'event:trackPlaybackResumed',\n  TRACKLIST_GET_TRACKS: 'tracklist.getTracks',\n  TRACKLIST_ADD_TRACK: 'tracklist.add',\n  TRACKLIST_REMOVE_TRACK: 'tracklist.remove',\n  TRACKLIST_CLEAR: 'tracklist.clear',\n  PLAYBACK_GET_TIME_POSITION: 'playback.getTimePosition',\n  PLAYBACK_GET_PLAYBACK_STATE: 'playback.getState',\n  PLAYBACK_PLAY: 'playback.play',\n  PLAYBACK_STOP: 'playback.stop',\n  PLAYBACK_PAUSE: 'playback.pause',\n  PLAYBACK_NEXT: 'playback.next',\n  PLAYBACK_BACK: 'playback.previous',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  STOPPED: 'stopped',\n  SET_VOLUME: 'mixer.setVolume',\n  GET_VOLUME: 'mixer.getVolume',\n  EVENT_VOLUME_CHANGED: 'event:volumeChanged',\n  VALIDATION_ERROR: 'validationError'\n}\n","export default {\n  ADD_CURRENT_TRACK: 'actionAddCurrentTrack',\n  ADD_TRACKS: 'actionAddTracks',\n  CONNECT: 'actionConnect',\n  CONNECTING: 'actionConnecting',\n  CONNECTED: 'actionConnected',\n  DISCONNECT: 'actionDisconnect',\n  DISCONNECTED: 'actionDisconnected',\n  DROP_TYPES: ['__NATIVE_URL__'],\n  SEND: 'actionSend',\n  STORE_TOKEN: 'actionStoreToken',\n  CLEAR_STORE_TOKEN: 'actionClearStoreToken',\n  UPDATE_VOLUME: 'actionUpdateVolume',\n  UPDATE_PLAYBACK_STATE: 'actionPlaybackState',\n  UPDATE_PROGRESS_TIMER: 'actionUpdateProgressTimer',\n  MOPIDY_CONNECTED: 'actionMopidyConnected',\n  MOPIDY_DISCONNECTED: 'actionMopidyDisconnected',\n  SYNC_SOCIAL_DATA: 'syncSocialData'\n}\n","import MopidyApi from 'constants/mopidy-api'\nimport Types from 'constants/common'\nimport { transformUrl } from 'utils/spotify'\n\nexport const updateToken = token => {\n  return {\n    type: Types.STORE_TOKEN,\n    token\n  }\n}\n\nexport const clearToken = () => {\n  return {\n    type: Types.CLEAR_STORE_TOKEN\n  }\n}\n\nexport const addNewTrack = url => {\n  let uri = transformUrl(url)\n\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_ADD_TRACK,\n    params: { 'uri': uri }\n  }\n}\n\nexport const addCurrentTrack = track => {\n  return {\n    type: Types.ADD_CURRENT_TRACK,\n    track\n  }\n}\n\nexport const syncSocialData = track => {\n  return {\n    type: Types.SYNC_SOCIAL_DATA,\n    track\n  }\n}\n\nexport const addTrackList = list => {\n  return {\n    type: Types.ADD_TRACKS,\n    list\n  }\n}\n\nexport const removeFromTracklist = uri => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_REMOVE_TRACK,\n    params: { 'uri': [uri] }\n  }\n}\n\nexport const updateProgressTimer = (position, duration) => {\n  if (duration === Infinity) { duration = 0 }\n\n  return {\n    type: Types.UPDATE_PROGRESS_TIMER,\n    position,\n    duration\n  }\n}\n\nexport const wsConnect = () => {\n  return {\n    type: Types.CONNECT\n  }\n}\n\nexport const wsConnecting = () => {\n  return {\n    type: Types.CONNECTING\n  }\n}\n\nexport const wsConnected = () => {\n  return {\n    type: Types.CONNECTED\n  }\n}\n\nexport const wsDisconnect = () => {\n  return {\n    type: Types.DISCONNECT\n  }\n}\n\nexport const wsDisconnected = () => {\n  return {\n    type: Types.DISCONNECTED\n  }\n}\n\nexport const mopidyConnected = () => {\n  return {\n    type: Types.MOPIDY_CONNECTED\n  }\n}\n\nexport const mopidyDisconnected = () => {\n  return {\n    type: Types.MOPIDY_DISCONNECTED\n  }\n}\n\nexport const getCurrentTrack = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_CURRENT_TRACK\n  }\n}\n\nexport const getTimePosition = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_TIME_POSITION\n  }\n}\n\nexport const getState = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_PLAYBACK_STATE\n  }\n}\n\nexport const getTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_GET_TRACKS\n  }\n}\n\nexport const clearTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_CLEAR\n  }\n}\n\nexport const startPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PLAY\n  }\n}\n\nexport const stopPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_STOP\n  }\n}\n\nexport const pausePlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PAUSE\n  }\n}\n\nexport const nextPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_NEXT\n  }\n}\n\nexport const previousPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_BACK\n  }\n}\n\nexport const getVolume = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.GET_VOLUME\n  }\n}\n\nexport const updateVolume = (volume) => {\n  return {\n    type: Types.UPDATE_VOLUME,\n    volume\n  }\n}\n\nexport const updatePlaybackState = (state) => {\n  return {\n    type: Types.UPDATE_PLAYBACK_STATE,\n    state\n  }\n}\n\nexport const setVolume = (volume) => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.SET_VOLUME,\n    params: [Number(volume)]\n  }\n}\n","export default {\n  VOTE: 'actionVote',\n  CAST_VOTE: 'castVote',\n  VOTE_CASTED: 'voteCasted'\n}\n","export default {\n  SEARCH: 'actionTrackSearch',\n  SEARCH_GET_TRACKS: 'searchGetTracks',\n  STORE_SEARCH_RESULTS: 'actionStoreSearchResults',\n  STORE_SEARCH_QUERY: 'actionStoreSearchQuery',\n  TOGGLE_SEARCH_SIDEBAR: 'actionToggleSearchSidebar',\n  REMOVE_FROM_SEARCH_RESULTS: 'actionRemoveFromSearchResults'\n}\n","import ProgressTimer from 'media-progress-timer'\n\nexport const millisToMinutesAndSeconds = (millis) => {\n  let minutes = Math.floor(millis / 60000)\n  let seconds = ((millis % 60000) / 1000).toFixed(0)\n  return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n}\n\nexport const millisToSeconds = (millis) => {\n  return millis * 0.001\n}\n\nexport const timerToPercentage = timer => {\n  if (timer.duration === 0) { return 0 }\n  const position = millisToSeconds(timer.position)\n  const duration = millisToSeconds(timer.duration)\n  const percentage = Math.round((position / duration) * 100)\n\n  return isNaN(percentage) ? 0 : percentage\n}\n\nexport const trackProgressTimer = (store, actions) => {\n  return ProgressTimer({\n    callback: (position, duration) => {\n      store.dispatch(actions.updateProgressTimer(position, duration))\n    },\n    fallbackTargetFrameRate: 1,\n    disableRequestAnimationFrame: true\n  })\n}\n","import Search from 'search/constants'\n\nexport const toggleSearchSidebar = (open) => {\n  return {\n    type: Search.TOGGLE_SEARCH_SIDEBAR,\n    open\n  }\n}\n\nexport const storeSearchResults = (results) => {\n  return {\n    type: Search.STORE_SEARCH_RESULTS,\n    results\n  }\n}\n\nexport const storeSearchQuery = (query) => {\n  return {\n    type: Search.STORE_SEARCH_QUERY,\n    query\n  }\n}\n\nexport const search = (query, options) => {\n  return {\n    type: Search.SEARCH,\n    key: Search.SEARCH_GET_TRACKS,\n    params: { query, options }\n  }\n}\n\nexport const removeFromSearchResults = (uri) => {\n  return {\n    type: Search.REMOVE_FROM_SEARCH_RESULTS,\n    uri\n  }\n}\n","export default {\n  AUTHENTICATION_TOKEN_INVALID: 'authenticationTokenInvalid'\n}\n","const Payload = {\n  decode: payload => JSON.parse(payload),\n  encodeToJson: (jwt, key, data) => JSON.stringify({ jwt, key, data })\n}\n\nexport default Payload\n","import { notify } from 'react-notify-toast'\n\nconst Notify = {\n  success: (message) => notify.show(message, 'success', 3000, {}),\n  warning: (message) => notify.show(message, 'warning', 3000, {})\n}\n\nexport default Notify\n","import * as actions from 'actions'\nimport * as searchActions from 'search/actions'\nimport AuthApi from 'constants/auth-api'\nimport MopidyApi from 'constants/mopidy-api'\nimport SearchConst from 'search/constants'\nimport VoteConst from 'votes/constants'\nimport Payload from 'utils/payload'\nimport notify from 'utils/notify'\n\nconst updatePlaybackState = (store, state) => {\n  store.dispatch(actions.updatePlaybackState(state))\n}\n\nconst playBackChanged = (store, state, progress) => {\n  switch (state) {\n    case MopidyApi.PAUSED:\n    case MopidyApi.STOPPED:\n      updatePlaybackState(store, state)\n      progress.stop()\n      notify.success('Jukebox Halted')\n      break\n    case MopidyApi.PLAYING:\n      updatePlaybackState(store, state)\n      progress.start()\n      break\n    default:\n      break\n  }\n}\n\nconst addCurrentTrack = (track, store, progress) => {\n  store.dispatch(actions.addCurrentTrack(track))\n  store.dispatch(actions.syncSocialData(track))\n  const progressTimer = progress.set(0, track.length)\n  if (store.getState().jukebox.playbackState === MopidyApi.PLAYING) progressTimer.start()\n}\n\nconst addTrackList = (tracklist, store) => {\n  store.dispatch(actions.addTrackList(tracklist))\n}\n\nconst onMessageHandler = (store, payload, progressTimer) => {\n  const { key, data } = Payload.decode(payload)\n\n  switch (key) {\n    case AuthApi.AUTHENTICATION_TOKEN_INVALID:\n      console.log(`AUTHENTICATION_TOKEN_INVALID: ${data.error}`)\n      store.dispatch(actions.clearToken())\n      break\n    case MopidyApi.PLAYBACK_GET_CURRENT_TRACK:\n    case MopidyApi.EVENT_TRACK_PLAYBACK_STARTED:\n      if (data && data.track) addCurrentTrack(data.track, store, progressTimer)\n      break\n    case MopidyApi.EVENT_PLAYBACK_STATE_CHANGED:\n    case MopidyApi.PLAYBACK_GET_PLAYBACK_STATE:\n      playBackChanged(store, data, progressTimer)\n      break\n    case MopidyApi.TRACKLIST_GET_TRACKS:\n      addTrackList(data, store)\n      break\n    case MopidyApi.TRACKLIST_ADD_TRACK:\n      const track = data.track\n      notify.success(`Adding: ${track.name} / ${track.album.name} by ${track.artist.name}`)\n      break\n    case MopidyApi.PLAYBACK_NEXT:\n    case MopidyApi.PLAYBACK_BACK:\n      store.dispatch(actions.getCurrentTrack())\n      break\n    case MopidyApi.GET_VOLUME:\n      store.dispatch(actions.updateVolume(data))\n      break\n    case MopidyApi.EVENT_VOLUME_CHANGED:\n      store.dispatch(actions.updateVolume(data))\n      notify.success('Volume Changed')\n      break\n    case MopidyApi.PLAYBACK_GET_TIME_POSITION:\n      progressTimer.set(data)\n      break\n    case SearchConst.SEARCH_GET_TRACKS:\n      store.dispatch(searchActions.storeSearchResults(data))\n      break\n    case VoteConst.VOTE_CASTED:\n      if (data) {\n        store.dispatch(actions.syncSocialData(data))\n      }\n      break\n    case MopidyApi.VALIDATION_ERROR:\n      notify.warning(data)\n      break\n    default:\n      console.log(`Unknown message: ${key} body: ${data}`)\n      break\n  }\n}\n\nexport default onMessageHandler\n","import * as actions from 'actions'\n\nconst State = {\n  loadInitial: (store) => {\n    [\n      'getCurrentTrack',\n      'getTimePosition',\n      'getState',\n      'getTrackList',\n      'getVolume'\n    ].forEach(action => {\n      store.dispatch(actions[action]())\n    })\n  }\n}\n\nexport default State\n","import io from 'socket.io-client'\nimport * as actions from 'actions'\nimport Constants from 'constants/common'\nimport VoteConstant from 'votes/constants'\nimport SearchConst from 'search/constants'\nimport { trackProgressTimer } from 'utils/time'\nimport onMessageHandler from 'utils/on-message-handler'\nimport Payload from 'utils/payload'\nimport State from 'utils/state'\n\nconst JukeboxMiddleware = (() => {\n  let url = `http://${process.env.REACT_APP_WS_URL}:${process.env.REACT_APP_WS_PORT}`\n  let socket = null\n  let progressTimer = null\n\n  return store => next => action => {\n    const getJWT = () => store.getState().settings.token\n    const packMessage = () => Payload.encodeToJson(getJWT(store), action.key, action.params)\n\n    const onMopidyStateChange = data => {\n      if (JSON.parse(data).online) {\n        store.dispatch(actions.mopidyConnected())\n        return State.loadInitial(store)\n      }\n      store.dispatch(actions.mopidyDisconnected())\n    }\n    const onOpen = _evt => {\n      progressTimer = trackProgressTimer(store, actions)\n      store.dispatch(actions.wsConnected())\n    }\n    const onClose = _evt => store.dispatch(actions.wsDisconnect())\n    const onMessage = data => onMessageHandler(store, data, progressTimer)\n    const onSearchResults = data => onMessageHandler(store, data, progressTimer)\n    const onVote = data => onMessageHandler(store, data, progressTimer)\n    const onConnect = () => {\n      if (socket != null) socket.close()\n      socket = io(url, { transports: ['websocket'] })\n      socket.on('vote', onVote)\n      socket.on('search', onSearchResults)\n      socket.on('mopidy', onMopidyStateChange)\n      socket.on('message', onMessage)\n      socket.on('connect', onOpen)\n      socket.on('disconnect', onClose)\n\n      store.dispatch(actions.wsConnecting())\n    }\n    const onDisconnect = () => {\n      if (progressTimer) { progressTimer.reset() }\n      store.dispatch(actions.wsDisconnected())\n    }\n\n    switch (action.type) {\n      case Constants.CONNECT:\n        return onConnect()\n      case Constants.DISCONNECT:\n        return onDisconnect()\n      case Constants.SEND:\n        return socket.emit('message', packMessage())\n      case SearchConst.SEARCH:\n        return socket.emit('search', packMessage())\n      case VoteConstant.VOTE:\n        return socket.emit('vote', packMessage())\n      default:\n        return next(action)\n    }\n  }\n})()\n\nexport default JukeboxMiddleware\n","import Types from 'constants/common'\n\nconst track = (state = null, action) => {\n  switch (action.type) {\n    case Types.ADD_CURRENT_TRACK:\n      return action.track\n    case Types.SYNC_SOCIAL_DATA:\n      return Object.assign({}, state, {\n        addedBy: action.track.addedBy,\n        metrics: action.track.metrics\n      })\n    default:\n      return state\n  }\n}\n\nexport default track\n","import Types from 'constants/common'\n\nconst tracklist = (state = [], action) => {\n  switch (action.type) {\n    case Types.ADD_TRACKS:\n      return action.list.map(item => item.track)\n    case Types.SYNC_SOCIAL_DATA:\n      return state.map(item => {\n        if (item.uri === action.track.uri) {\n          return Object.assign({}, item, {\n            addedBy: action.track.addedBy,\n            metrics: action.track.metrics\n          })\n        }\n\n        return item\n      })\n    default:\n      return state\n  }\n}\n\nexport default tracklist\n","import Types from 'constants/common'\n\nconst initalProgressState = {\n  position: 0,\n  duration: 0,\n  remaining: 0\n}\n\nconst timer = (state = initalProgressState, action) => {\n  switch (action.type) {\n    case Types.UPDATE_PROGRESS_TIMER:\n      return {\n        position: action.position,\n        duration: action.duration,\n        remaining: action.duration - action.position\n      }\n    default:\n      return state\n  }\n}\n\nexport default timer\n","import MopidyApi from 'constants/mopidy-api'\nimport Types from 'constants/common'\n\nconst initalState = {\n  online: false,\n  mopidyOnline: false,\n  volume: 0,\n  playbackState: MopidyApi.STOPPED\n}\n\nconst jukebox = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.CONNECTED:\n      return Object.assign({}, state, {\n        online: true\n      })\n    case Types.DISCONNECTED:\n      return Object.assign({}, state, {\n        online: false\n      })\n    case Types.MOPIDY_CONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: true\n      })\n    case Types.MOPIDY_DISCONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: false\n      })\n    case Types.UPDATE_VOLUME:\n      return Object.assign({}, state, {\n        volume: action.volume\n      })\n    case Types.UPDATE_PLAYBACK_STATE:\n      return Object.assign({}, state, {\n        playbackState: action.state\n      })\n    default:\n      return state\n  }\n}\n\nexport default jukebox\n","import Types from 'constants/common'\n\nconst initalState = {\n  token: null\n}\n\nconst settings = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.STORE_TOKEN:\n      if (action.token === state.token) return state\n      return Object.assign({}, state, {\n        token: action.token\n      })\n    case Types.CLEAR_STORE_TOKEN:\n      return Object.assign({}, state, {\n        token: null\n      })\n    default:\n      return state\n  }\n}\n\nexport default settings\n","import Constant from 'search/constants'\n\nconst initalState = {\n  searchSideBarOpen: false,\n  query: '',\n  limit: 20,\n  offset: 0,\n  total: 0,\n  results: []\n}\n\nconst search = (state = initalState, action) => {\n  switch (action.type) {\n    case Constant.REMOVE_FROM_SEARCH_RESULTS:\n      return {\n        ...state,\n        results: state.results.filter(item => {\n          return item.track.uri !== action.uri\n        })\n      }\n    case Constant.TOGGLE_SEARCH_SIDEBAR:\n      return Object.assign({}, state, {\n        searchSideBarOpen: action.open\n      })\n    case Constant.STORE_SEARCH_QUERY:\n      return Object.assign({}, state, {\n        query: action.query\n      })\n    case Constant.STORE_SEARCH_RESULTS:\n      const results = action.results.tracks\n      return Object.assign({}, state, {\n        limit: results.limit,\n        offset: results.offset,\n        total: results.total > 10000 ? 10000 : results.total,\n        results: results.items\n      })\n    default:\n      return state\n  }\n}\n\nexport default search\n","import { combineReducers } from 'redux'\nimport track from 'reducers/track'\nimport tracklist from 'reducers/tracklist'\nimport timer from 'reducers/timer'\nimport jukebox from 'reducers/jukebox'\nimport settings from 'reducers/settings'\nimport search from 'search/reducers'\n\nconst jukeboxApp = combineReducers({\n  track,\n  tracklist,\n  timer,\n  jukebox,\n  settings,\n  search\n})\n\nexport default jukeboxApp\n","import * as workerTimers from 'worker-timers'\n\nconst checkForTokenInMilliseconds = 2700000\n\nconst SignInToken = {\n  refresh: (googleApi, success) => {\n    return workerTimers.setTimeout(() => {\n      googleApi.reloadAuthResponse().then(\n        (response) => success(response.id_token),\n        (err) => console.warn('Token un-refreshable: ', err.message))\n    }, checkForTokenInMilliseconds)\n  },\n  clear: (id) => { if (id) workerTimers.clearTimeout(id) }\n}\n\nexport default SignInToken\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst PreviousButton = (props) => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    className='jb-previous-button'\n    disabled={props.disabled}\n  >\n    <Button.Content hidden>Prev</Button.Content>\n    <Button.Content visible>\n      <Icon name='step backward' />\n    </Button.Content>\n  </Button>\n)\n\nconst NextButton = (props) => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    className='jb-next-button'\n    disabled={props.disabled}\n  >\n    <Button.Content hidden>Next</Button.Content>\n    <Button.Content visible>\n      <Icon name='step forward' />\n    </Button.Content>\n  </Button>\n)\n\nconst SkipButtons = ({ disabled, onPrevious, onNext }) => (\n  <>\n    <PreviousButton onClick={onPrevious} disabled={disabled} />\n    <NextButton onClick={onNext} disabled={disabled} />\n  </>\n)\n\nSkipButtons.propTypes = {\n  disabled: PropTypes.bool,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default SkipButtons\n","import React from 'react'\nimport SkipButtons from 'components/skip-buttons'\nimport MopidyApi from 'constants/mopidy-api'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst playButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.PLAYING || disabled)}\n    active={(playbackState === MopidyApi.PLAYING)}\n    className='jb-play-button'\n  >\n    <Button.Content hidden>Play</Button.Content>\n    <Button.Content visible>\n      <Icon name='play' />\n    </Button.Content>\n  </Button>\n)\n\nconst pauseButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.PAUSED || playbackState === MopidyApi.STOPPED || disabled)}\n    active={(playbackState === MopidyApi.PAUSED)}\n    className='jb-pause-button'\n  >\n    <Button.Content hidden>Pause</Button.Content>\n    <Button.Content visible>\n      <Icon name='pause' />\n    </Button.Content>\n  </Button>\n)\n\nconst stopButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.STOPPED || disabled)}\n    active={(playbackState === MopidyApi.STOPPED)}\n    className='jb-stop-button'\n  >\n    <Button.Content hidden>Stop</Button.Content>\n    <Button.Content visible>\n      <Icon name='stop' />\n    </Button.Content>\n  </Button>\n)\n\nconst Controls = (props) => {\n  const { disabled, playbackState, onPlay, onPause, onStop, onPrevious, onNext } = props\n  return (\n    <span>\n      <SkipButtons\n        disabled={disabled}\n        onPrevious={onPrevious}\n        onNext={onNext}\n      />\n      {playButton(onPlay, playbackState, disabled)}\n      {pauseButton(onPause, playbackState, disabled)}\n      {stopButton(onStop, playbackState, disabled)}\n    </span>\n  )\n}\n\nControls.propTypes = {\n  disabled: PropTypes.bool,\n  playbackState: PropTypes.string,\n  onPlay: PropTypes.func.isRequired,\n  onPause: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default Controls\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DropTarget } from 'react-dnd'\nimport './index.css'\n\nconst boxTarget = {\n  drop (props, monitor) {\n    if (props.onDrop) {\n      props.onDrop(props, monitor)\n    }\n  }\n}\n\nconst boxHandler = (connect, monitor) => {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver()\n  }\n}\n\nconst dropTrack = (show) => {\n  if (!show) return null\n  return <div className='drag-is-over'><p>Drop da track</p></div>\n}\n\nclass UrlDropArea extends Component {\n  render () {\n    const { connectDropTarget, isOver } = this.props\n\n    return connectDropTarget(\n      <div>\n        { dropTrack(isOver) }\n        { this.props.children }\n      </div>\n    )\n  }\n}\n\nUrlDropArea.propTypes = {\n  connectDropTarget: PropTypes.func.isRequired,\n  accepts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onDrop: PropTypes.func\n}\n\nexport default DropTarget(props => props.accepts, boxTarget, boxHandler)(UrlDropArea)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DragDropContextProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport Constants from 'constants/common'\nimport UrlDropArea from 'components/url-drop-area'\n\nconst DragInTrack = ({ disabled, onDrop, children }) => {\n  if (disabled) { return children }\n\n  return (\n    <DragDropContextProvider backend={HTML5Backend}>\n      <UrlDropArea accepts={Constants.DROP_TYPES} onDrop={onDrop}>\n        { children }\n      </UrlDropArea>\n    </DragDropContextProvider>\n  )\n}\n\nDragInTrack.propTypes = {\n  disabled: PropTypes.bool,\n  onDrop: PropTypes.func.isRequired\n}\n\nexport default DragInTrack\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { List, Popup, Icon, Image } from 'semantic-ui-react'\nimport dateFormat from 'dateformat'\nimport './index.css'\n\nconst addedByContent = (users) => (\n  <List>\n    {\n      users.map((data, i) => {\n        const fullName = data.user ? data.user.fullname : 'User unknown'\n\n        return (\n          <List.Item key={i}>\n            {userPicture(data)}\n            <List.Content>\n              <List.Description>\n                <strong>{dateFormat(data.addedAt, 'dd mmm yyyy @ h:MM tt')}</strong> - {fullName}\n              </List.Description>\n            </List.Content>\n          </List.Item>\n        )\n      })\n    }\n  </List>\n)\n\nconst userPicture = data => {\n  if (data && data.user && data.user.picture) return <Image avatar className='added_by_avatar_image' src={data.user.picture} />\n  return <Icon name='spotify' color='green' />\n}\n\nconst AddedBy = ({ users = [] }) => {\n  const avatar = userPicture(users[0])\n  if (!users.length) return avatar\n\n  return (\n    <Popup\n      wide\n      content={addedByContent(users)}\n      trigger={avatar}\n    />\n  )\n}\n\nAddedBy.propTypes = {\n  users: PropTypes.array\n}\n\nexport default AddedBy\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport dateFormat from 'dateformat'\nimport { List, Popup, Image, Label } from 'semantic-ui-react'\nimport './index.css'\n\nconst voteNormaliser = (v) => Math.round((v / 10) - 5) // 100 is max a user can vote per play\n\nconst votedByContent = (votes) => (\n  <List>\n    {\n      votes.map((data, i) => {\n        const fullName = data.user ? data.user.fullname : 'User unknown'\n        const voteScore = <Label circular size='mini'>{voteNormaliser(data.vote)}</Label>\n\n        return (\n          <List.Item key={i}>\n            {userPicture(data)}\n            <List.Content>\n              <List.Description>\n                <strong>{dateFormat(data.at, 'dd mmm yyyy @ h:MM tt')}</strong> - {fullName} {voteScore}\n              </List.Description>\n            </List.Content>\n          </List.Item>\n        )\n      })\n    }\n  </List>\n)\n\nconst userPicture = data => {\n  if (data && data.user && data.user.picture) return <Image avatar className='voted_by_avatar_image' src={data.user.picture} />\n  return null\n}\n\nconst voteLabel = (total, ribbon) => {\n  let color = 'green'\n  let icon = 'thumbs up'\n  const normalisedTotal = voteNormaliser(total)\n\n  if (normalisedTotal < 0) icon = 'thumbs down'\n  if (normalisedTotal < 0) color = 'red'\n\n  return (\n    <Label\n      className='track-label vote-track-label'\n      size='tiny'\n      color={color}\n      icon={icon}\n      content={normalisedTotal}\n      ribbon={ribbon ? 'right' : null}\n    />\n  )\n}\n\nconst VotedBy = ({ total, votes, ribbon }) => {\n  const voteCount = votes ? votes.length : 0\n  if (total < 1) return null\n  if (voteCount < 1) return voteLabel(total, ribbon)\n\n  return (\n    <Popup\n      wide='very'\n      content={votedByContent(votes)}\n      trigger={voteLabel(total, ribbon)}\n    />\n  )\n}\n\nVotedBy.propTypes = {\n  ribbon: PropTypes.bool,\n  votes: PropTypes.array,\n  total: PropTypes.number.isRequired\n}\n\nexport default VotedBy\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Image, Label, Rating } from 'semantic-ui-react'\nimport { Line } from 'rc-progress'\nimport AddedBy from 'components/added-by'\nimport VotedBy from 'components/voted-by'\nimport defaultImage from './default-artwork.png'\nimport { flatten, mean } from 'lodash'\nimport { millisToMinutesAndSeconds } from 'utils/time'\nimport './index.css'\n\nconst spotifyLink = (uri) => {\n  const code = uri.split(':').pop()\n  return `https://open.spotify.com/track/${code}`\n}\n\nconst albumDescription = album => {\n  if (!album) return null\n  const year = album.year ? ` (${album.year})` : null\n  return <Card.Description>{album.name}{year}</Card.Description>\n}\n\nconst noTrack = () => (\n  <Card>\n    <Image src={defaultImage} />\n    <Card.Content>\n      <Card.Header>Nothing playing</Card.Header>\n      <Card.Description>Drag some music here or press play.</Card.Description>\n    </Card.Content>\n  </Card>\n)\n\nconst calcVoteAverage = (data) => {\n  const votes = data.map(i => i.vote)\n  if (votes.length < 1) return 0\n  return mean(flatten(votes))\n}\n\nconst CurrentTrack = (props) => {\n  const { track, progress, remaining, onVote, userID } = props\n  if (!track) { return noTrack() }\n  const maxRating = 10\n  const { addedBy = [] } = track\n  const votes = (addedBy[0] && addedBy[0].votes) || []\n  const playCount = track.metrics.plays\n  const averageVote = track.metrics.votesAverage\n  const currentUserVoter = votes.find(u => u.user._id === userID)\n  const currentUserVote = currentUserVoter ? (currentUserVoter.vote / maxRating) : 0\n  const doVote = (uri) => (_, data) => onVote(uri, data.rating)\n\n  return (\n    <Card>\n      <Image\n        src={track.image || defaultImage}\n        label={<VotedBy total={averageVote} ribbon />}\n      />\n      <Card.Content>\n        <div className='progress-container'>\n          <span className='remaining-text'>{millisToMinutesAndSeconds(remaining)}</span>\n          <span className='track-length'>{millisToMinutesAndSeconds(track.length)}</span>\n          <Line percent={progress} />\n        </div>\n        <Card.Header>{track.name}</Card.Header>\n        <Card.Meta>{track.artist.name}</Card.Meta>\n        { albumDescription(track.album) }\n      </Card.Content>\n      <Card.Content className='rating-container' extra>\n        <Rating\n          disabled={!userID}\n          maxRating={maxRating}\n          rating={currentUserVote}\n          onRate={doVote(track.uri)}\n        />\n        <VotedBy total={calcVoteAverage(votes)} votes={votes} />\n      </Card.Content>\n      <Card.Content extra>\n        <Label size='mini'>\n          Added\n          <Label.Detail>{addedBy.length}</Label.Detail>\n        </Label>\n        <Label size='mini'>\n          Played\n          <Label.Detail>{playCount}</Label.Detail>\n        </Label>\n      </Card.Content>\n      <Card.Content extra>\n        <AddedBy users={track.addedBy} />\n        <a\n          className='track-uri'\n          href={spotifyLink(track.uri)}\n          target='_blank'\n          rel='noopener noreferrer'\n        >{track.uri}</a>\n      </Card.Content>\n    </Card>\n  )\n}\n\nCurrentTrack.propTypes = {\n  userID: PropTypes.string,\n  track: PropTypes.object,\n  progress: PropTypes.number,\n  remaining: PropTypes.number,\n  onVote: PropTypes.func\n}\n\nexport default CurrentTrack\n","import React, { useContext } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport GoogleAuthContext from 'contexts/google'\nimport { timerToPercentage } from 'utils/time'\nimport * as voteActions from 'votes/actions'\nimport CurrentTrack from 'components/current-track'\n\nexport const CurrentTrackContainer = () => {\n  const { googleUser } = useContext(GoogleAuthContext)\n  const progressAsPercent = useSelector(state => timerToPercentage(state.timer))\n  const remaining = useSelector(state => state.timer.remaining)\n  const track = useSelector(state => state.track)\n  const dispatch = useDispatch()\n\n  return (\n    <CurrentTrack\n      userID={googleUser && googleUser.googleId}\n      track={track}\n      progress={progressAsPercent}\n      remaining={remaining}\n      onVote={(uri, rating) => dispatch(voteActions.vote(uri, rating))}\n    />\n  )\n}\n\nexport default CurrentTrackContainer\n","import Vote from 'votes/constants'\n\nexport const vote = (uri, vote) => {\n  return {\n    type: Vote.VOTE,\n    key: Vote.CAST_VOTE,\n    params: { uri, vote }\n  }\n}\n","import React, { useContext } from 'react'\nimport { Button, Image } from 'semantic-ui-react'\nimport GoogleAuthContext from 'contexts/google'\nimport './index.css'\n\nexport const Settings = () => {\n  const { googleUser, signIn, signOut } = useContext(GoogleAuthContext)\n\n  let avatar = (\n    <Button\n      icon='power off'\n      floated='right'\n      onClick={() => signIn()}\n      className='jb-settings-toggle'\n      title='Login using Google'\n    />\n  )\n  if (googleUser && googleUser.profileObj) {\n    avatar = (\n      <Image\n        rounded\n        size='mini'\n        floated='right'\n        title={googleUser.profileObj.name}\n        src={googleUser.profileObj.imageUrl}\n        onClick={() => signOut()}\n      />\n    )\n  }\n\n  return (\n    <React.Fragment>{avatar}</React.Fragment>\n  )\n}\n\nexport default Settings\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { List, Image, Label, Item } from 'semantic-ui-react'\nimport { millisToMinutesAndSeconds } from 'utils/time'\nimport defaultImage from 'components/current-track/default-artwork.png'\nimport AddedBy from 'components/added-by'\nimport VotedBy from 'components/voted-by'\nimport './index.css'\n\nconst TrackImage = (props) => {\n  let klass, title\n\n  if (props.isCurrent) klass = 'current-image'\n  if (props.onClick && !props.isCurrent) {\n    title = 'Click to remove from playlist'\n    klass = 'remove-image'\n  }\n\n  return (\n    <Image\n      bordered\n      className={klass}\n      size={props.hasBeenPlayed ? 'small' : 'tiny'}\n      src={props.src}\n      title={title}\n      onClick={props.onClick}\n      inline\n    />\n  )\n}\n\nconst ImageChooser = (props) => {\n  const removeTrack = (uri, cb) => () => cb(uri)\n  const image = props.image ? props.image : defaultImage\n  const onClick = (!props.disabled && !props.isCurrent) ? removeTrack(props.uri, props.onClick) : undefined\n\n  return (\n    <TrackImage\n      src={image}\n      isCurrent={props.isCurrent}\n      onClick={onClick}\n      hasBeenPlayed={props.hasBeenPlayed}\n    />\n  )\n}\n\nconst TrackHeading = (props) => <List.Header as='h4'>{props.name}</List.Header>\n\nconst TrackDescription = (props) => (\n  <List.Description>\n    <Item as='a' className='track-search-link' onClick={props.onClick}>\n      {props.artistName}\n    </Item> <small>({millisToMinutesAndSeconds(props.trackLength)})</small>\n  </List.Description>\n)\n\nconst ListItems = (props) => {\n  let beenPlayed = false\n  const isCurrentTrack = (current, uri) => current && current.uri === uri\n\n  return props.tracks.map((track, i) => {\n    const { addedBy } = track\n    const isCurrent = isCurrentTrack(props.current, track.uri)\n    const averageVote = track.metrics.votesAverage\n    const playCount = track.metrics.plays\n    if (isCurrent) beenPlayed = beenPlayed || true\n\n    return (\n      <List.Item\n        className={classnames({ 'current-track': isCurrent })}\n        key={`${i}${track.uri}`}\n      >\n        <ImageChooser\n          disable={props.disabled}\n          uri={track.uri}\n          image={track.image}\n          isCurrent={isCurrent}\n          onClick={props.onRemove}\n          hasBeenPlayed={beenPlayed}\n        />\n        <List.Content\n          className={classnames({ 'track-info': !beenPlayed })}\n        >\n          <TrackHeading name={track.name} />\n          <TrackDescription\n            artistName={track.artist.name}\n            trackLength={track.length}\n            onClick={props.onArtistSearch(track.artist.name)}\n          />\n          <VotedBy total={averageVote} />\n          <Label className='track-label' size='tiny'>\n            Played\n            <Label.Detail>{playCount}</Label.Detail>\n          </Label>\n          <AddedBy users={addedBy} />\n        </List.Content>\n      </List.Item>\n    )\n  })\n}\n\nconst Tracklist = ({ disabled, tracks, currentTrack, onRemoveTrack, onArtistSearch }) => {\n  if (!tracks) { return null }\n\n  return (\n    <List relaxed='very' divided>\n      <ListItems\n        disabled={disabled}\n        tracks={tracks}\n        current={currentTrack}\n        onRemove={onRemoveTrack}\n        onArtistSearch={onArtistSearch}\n      />\n    </List>\n  )\n}\n\nTracklist.propTypes = {\n  disabled: PropTypes.bool,\n  tracks: PropTypes.array,\n  currentTrack: PropTypes.object,\n  onRemoveTrack: PropTypes.func.isRequired,\n  onArtistSearch: PropTypes.func.isRequired\n}\n\nexport default Tracklist\n","import React from 'react'\nimport { func, bool } from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst SearchButton = ({ onClick, disabled }) => (\n  <Button\n    animated='vertical'\n    floated='right'\n    onClick={onClick}\n    disabled={disabled}\n  >\n    <Button.Content hidden>Search</Button.Content>\n    <Button.Content visible>\n      <Icon name='search' />\n    </Button.Content>\n  </Button>\n)\n\nSearchButton.propTypes = {\n  onClick: func.isRequired,\n  disabled: bool.isRequired\n}\n\nexport default SearchButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst VOLUME_INC = 2\nconst VOLUME_MAX = 100\nconst VOLUME_MIN = 0\n\nconst volumeUp = (volume, cb) => {\n  volume += VOLUME_INC\n  if (volume <= VOLUME_MAX) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst volumeDown = (volume, cb) => {\n  volume -= VOLUME_INC\n  if (volume >= VOLUME_MIN) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst VolumeButtons = ({ disabled, volume, onVolumeChange }) => (\n  <Button.Group floated='right'>\n    <Button\n      className='jb-volume-down'\n      onClick={volumeDown(volume, onVolumeChange)}\n      disabled={disabled}\n    >\n      <Icon name='volume down' />\n    </Button>\n    <Button.Or text={volume} />\n    <Button\n      className='jb-volume-up'\n      onClick={volumeUp(volume, onVolumeChange)}\n      disabled={disabled}\n    >\n      <Icon name='volume up' />\n    </Button>\n  </Button.Group>\n)\n\nVolumeButtons.propTypes = {\n  disabled: PropTypes.bool,\n  volume: PropTypes.number,\n  onVolumeChange: PropTypes.func.isRequired\n}\n\nexport default VolumeButtons\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Confirm, Label } from 'semantic-ui-react'\n\nclass ClearPlaylist extends Component {\n  state = { open: false }\n\n  clearButton = () => {\n    return (\n      <Label\n        horizontal\n        size='mini'\n        as='a'\n        color='red'\n        onClick={this.show}\n        className='jb-clear-button'\n      >CLEAR</Label>\n    )\n  }\n\n  show = () => {\n    this.setState({ open: true })\n  }\n\n  handleConfirm = (ev) => {\n    this.setState({ open: false })\n    this.props.onClear(ev)\n  }\n\n  handleCancel = () => {\n    this.setState({ open: false })\n  }\n\n  render () {\n    if (this.props.disabled) { return null }\n\n    return (\n      <span>\n        {this.clearButton()}\n        <Confirm\n          content='Are you sure you want to nuke the playlist?'\n          cancelButton='No thanks'\n          confirmButton='Do it!'\n          open={this.state.open}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n        />\n      </span>\n    )\n  }\n}\n\nClearPlaylist.propTypes = {\n  disabled: PropTypes.bool,\n  onClear: PropTypes.func.isRequired\n}\n\nexport default ClearPlaylist\n","import React, { useRef } from 'react'\nimport classnames from 'classnames'\nimport { string, func, bool, array, number } from 'prop-types'\nimport { Sidebar, Button, Form, List, Header, Divider, Image, Pagination } from 'semantic-ui-react'\nimport './index.css'\n\nconst SearchItem = (props) => (\n  <div\n    className={classnames('search-list-item', { 'disabled': props.track.explicit })}\n    onClick={props.track.explicit ? undefined : props.onClick}\n  >\n    <Image\n      floated='left'\n      src={props.track.image}\n      size='mini'\n      title={`Click to add - ${props.track.name} - ${props.track.artist.name}`}\n      className='search-list-item__image'\n      disabled={props.track.explicit}\n    />\n    <List.Content>\n      <div className='search-list-item__header'>{props.track.name} - {props.track.artist.name}</div>\n      <div className='search-list-item__content'>{props.track.album.name}</div>\n    </List.Content>\n  </div>\n)\n\nconst SearchItems = (props) => (\n  props.tracks.map(item => (\n    <SearchItem\n      key={item.track.uri}\n      track={item.track}\n      onClick={() => props.onAddTrack(item.track.uri)}\n    />\n  ))\n)\n\nconst Search = (props) => {\n  const {\n    visible, onClose, results, onSubmit, query,\n    onQueryChange, onAddTrack, totalPages, onPageChange\n  } = props\n  const inputEl = useRef(null)\n\n  return (\n    <Sidebar.Pushable>\n      <Sidebar\n        animation='overlay'\n        icon='labeled'\n        inverted='true'\n        vertical='true'\n        visible={visible}\n        width='very wide'\n        direction='right'\n        className='sidebar-search'\n        onShow={() => inputEl.current.focus()}\n      >\n        <Form inverted onSubmit={onSubmit}>\n          <Form.Field>\n            <label required>SEARCH</label>\n            <input\n              ref={inputEl}\n              placeholder='track, artist or album'\n              onChange={onQueryChange}\n              value={query}\n            />\n          </Form.Field>\n          <Button type='submit' fluid>Submit</Button>\n        </Form>\n        <Divider horizontal>\n          <Header as='h4' inverted>Results</Header>\n        </Divider>\n        {(totalPages > 0) &&\n          <Pagination\n            className='search-list-pagination'\n            defaultActivePage={1}\n            firstItem={null}\n            lastItem={null}\n            pointing\n            secondary\n            totalPages={totalPages}\n            onPageChange={onPageChange}\n          />\n        }\n        <List divided relaxed inverted size='tiny'>\n          <SearchItems tracks={results} onAddTrack={onAddTrack} />\n        </List>\n      </Sidebar>\n      <Sidebar.Pusher\n        dimmed={visible}\n        onClick={visible ? onClose : null}\n      >\n        { props.children }\n      </Sidebar.Pusher>\n    </Sidebar.Pushable >\n  )\n}\n\nSearch.propTypes = {\n  onClose: func.isRequired,\n  onSubmit: func.isRequired,\n  onQueryChange: func.isRequired,\n  onAddTrack: func.isRequired,\n  onPageChange: func.isRequired,\n  visible: bool.isRequired,\n  results: array.isRequired,\n  totalPages: number.isRequired,\n  query: string\n}\n\nexport default Search\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as mopidyActions from 'actions'\nimport * as searchActions from 'search/actions'\nimport SearchSidebar from 'search/components/sidebar'\n\nexport const SearchContainer = (props) => {\n  const search = useSelector(state => state.search)\n  const dispatch = useDispatch()\n\n  const onAddTrack = (uri) => {\n    dispatch(searchActions.removeFromSearchResults(uri))\n    dispatch(mopidyActions.addNewTrack(uri))\n  }\n\n  const onSearch = (params) => {\n    const searchOptions = {\n      offset: (params.activePage - 1) * search.limit,\n      limit: search.limit\n    }\n    dispatch(searchActions.search(search.query, searchOptions))\n  }\n\n  return (\n    <SearchSidebar\n      visible={search.searchSideBarOpen}\n      onClose={() => dispatch(searchActions.toggleSearchSidebar(false))}\n      onSubmit={() => onSearch({ activePage: 1 })}\n      onAddTrack={(uri) => onAddTrack(uri)}\n      onQueryChange={(evt) => dispatch(searchActions.storeSearchQuery(evt.target.value))}\n      onPageChange={(_, data) => onSearch(data)}\n      results={search.results}\n      totalPages={Math.round(search.total / search.limit)}\n      query={search.query}\n    >\n      { props.children }\n    </SearchSidebar>\n  )\n}\n\nexport default SearchContainer\n","import React from 'react'\nimport { Dimmer, Divider, Grid, Header, Container } from 'semantic-ui-react'\nimport Controls from 'components/controls'\nimport DragInTrack from 'components/drag-in-track'\nimport CurrentTrackContainer from 'containers/current-track-container'\nimport Settings from 'components/settings'\nimport TrackList from 'components/tracklist'\nimport SearchButton from 'search/components/button'\nimport VolumeButtons from 'components/volume-buttons'\nimport ClearPlaylist from 'components/clear-playlist'\nimport SearchContainer from 'search'\nimport './index.css'\n\nconst Dashboard = (props) => {\n  const {\n    online,\n    disabled,\n    volume,\n    playbackState,\n    onPlay,\n    onStop,\n    onPause,\n    onNext,\n    onPrevious,\n    onVolumeChange,\n    onDrop,\n    onTracklistClear,\n    onSearchClick,\n    tracklist,\n    currentTrack,\n    onRemoveTrack,\n    onArtistSearch\n  } = props\n\n  return (\n    <Dimmer.Dimmable\n      blurring\n      dimmed={!online}\n    >\n      <DragInTrack\n        disabled={disabled}\n        onDrop={onDrop}\n      >\n        <SearchContainer>\n          <Container className='header-wrapper' fluid>\n            <Settings />\n            <VolumeButtons\n              disabled={disabled}\n              volume={volume}\n              onVolumeChange={onVolumeChange}\n            />\n            <SearchButton\n              onClick={onSearchClick}\n              disabled={disabled}\n            />\n            <Controls\n              disabled={disabled}\n              playbackState={playbackState}\n              onPlay={onPlay}\n              onStop={onStop}\n              onPause={onPause}\n              onNext={onNext}\n              onPrevious={onPrevious}\n            />\n          </Container>\n          <Divider />\n          <Container className='body-wrapper' fluid>\n            <Grid stackable columns={2} className='dashboard-grid'>\n              <Grid.Column width={4}>\n                <Header size='small'>Current Track</Header>\n                <CurrentTrackContainer />\n              </Grid.Column>\n              <Grid.Column width={8}>\n                <Header size='small'>\n                  Playlist <ClearPlaylist disabled={disabled} onClear={onTracklistClear} />\n                </Header>\n                <TrackList\n                  disabled={disabled}\n                  tracks={tracklist}\n                  currentTrack={currentTrack}\n                  onRemoveTrack={onRemoveTrack}\n                  onArtistSearch={onArtistSearch}\n                />\n              </Grid.Column>\n            </Grid>\n          </Container>\n        </SearchContainer>\n      </DragInTrack>\n    </Dimmer.Dimmable>\n  )\n}\n\nexport default Dashboard\n","import React, { useEffect, useContext, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DragDropContext } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport SignInToken from 'utils/signin-token'\nimport GoogleAuthContext from 'contexts/google'\nimport * as actions from 'actions'\nimport * as searchActions from 'search/actions'\nimport Dashboard from 'dashboard'\n\nexport const DashboardContainer = () => {\n  const jukebox = useSelector(state => state.jukebox)\n  const tracklist = useSelector(state => state.tracklist)\n  const currentTrack = useSelector(state => state.track)\n  const dispatch = useDispatch()\n  const { isSignedIn, googleUser } = useContext(GoogleAuthContext)\n  const disable = !(isSignedIn && jukebox.mopidyOnline)\n  const googleTokenId = useRef()\n  const refreshTokenTimeoutID = useRef()\n  const hasTokenChanged = (token) => token !== googleTokenId.current\n\n  const onSearch = (query) => {\n    const searchOptions = { offset: 0 }\n    dispatch(searchActions.search(query, searchOptions))\n    dispatch(searchActions.storeSearchQuery(query, searchOptions))\n    dispatch(searchActions.toggleSearchSidebar(true))\n  }\n\n  useEffect(() => {\n    dispatch(actions.wsConnect())\n\n    /* istanbul ignore next */\n    return () => {\n      dispatch(actions.wsDisconnect())\n    }\n  }, [dispatch])\n\n  if (isSignedIn && hasTokenChanged(googleUser.Zi.id_token)) {\n    googleTokenId.current = googleUser.Zi.id_token\n    refreshTokenTimeoutID.current = SignInToken.refresh(googleUser, (token) => {\n      dispatch(actions.updateToken(token))\n    })\n    dispatch(actions.updateToken(googleTokenId.current))\n  }\n\n  if (!isSignedIn) {\n    googleTokenId.current = undefined\n    SignInToken.clear(refreshTokenTimeoutID.current)\n    dispatch(actions.clearToken())\n  }\n\n  return (\n    <Dashboard\n      online={jukebox.online}\n      disabled={disable}\n      volume={jukebox.volume}\n      playbackState={jukebox.playbackState}\n      onPlay={() => dispatch(actions.startPlaying())}\n      onStop={() => dispatch(actions.stopPlaying())}\n      onPause={() => dispatch(actions.pausePlaying())}\n      onNext={() => dispatch(actions.nextPlaying())}\n      onPrevious={() => dispatch(actions.previousPlaying())}\n      onVolumeChange={(evt) => dispatch(actions.setVolume(evt))}\n      onDrop={\n        /* istanbul ignore next */\n        (_item, monitor) => {\n          if (monitor) {\n            dispatch(actions.addNewTrack(monitor.getItem().urls[0]))\n          }\n        }\n      }\n      onTracklistClear={() => dispatch(actions.clearTrackList())}\n      onSearchClick={() => dispatch(searchActions.toggleSearchSidebar(true))}\n      tracklist={tracklist}\n      currentTrack={currentTrack}\n      onRemoveTrack={\n        /* istanbul ignore next */\n        (evt) => dispatch(actions.removeFromTracklist(evt))\n      }\n      onArtistSearch={query => _ => onSearch(query)}\n    />\n  )\n}\n\nexport default DragDropContext(HTML5Backend)(DashboardContainer)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport Notifications from 'react-notify-toast'\nimport { useGoogleLogin } from 'react-use-googlelogin'\nimport ErrorBoundary from 'components/error-boundary'\nimport GoogleAuthContext from 'contexts/google'\nimport jukeboxMiddleware from 'containers/jukebox-middleware'\nimport jukeboxApp from 'reducers'\nimport { Container } from 'semantic-ui-react'\nimport DashboardContainer from 'containers/dashboard-container'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(jukeboxApp, composeEnhancers(applyMiddleware(jukeboxMiddleware)))\n\nconst App = () => {\n  const googleAuth = useGoogleLogin({\n    clientId: process.env.REACT_APP_CLIENT_ID,\n    hostedDomain: 'kyanmedia.com'\n  })\n\n  return (\n    <Provider store={store}>\n      <Container fluid>\n        <GoogleAuthContext.Provider value={googleAuth}>\n          <ErrorBoundary>\n            <Notifications />\n            <DashboardContainer />\n          </ErrorBoundary>\n        </GoogleAuthContext.Provider>\n      </Container>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n","module.exports = __webpack_public_path__ + \"static/media/default-artwork.6bba9800.png\";"],"sourceRoot":""}