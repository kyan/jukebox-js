{"version":3,"sources":["utils/spotify/index.js","components/error-boundary/index.js","contexts/google.js","constants/mopidy-api.js","constants/common.js","actions/index.js","votes/constants.js","search/constants.js","utils/time/index.js","search/actions/index.js","constants/auth-api.js","utils/payload/index.js","utils/notify/index.js","utils/on-message-handler/index.js","utils/state/index.js","containers/jukebox-middleware/index.js","reducers/track/index.js","reducers/tracklist/index.js","reducers/timer/index.js","reducers/jukebox/index.js","reducers/settings/index.js","search/reducers/index.js","reducers/index.js","utils/signin-token/index.js","components/skip-buttons/index.js","components/controls/index.js","components/url-drop-area/index.js","components/drag-in-track/index.js","components/added-by/index.js","components/voted-by/index.js","components/current-track/index.js","containers/current-track-container/index.js","votes/actions/index.js","components/settings/index.js","components/tracklist/index.js","search/components/button/index.js","components/volume-buttons/index.js","components/clear-playlist/index.js","search/components/sidebar/index.js","search/index.js","dashboard/index.js","containers/dashboard-container/index.js","App.js","index.js","components/current-track/default-artwork.png"],"names":["module","exports","transformUrl","url","uri","replace","match","ErrorBoundary","props","state","hasError","error","info","this","setState","children","React","Component","GoogleAuthContext","createContext","ADD_CURRENT_TRACK","ADD_TRACKS","CONNECT","CONNECTING","CONNECTED","DISCONNECT","DISCONNECTED","DROP_TYPES","SEND","STORE_TOKEN","CLEAR_STORE_TOKEN","UPDATE_VOLUME","UPDATE_PLAYBACK_STATE","UPDATE_PROGRESS_TIMER","MOPIDY_CONNECTED","MOPIDY_DISCONNECTED","SYNC_SOCIAL_DATA","updateToken","token","type","Types","clearToken","addNewTrack","key","MopidyApi","params","addCurrentTrack","track","syncSocialData","addTrackList","list","removeFromTracklist","updateProgressTimer","position","duration","Infinity","wsConnect","wsConnecting","wsConnected","wsDisconnect","wsDisconnected","mopidyConnected","mopidyDisconnected","getCurrentTrack","getTimePosition","getState","getTrackList","clearTrackList","startPlaying","stopPlaying","pausePlaying","nextPlaying","previousPlaying","getVolume","updateVolume","volume","updatePlaybackState","setVolume","Number","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","millisToSeconds","toggleSearchSidebar","open","Search","Payload","encode","jwt","data","decode","payload","JSON","parse","encodeToJson","stringify","Notify","success","message","notify","show","warning","store","dispatch","actions","onMessageHandler","progressTimer","AuthApi","console","log","progress","set","length","jukebox","playbackState","start","stop","playBackChanged","tracklist","name","album","artist","SearchConst","results","VoteConst","State","loadInitial","forEach","action","JukeboxMiddleware","process","socket","next","packMessage","settings","mopidyStateChange","online","onOpen","_evt","ProgressTimer","callback","fallbackTargetFrameRate","disableRequestAnimationFrame","trackProgressTimer","onClose","onMessage","onSearchResults","onVote","Constants","close","io","transports","on","reset","emit","VoteConstant","Object","assign","addedBy","metrics","map","item","initalProgressState","remaining","timer","initalState","mopidyOnline","searchSideBarOpen","query","limit","offset","total","search","Constant","filter","tracks","items","jukeboxApp","combineReducers","SignInToken","refresh","googleApi","workerTimers","reloadAuthResponse","then","response","id_token","err","warn","clear","id","SkipButtons","disabled","onPrevious","onNext","cb","Button","onClick","animated","className","Content","hidden","visible","Icon","previousButton","nextButton","Controls","onPlay","onPause","onStop","active","playButton","pauseButton","stopButton","UrlDropArea","connectDropTarget","isOver","DropTarget","accepts","drop","monitor","onDrop","connect","dropTarget","DragInTrack","backend","HTML5Backend","addedByContent","users","List","fullName","user","fullname","Item","addedAt","userPicture","Description","dateFormat","picture","Image","avatar","src","color","AddedBy","Popup","wide","content","trigger","voteNormaliser","v","round","votedByContent","votes","voteScore","Label","circular","size","vote","at","voteLabel","ribbon","icon","normalisedTotal","VotedBy","voteCount","spotifyLink","code","split","pop","calcVoteAverage","i","mean","flatten","CurrentTrack","userID","Card","defaultImage","Header","playCount","plays","averageVote","votesAverage","currentUserVoter","find","u","_id","currentUserVote","image","label","percent","Meta","year","albumDescription","extra","Rating","maxRating","rating","onRate","_","Detail","href","target","rel","CurrentTrackContainer","googleUser","useContext","progressAsPercent","useSelector","percentage","isNaN","timerToPercentage","useDispatch","googleId","Vote","voteActions","Settings","signIn","signOut","floated","title","profileObj","rounded","imageUrl","Fragment","imageChooser","isCurrent","onRemoveTrack","hasBeenPlayed","klass","bordered","inline","trackImage","undefined","listItems","currentTrack","time","index","isCurrentTrack","Date","now","classnames","as","trackHeading","trackDescription","Tracklist","relaxed","divided","SearchButton","volumeUp","volumeDown","VolumeButtons","onVolumeChange","Group","Or","text","ClearPlaylist","clearButton","horizontal","handleConfirm","ev","onClear","handleCancel","Confirm","cancelButton","confirmButton","onCancel","onConfirm","onSubmit","onQueryChange","onAddTrack","totalPages","onPageChange","inputEl","useRef","Sidebar","Pushable","animation","inverted","vertical","width","direction","onShow","current","focus","Form","Field","required","ref","placeholder","onChange","fluid","Divider","Pagination","defaultActivePage","firstItem","lastItem","pointing","secondary","Pusher","dimmed","SearchContainer","searchActions","mopidyActions","onSearch","searchOptions","activePage","options","evt","value","Dashboard","onTracklistClear","onSearchClick","Dimmer","Dimmable","blurring","Container","Grid","stackable","columns","Column","DragDropContext","isSignedIn","disable","googleTokenId","refreshTokenTimeoutID","useEffect","Zi","_item","getItem","urls","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","jukeboxMiddleware","App","googleAuth","useGoogleLogin","clientId","hostedDomain","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79fcba42.chunk.js","sourcesContent":["// https://open.spotify.com/track/0c41pMosF5Kqwwegcps8ES\nconst transformUrl = (url) => {\n  const uri = url.replace(/^.*\\/track\\//, 'spotify:track:')\n  return (uri.match(/spotify:track/g) ? uri : null)\n}\n\nmodule.exports = {\n  transformUrl\n}\n","import React from 'react'\n\n// uses code from https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html\nclass ErrorBoundary extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true })\n\n    // You can also log the error to an error reporting service\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`error: ${error}`)\n      console.log(`info: ${info}`)\n    }\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Ouch! I broke a bit.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import React from 'react'\n\nconst GoogleAuthContext = React.createContext()\n\nexport default GoogleAuthContext\n","export default {\n  PLAYBACK_GET_CURRENT_TRACK: 'mopidy::playback.getCurrentTrack',\n  EVENT_TRACK_PLAYBACK_STARTED: 'mopidy::event:trackPlaybackStarted',\n  EVENT_PLAYBACK_STATE_CHANGED: 'mopidy::event:playbackStateChanged',\n  EVENT_PLAYBACK_STATE_RESUMED: 'mopidy::event:trackPlaybackResumed',\n  TRACKLIST_GET_TRACKS: 'mopidy::tracklist.getTracks',\n  TRACKLIST_ADD_TRACK: 'mopidy::tracklist.add',\n  TRACKLIST_REMOVE_TRACK: 'mopidy::tracklist.remove',\n  TRACKLIST_CLEAR: 'mopidy::tracklist.clear',\n  PLAYBACK_GET_TIME_POSITION: 'mopidy::playback.getTimePosition',\n  PLAYBACK_GET_PLAYBACK_STATE: 'mopidy::playback.getState',\n  PLAYBACK_PLAY: 'mopidy::playback.play',\n  PLAYBACK_STOP: 'mopidy::playback.stop',\n  PLAYBACK_PAUSE: 'mopidy::playback.pause',\n  PLAYBACK_NEXT: 'mopidy::playback.next',\n  PLAYBACK_BACK: 'mopidy::playback.previous',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  STOPPED: 'stopped',\n  SET_VOLUME: 'mopidy::mixer.setVolume',\n  GET_VOLUME: 'mopidy::mixer.getVolume',\n  EVENT_VOLUME_CHANGED: 'mopidy::event:volumeChanged',\n  VALIDATION_ERROR: 'mopidy::validationError'\n}\n","export default {\n  ADD_CURRENT_TRACK: 'actionAddCurrentTrack',\n  ADD_TRACKS: 'actionAddTracks',\n  CONNECT: 'actionConnect',\n  CONNECTING: 'actionConnecting',\n  CONNECTED: 'actionConnected',\n  DISCONNECT: 'actionDisconnect',\n  DISCONNECTED: 'actionDisconnected',\n  DROP_TYPES: ['__NATIVE_URL__'],\n  SEND: 'actionSend',\n  STORE_TOKEN: 'actionStoreToken',\n  CLEAR_STORE_TOKEN: 'actionClearStoreToken',\n  UPDATE_VOLUME: 'actionUpdateVolume',\n  UPDATE_PLAYBACK_STATE: 'actionPlaybackState',\n  UPDATE_PROGRESS_TIMER: 'actionUpdateProgressTimer',\n  MOPIDY_CONNECTED: 'actionMopidyConnected',\n  MOPIDY_DISCONNECTED: 'actionMopidyDisconnected',\n  SYNC_SOCIAL_DATA: 'syncSocialData'\n}\n","import MopidyApi from 'constants/mopidy-api'\nimport Types from 'constants/common'\nimport { transformUrl } from 'utils/spotify'\n\nexport const updateToken = token => {\n  return {\n    type: Types.STORE_TOKEN,\n    token\n  }\n}\n\nexport const clearToken = () => {\n  return {\n    type: Types.CLEAR_STORE_TOKEN\n  }\n}\n\nexport const addNewTrack = url => {\n  let uri = transformUrl(url)\n\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_ADD_TRACK,\n    params: { 'uri': uri }\n  }\n}\n\nexport const addCurrentTrack = track => {\n  return {\n    type: Types.ADD_CURRENT_TRACK,\n    track\n  }\n}\n\nexport const syncSocialData = track => {\n  return {\n    type: Types.SYNC_SOCIAL_DATA,\n    track\n  }\n}\n\nexport const addTrackList = list => {\n  return {\n    type: Types.ADD_TRACKS,\n    list\n  }\n}\n\nexport const removeFromTracklist = uri => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_REMOVE_TRACK,\n    params: { 'uri': [uri] }\n  }\n}\n\nexport const updateProgressTimer = (position, duration) => {\n  if (duration === Infinity) { duration = 0 }\n\n  return {\n    type: Types.UPDATE_PROGRESS_TIMER,\n    position,\n    duration\n  }\n}\n\nexport const wsConnect = () => {\n  return {\n    type: Types.CONNECT\n  }\n}\n\nexport const wsConnecting = () => {\n  return {\n    type: Types.CONNECTING\n  }\n}\n\nexport const wsConnected = () => {\n  return {\n    type: Types.CONNECTED\n  }\n}\n\nexport const wsDisconnect = () => {\n  return {\n    type: Types.DISCONNECT\n  }\n}\n\nexport const wsDisconnected = () => {\n  return {\n    type: Types.DISCONNECTED\n  }\n}\n\nexport const mopidyConnected = () => {\n  return {\n    type: Types.MOPIDY_CONNECTED\n  }\n}\n\nexport const mopidyDisconnected = () => {\n  return {\n    type: Types.MOPIDY_DISCONNECTED\n  }\n}\n\nexport const getCurrentTrack = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_CURRENT_TRACK\n  }\n}\n\nexport const getTimePosition = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_TIME_POSITION\n  }\n}\n\nexport const getState = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_PLAYBACK_STATE\n  }\n}\n\nexport const getTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_GET_TRACKS\n  }\n}\n\nexport const clearTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_CLEAR\n  }\n}\n\nexport const startPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PLAY\n  }\n}\n\nexport const stopPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_STOP\n  }\n}\n\nexport const pausePlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PAUSE\n  }\n}\n\nexport const nextPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_NEXT\n  }\n}\n\nexport const previousPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_BACK\n  }\n}\n\nexport const getVolume = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.GET_VOLUME\n  }\n}\n\nexport const updateVolume = (volume) => {\n  return {\n    type: Types.UPDATE_VOLUME,\n    volume\n  }\n}\n\nexport const updatePlaybackState = (state) => {\n  return {\n    type: Types.UPDATE_PLAYBACK_STATE,\n    state\n  }\n}\n\nexport const setVolume = (volume) => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.SET_VOLUME,\n    params: [Number(volume)]\n  }\n}\n","export default {\n  VOTE: 'actionVote',\n  CAST_VOTE: 'vote::castVote',\n  VOTE_CASTED: 'vote::voteCasted'\n}\n","export default {\n  SEARCH: 'actionTrackSearch',\n  SEARCH_GET_TRACKS: 'search::getTracks',\n  STORE_SEARCH_RESULTS: 'actionStoreSearchResults',\n  STORE_SEARCH_QUERY: 'actionStoreSearchQuery',\n  TOGGLE_SEARCH_SIDEBAR: 'actionToggleSearchSidebar',\n  REMOVE_FROM_SEARCH_RESULTS: 'actionRemoveFromSearchResults'\n}\n","import ProgressTimer from 'media-progress-timer'\n\nexport const millisToMinutesAndSeconds = (millis) => {\n  let minutes = Math.floor(millis / 60000)\n  let seconds = ((millis % 60000) / 1000).toFixed(0)\n  return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n}\n\nexport const millisToSeconds = (millis) => {\n  return millis * 0.001\n}\n\nexport const timerToPercentage = timer => {\n  if (timer.duration === 0) { return 0 }\n  const position = millisToSeconds(timer.position)\n  const duration = millisToSeconds(timer.duration)\n  const percentage = Math.round((position / duration) * 100)\n\n  return isNaN(percentage) ? 0 : percentage\n}\n\nexport const trackProgressTimer = (store, actions) => {\n  return ProgressTimer({\n    callback: (position, duration) => {\n      store.dispatch(actions.updateProgressTimer(position, duration))\n    },\n    fallbackTargetFrameRate: 1,\n    disableRequestAnimationFrame: true\n  })\n}\n","import Search from 'search/constants'\n\nexport const toggleSearchSidebar = (open) => {\n  return {\n    type: Search.TOGGLE_SEARCH_SIDEBAR,\n    open\n  }\n}\n\nexport const storeSearchResults = (results) => {\n  return {\n    type: Search.STORE_SEARCH_RESULTS,\n    results\n  }\n}\n\nexport const storeSearchQuery = (query) => {\n  return {\n    type: Search.STORE_SEARCH_QUERY,\n    query\n  }\n}\n\nexport const search = (query, options) => {\n  return {\n    type: Search.SEARCH,\n    key: Search.SEARCH_GET_TRACKS,\n    params: { query, options }\n  }\n}\n\nexport const removeFromSearchResults = (uri) => {\n  return {\n    type: Search.REMOVE_FROM_SEARCH_RESULTS,\n    uri\n  }\n}\n","export default {\n  AUTHENTICATION_TOKEN_INVALID: 'auth::authenticationTokenInvalid'\n}\n","const Payload = {\n  encode: (jwt, key, data) => {\n    return {\n      jwt,\n      key,\n      data\n    }\n  },\n\n  decode: payload => {\n    return JSON.parse(payload)\n  },\n\n  encodeToJson: (jwt, key, data) => {\n    return JSON.stringify(Payload.encode(jwt, key, data))\n  }\n}\n\nexport default Payload\n","import { notify } from 'react-notify-toast'\n\nconst Notify = {\n  success: (message) => notify.show(message, 'success', 3000, {}),\n  warning: (message) => notify.show(message, 'warning', 3000, {})\n}\n\nexport default Notify\n","import * as actions from 'actions'\nimport * as searchActions from 'search/actions'\nimport AuthApi from 'constants/auth-api'\nimport MopidyApi from 'constants/mopidy-api'\nimport SearchConst from 'search/constants'\nimport VoteConst from 'votes/constants'\nimport Payload from 'utils/payload'\nimport notify from 'utils/notify'\n\nconst updatePlaybackState = (store, state) => {\n  store.dispatch(actions.updatePlaybackState(state))\n}\n\nconst playBackChanged = (store, state, progress) => {\n  switch (state) {\n    case MopidyApi.PAUSED:\n    case MopidyApi.STOPPED:\n      updatePlaybackState(store, state)\n      progress.stop()\n      notify.success('Jukebox Halted')\n      break\n    case MopidyApi.PLAYING:\n      updatePlaybackState(store, state)\n      progress.start()\n      break\n    default:\n      break\n  }\n}\n\nconst addCurrentTrack = (track, store, progress) => {\n  store.dispatch(actions.addCurrentTrack(track))\n  store.dispatch(actions.syncSocialData(track))\n  const progressTimer = progress.set(0, track.length)\n  if (store.getState().jukebox.playbackState === MopidyApi.PLAYING) progressTimer.start()\n}\n\nconst addTrackList = (tracklist, store) => {\n  store.dispatch(actions.addTrackList(tracklist))\n}\n\nconst onMessageHandler = (store, payload, progressTimer) => {\n  const { key, data } = Payload.decode(payload)\n\n  switch (key) {\n    case AuthApi.AUTHENTICATION_TOKEN_INVALID:\n      console.log(`AUTHENTICATION_TOKEN_INVALID: ${data.error}`)\n      store.dispatch(actions.clearToken())\n      break\n    case MopidyApi.PLAYBACK_GET_CURRENT_TRACK:\n    case MopidyApi.EVENT_TRACK_PLAYBACK_STARTED:\n      if (data && data.track) addCurrentTrack(data.track, store, progressTimer)\n      break\n    case MopidyApi.EVENT_PLAYBACK_STATE_CHANGED:\n    case MopidyApi.PLAYBACK_GET_PLAYBACK_STATE:\n      playBackChanged(store, data, progressTimer)\n      break\n    case MopidyApi.TRACKLIST_GET_TRACKS:\n      addTrackList(data, store)\n      break\n    case MopidyApi.TRACKLIST_ADD_TRACK:\n      const track = data.track\n      notify.success(`Adding: ${track.name} / ${track.album.name} by ${track.artist.name}`)\n      break\n    case MopidyApi.PLAYBACK_NEXT:\n    case MopidyApi.PLAYBACK_BACK:\n      store.dispatch(actions.getCurrentTrack())\n      break\n    case MopidyApi.GET_VOLUME:\n      store.dispatch(actions.updateVolume(data))\n      break\n    case MopidyApi.EVENT_VOLUME_CHANGED:\n      store.dispatch(actions.updateVolume(data))\n      notify.success('Volume Changed')\n      break\n    case MopidyApi.PLAYBACK_GET_TIME_POSITION:\n      progressTimer.set(data)\n      break\n    case SearchConst.SEARCH_GET_TRACKS:\n      store.dispatch(searchActions.storeSearchResults(data))\n      break\n    case VoteConst.VOTE_CASTED:\n      if (data) {\n        store.dispatch(actions.syncSocialData(data))\n      }\n      break\n    case MopidyApi.VALIDATION_ERROR:\n      notify.warning(data)\n      break\n    default:\n      console.log(`Unknown message: ${key} body: ${data}`)\n      break\n  }\n}\n\nexport default onMessageHandler\n","import * as actions from 'actions'\n\nconst State = {\n  loadInitial: (store) => {\n    [\n      'getCurrentTrack',\n      'getTimePosition',\n      'getState',\n      'getTrackList',\n      'getVolume'\n    ].forEach(action => {\n      store.dispatch(actions[action]())\n    })\n  }\n}\n\nexport default State\n","import io from 'socket.io-client'\nimport * as actions from 'actions'\nimport Constants from 'constants/common'\nimport VoteConstant from 'votes/constants'\nimport SearchConst from 'search/constants'\nimport { trackProgressTimer } from 'utils/time'\nimport onMessageHandler from 'utils/on-message-handler'\nimport Payload from 'utils/payload'\nimport State from 'utils/state'\n\nconst JukeboxMiddleware = (() => {\n  let url = `http://${process.env.REACT_APP_WS_URL}:${process.env.REACT_APP_WS_PORT}`\n  let socket = null\n  let progressTimer = null\n\n  return store => next => action => {\n    const getJWT = () => store.getState().settings.token\n    const packMessage = () => Payload.encodeToJson(getJWT(store), action.key, action.params)\n\n    const mopidyStateChange = data => {\n      if (JSON.parse(data).online) {\n        store.dispatch(actions.mopidyConnected())\n        return State.loadInitial(store)\n      }\n      store.dispatch(actions.mopidyDisconnected())\n    }\n    const onOpen = _evt => {\n      progressTimer = trackProgressTimer(store, actions)\n      store.dispatch(actions.wsConnected())\n    }\n    const onClose = _evt => store.dispatch(actions.wsDisconnect())\n    const onMessage = data => onMessageHandler(store, data, progressTimer)\n    const onSearchResults = data => onMessageHandler(store, data, progressTimer)\n    const onVote = data => onMessageHandler(store, data, progressTimer)\n    const onConnect = () => {\n      if (socket != null) socket.close()\n      socket = io(url, { transports: ['websocket'] })\n      socket.on('vote', onVote)\n      socket.on('search', onSearchResults)\n      socket.on('mopidy', mopidyStateChange)\n      socket.on('message', onMessage)\n      socket.on('connect', onOpen)\n      socket.on('disconnect', onClose)\n\n      store.dispatch(actions.wsConnecting())\n    }\n    const onDisconnect = () => {\n      if (progressTimer) { progressTimer.reset() }\n      store.dispatch(actions.wsDisconnected())\n    }\n\n    switch (action.type) {\n      case Constants.CONNECT:\n        return onConnect()\n      case Constants.DISCONNECT:\n        return onDisconnect()\n      case Constants.SEND:\n        return socket.emit('message', packMessage())\n      case SearchConst.SEARCH:\n        return socket.emit('search', packMessage())\n      case VoteConstant.VOTE:\n        return socket.emit('vote', packMessage())\n      default:\n        return next(action)\n    }\n  }\n})()\n\nexport default JukeboxMiddleware\n","import Types from 'constants/common'\n\nconst track = (state = null, action) => {\n  switch (action.type) {\n    case Types.ADD_CURRENT_TRACK:\n      return action.track\n    case Types.SYNC_SOCIAL_DATA:\n      return Object.assign({}, state, {\n        addedBy: action.track.addedBy,\n        metrics: action.track.metrics\n      })\n    default:\n      return state\n  }\n}\n\nexport default track\n","import Types from 'constants/common'\n\nconst tracklist = (state = [], action) => {\n  switch (action.type) {\n    case Types.ADD_TRACKS:\n      return action.list.map(item => item.track)\n    case Types.SYNC_SOCIAL_DATA:\n      return state.map(item => {\n        if (item.uri === action.track.uri) {\n          return Object.assign({}, item, {\n            addedBy: action.track.addedBy,\n            metrics: action.track.metrics\n          })\n        }\n\n        return item\n      })\n    default:\n      return state\n  }\n}\n\nexport default tracklist\n","import Types from 'constants/common'\n\nconst initalProgressState = {\n  position: 0,\n  duration: 0,\n  remaining: 0\n}\n\nconst timer = (state = initalProgressState, action) => {\n  switch (action.type) {\n    case Types.UPDATE_PROGRESS_TIMER:\n      return {\n        position: action.position,\n        duration: action.duration,\n        remaining: action.duration - action.position\n      }\n    default:\n      return state\n  }\n}\n\nexport default timer\n","import MopidyApi from 'constants/mopidy-api'\nimport Types from 'constants/common'\n\nconst initalState = {\n  online: false,\n  mopidyOnline: false,\n  volume: 0,\n  playbackState: MopidyApi.STOPPED\n}\n\nconst jukebox = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.CONNECTED:\n      return Object.assign({}, state, {\n        online: true\n      })\n    case Types.DISCONNECTED:\n      return Object.assign({}, state, {\n        online: false\n      })\n    case Types.MOPIDY_CONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: true\n      })\n    case Types.MOPIDY_DISCONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: false\n      })\n    case Types.UPDATE_VOLUME:\n      return Object.assign({}, state, {\n        volume: action.volume\n      })\n    case Types.UPDATE_PLAYBACK_STATE:\n      return Object.assign({}, state, {\n        playbackState: action.state\n      })\n    default:\n      return state\n  }\n}\n\nexport default jukebox\n","import Types from 'constants/common'\n\nconst initalState = {\n  token: null\n}\n\nconst settings = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.STORE_TOKEN:\n      if (action.token === state.token) return state\n      return Object.assign({}, state, {\n        token: action.token\n      })\n    case Types.CLEAR_STORE_TOKEN:\n      return Object.assign({}, state, {\n        token: null\n      })\n    default:\n      return state\n  }\n}\n\nexport default settings\n","import Constant from 'search/constants'\n\nconst initalState = {\n  searchSideBarOpen: false,\n  query: '',\n  limit: 20,\n  offset: 0,\n  total: 0,\n  results: []\n}\n\nconst search = (state = initalState, action) => {\n  switch (action.type) {\n    case Constant.REMOVE_FROM_SEARCH_RESULTS:\n      return {\n        ...state,\n        results: state.results.filter(item => {\n          return item.track.uri !== action.uri\n        })\n      }\n    case Constant.TOGGLE_SEARCH_SIDEBAR:\n      return Object.assign({}, state, {\n        searchSideBarOpen: action.open\n      })\n    case Constant.STORE_SEARCH_QUERY:\n      return Object.assign({}, state, {\n        query: action.query\n      })\n    case Constant.STORE_SEARCH_RESULTS:\n      const results = action.results.tracks\n      return Object.assign({}, state, {\n        limit: results.limit,\n        offset: results.offset,\n        total: results.total > 10000 ? 10000 : results.total,\n        results: results.items\n      })\n    default:\n      return state\n  }\n}\n\nexport default search\n","import { combineReducers } from 'redux'\nimport track from 'reducers/track'\nimport tracklist from 'reducers/tracklist'\nimport timer from 'reducers/timer'\nimport jukebox from 'reducers/jukebox'\nimport settings from 'reducers/settings'\nimport search from 'search/reducers'\n\nconst jukeboxApp = combineReducers({\n  track,\n  tracklist,\n  timer,\n  jukebox,\n  settings,\n  search\n})\n\nexport default jukeboxApp\n","import * as workerTimers from 'worker-timers'\n\nconst checkForTokenInMilliseconds = 2700000\n\nconst SignInToken = {\n  refresh: (googleApi, success) => {\n    return workerTimers.setTimeout(() => {\n      googleApi.reloadAuthResponse().then(\n        (response) => success(response.id_token),\n        (err) => console.warn('Token un-refreshable: ', err.message))\n    }, checkForTokenInMilliseconds)\n  },\n  clear: (id) => { if (id) workerTimers.clearTimeout(id) }\n}\n\nexport default SignInToken\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst previousButton = (cb, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    className='jb-previous-button'\n    disabled={disabled}\n  >\n    <Button.Content hidden>Prev</Button.Content>\n    <Button.Content visible>\n      <Icon name='step backward' />\n    </Button.Content>\n  </Button>\n)\n\nconst nextButton = (cb, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    className='jb-next-button'\n    disabled={disabled}\n  >\n    <Button.Content hidden>Next</Button.Content>\n    <Button.Content visible>\n      <Icon name='step forward' />\n    </Button.Content>\n  </Button>\n)\n\nconst SkipButtons = ({ disabled, onPrevious, onNext }) => (\n  <span>\n    {previousButton(onPrevious, disabled)}\n    {nextButton(onNext, disabled)}\n  </span>\n)\n\nSkipButtons.propTypes = {\n  disabled: PropTypes.bool,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default SkipButtons\n","import React from 'react'\nimport SkipButtons from 'components/skip-buttons'\nimport MopidyApi from 'constants/mopidy-api'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst playButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.PLAYING || disabled)}\n    active={(playbackState === MopidyApi.PLAYING)}\n    className='jb-play-button'\n  >\n    <Button.Content hidden>Play</Button.Content>\n    <Button.Content visible>\n      <Icon name='play' />\n    </Button.Content>\n  </Button>\n)\n\nconst pauseButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.PAUSED || playbackState === MopidyApi.STOPPED || disabled)}\n    active={(playbackState === MopidyApi.PAUSED)}\n    className='jb-pause-button'\n  >\n    <Button.Content hidden>Pause</Button.Content>\n    <Button.Content visible>\n      <Icon name='pause' />\n    </Button.Content>\n  </Button>\n)\n\nconst stopButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.STOPPED || disabled)}\n    active={(playbackState === MopidyApi.STOPPED)}\n    className='jb-stop-button'\n  >\n    <Button.Content hidden>Stop</Button.Content>\n    <Button.Content visible>\n      <Icon name='stop' />\n    </Button.Content>\n  </Button>\n)\n\nconst Controls = (props) => {\n  const { disabled, playbackState, onPlay, onPause, onStop, onPrevious, onNext } = props\n  return (\n    <span>\n      <SkipButtons\n        disabled={disabled}\n        onPrevious={onPrevious}\n        onNext={onNext}\n      />\n      {playButton(onPlay, playbackState, disabled)}\n      {pauseButton(onPause, playbackState, disabled)}\n      {stopButton(onStop, playbackState, disabled)}\n    </span>\n  )\n}\n\nControls.propTypes = {\n  disabled: PropTypes.bool,\n  playbackState: PropTypes.string,\n  onPlay: PropTypes.func.isRequired,\n  onPause: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default Controls\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DropTarget } from 'react-dnd'\nimport './index.css'\n\nconst boxTarget = {\n  drop (props, monitor) {\n    if (props.onDrop) {\n      props.onDrop(props, monitor)\n    }\n  }\n}\n\nconst boxHandler = (connect, monitor) => {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver()\n  }\n}\n\nconst dropTrack = (show) => {\n  if (!show) return null\n  return <div className='drag-is-over'><p>Drop da track</p></div>\n}\n\nclass UrlDropArea extends Component {\n  render () {\n    const { connectDropTarget, isOver } = this.props\n\n    return connectDropTarget(\n      <div>\n        { dropTrack(isOver) }\n        { this.props.children }\n      </div>\n    )\n  }\n}\n\nUrlDropArea.propTypes = {\n  connectDropTarget: PropTypes.func.isRequired,\n  accepts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onDrop: PropTypes.func\n}\n\nexport default DropTarget(props => props.accepts, boxTarget, boxHandler)(UrlDropArea)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DragDropContextProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport Constants from 'constants/common'\nimport UrlDropArea from 'components/url-drop-area'\n\nconst DragInTrack = ({ disabled, onDrop, children }) => {\n  if (disabled) { return children }\n\n  return (\n    <DragDropContextProvider backend={HTML5Backend}>\n      <UrlDropArea accepts={Constants.DROP_TYPES} onDrop={onDrop}>\n        { children }\n      </UrlDropArea>\n    </DragDropContextProvider>\n  )\n}\n\nDragInTrack.propTypes = {\n  disabled: PropTypes.bool,\n  onDrop: PropTypes.func.isRequired\n}\n\nexport default DragInTrack\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { List, Popup, Icon, Image } from 'semantic-ui-react'\nimport dateFormat from 'dateformat'\nimport './index.css'\n\nconst addedByContent = (users) => (\n  <List>\n    {\n      users.map(data => {\n        const fullName = data.user ? data.user.fullname : 'User unknown'\n\n        return (\n          <List.Item key={data.addedAt}>\n            {userPicture(data)}\n            <List.Content>\n              <List.Description>\n                <strong>{dateFormat(data.addedAt, 'dd mmm yyyy @ h:MM tt')}</strong> - {fullName}\n              </List.Description>\n            </List.Content>\n          </List.Item>\n        )\n      })\n    }\n  </List>\n)\n\nconst userPicture = data => {\n  if (data && data.user && data.user.picture) return <Image avatar className='added_by_avatar_image' src={data.user.picture} />\n  return <Icon name='spotify' color='green' />\n}\n\nconst AddedBy = ({ users = [] }) => {\n  const avatar = userPicture(users[0])\n  if (!users.length) return avatar\n\n  return (\n    <Popup\n      wide\n      content={addedByContent(users)}\n      trigger={avatar}\n    />\n  )\n}\n\nAddedBy.propTypes = {\n  users: PropTypes.array\n}\n\nexport default AddedBy\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport dateFormat from 'dateformat'\nimport { List, Popup, Image, Label } from 'semantic-ui-react'\nimport './index.css'\n\nconst voteNormaliser = (v) => Math.round((v / 10) - 5) // 100 is max a user can vote per play, 0 is minimum\n\nconst votedByContent = (votes) => (\n  <List>\n    {\n      votes.map(data => {\n        const fullName = data.user ? data.user.fullname : 'User unknown'\n        const voteScore = <Label circular size='mini'>{voteNormaliser(data.vote)}</Label>\n\n        return (\n          <List.Item key={data.at}>\n            {userPicture(data)}\n            <List.Content>\n              <List.Description>\n                <strong>{dateFormat(data.at, 'dd mmm yyyy @ h:MM tt')}</strong> - {fullName} {voteScore}\n              </List.Description>\n            </List.Content>\n          </List.Item>\n        )\n      })\n    }\n  </List>\n)\n\nconst userPicture = data => {\n  if (data && data.user && data.user.picture) return <Image avatar className='voted_by_avatar_image' src={data.user.picture} />\n  return null\n}\n\nconst voteLabel = (total, ribbon) => {\n  let color = 'green'\n  let icon = 'thumbs up'\n  const normalisedTotal = voteNormaliser(total)\n\n  if (normalisedTotal < 0) icon = 'thumbs down'\n  if (normalisedTotal < 0) color = 'red'\n\n  return (\n    <Label\n      className='track-label vote-track-label'\n      size='tiny'\n      color={color}\n      icon={icon}\n      content={normalisedTotal}\n      ribbon={ribbon ? 'right' : null}\n    />\n  )\n}\n\nconst VotedBy = ({ total, votes, ribbon }) => {\n  const voteCount = votes ? votes.length : 0\n  if (total < 1) return null\n  if (voteCount < 1) return voteLabel(total, ribbon)\n\n  return (\n    <Popup\n      wide='very'\n      content={votedByContent(votes)}\n      trigger={voteLabel(total, ribbon)}\n    />\n  )\n}\n\nVotedBy.propTypes = {\n  ribbon: PropTypes.bool,\n  votes: PropTypes.array,\n  total: PropTypes.number.isRequired\n}\n\nexport default VotedBy\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Image, Label, Rating } from 'semantic-ui-react'\nimport { Line } from 'rc-progress'\nimport AddedBy from 'components/added-by'\nimport VotedBy from 'components/voted-by'\nimport defaultImage from './default-artwork.png'\nimport { flatten, mean } from 'lodash'\nimport { millisToMinutesAndSeconds } from 'utils/time'\nimport './index.css'\n\nconst spotifyLink = (uri) => {\n  const code = uri.split(':').pop()\n  return `https://open.spotify.com/track/${code}`\n}\n\nconst albumDescription = album => {\n  if (!album) return null\n  const year = album.year ? ` (${album.year})` : null\n  return <Card.Description>{album.name}{year}</Card.Description>\n}\n\nconst noTrack = () => (\n  <Card>\n    <Image src={defaultImage} />\n    <Card.Content>\n      <Card.Header>Nothing playing</Card.Header>\n      <Card.Description>Drag some music here or press play.</Card.Description>\n    </Card.Content>\n  </Card>\n)\n\nconst calcVoteAverage = (data) => {\n  const votes = data.map(i => i.vote)\n  if (votes.length < 1) return 0\n  return mean(flatten(votes))\n}\n\nconst CurrentTrack = (props) => {\n  const { track, progress, remaining, onVote, userID } = props\n  if (!track) { return noTrack() }\n  const maxRating = 10\n  const { addedBy = [] } = track\n  const votes = (addedBy[0] && addedBy[0].votes) || []\n  const playCount = track.metrics.plays\n  const averageVote = track.metrics.votesAverage\n  const currentUserVoter = votes.find(u => u.user._id === userID)\n  const currentUserVote = currentUserVoter ? (currentUserVoter.vote / maxRating) : 0\n  const doVote = (uri) => (_, data) => onVote(uri, data.rating)\n\n  return (\n    <Card>\n      <Image\n        src={track.image || defaultImage}\n        label={<VotedBy total={averageVote} ribbon />}\n      />\n      <Card.Content>\n        <div className='progress-container'>\n          <span className='remaining-text'>{millisToMinutesAndSeconds(remaining)}</span>\n          <span className='track-length'>{millisToMinutesAndSeconds(track.length)}</span>\n          <Line percent={progress} />\n        </div>\n        <Card.Header>{track.name}</Card.Header>\n        <Card.Meta>{track.artist.name}</Card.Meta>\n        { albumDescription(track.album) }\n      </Card.Content>\n      <Card.Content className='rating-container' extra>\n        <Rating\n          disabled={!userID}\n          maxRating={maxRating}\n          rating={currentUserVote}\n          onRate={doVote(track.uri)}\n        />\n        <VotedBy total={calcVoteAverage(votes)} votes={votes} />\n      </Card.Content>\n      <Card.Content extra>\n        <Label size='mini'>\n          Added\n          <Label.Detail>{addedBy.length}</Label.Detail>\n        </Label>\n        <Label size='mini'>\n          Played\n          <Label.Detail>{playCount}</Label.Detail>\n        </Label>\n      </Card.Content>\n      <Card.Content extra>\n        <AddedBy users={track.addedBy} />\n        <a\n          className='track-uri'\n          href={spotifyLink(track.uri)}\n          target='_blank'\n          rel='noopener noreferrer'\n        >{track.uri}</a>\n      </Card.Content>\n    </Card>\n  )\n}\n\nCurrentTrack.propTypes = {\n  userID: PropTypes.string,\n  track: PropTypes.object,\n  progress: PropTypes.number,\n  remaining: PropTypes.number,\n  onVote: PropTypes.func\n}\n\nexport default CurrentTrack\n","import React, { useContext } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport GoogleAuthContext from 'contexts/google'\nimport { timerToPercentage } from 'utils/time'\nimport * as voteActions from 'votes/actions'\nimport CurrentTrack from 'components/current-track'\n\nexport const CurrentTrackContainer = () => {\n  const { googleUser } = useContext(GoogleAuthContext)\n  const progressAsPercent = useSelector(state => timerToPercentage(state.timer))\n  const remaining = useSelector(state => state.timer.remaining)\n  const track = useSelector(state => state.track)\n  const dispatch = useDispatch()\n\n  return (\n    <CurrentTrack\n      userID={googleUser && googleUser.googleId}\n      track={track}\n      progress={progressAsPercent}\n      remaining={remaining}\n      onVote={(uri, rating) => dispatch(voteActions.vote(uri, rating))}\n    />\n  )\n}\n\nexport default CurrentTrackContainer\n","import Vote from 'votes/constants'\n\nexport const vote = (uri, vote) => {\n  return {\n    type: Vote.VOTE,\n    key: Vote.CAST_VOTE,\n    params: { uri, vote }\n  }\n}\n","import React, { useContext } from 'react'\nimport { Button, Image } from 'semantic-ui-react'\nimport GoogleAuthContext from 'contexts/google'\nimport './index.css'\n\nexport const Settings = () => {\n  const { googleUser, signIn, signOut } = useContext(GoogleAuthContext)\n\n  let avatar = (\n    <Button\n      icon='power off'\n      floated='right'\n      onClick={() => signIn()}\n      className='jb-settings-toggle'\n      title='Login using Google'\n    />\n  )\n  if (googleUser && googleUser.profileObj) {\n    avatar = (\n      <Image\n        rounded\n        size='mini'\n        floated='right'\n        title={googleUser.profileObj.name}\n        src={googleUser.profileObj.imageUrl}\n        onClick={() => signOut()}\n      />\n    )\n  }\n\n  return (\n    <React.Fragment>{avatar}</React.Fragment>\n  )\n}\n\nexport default Settings\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { List, Image, Label } from 'semantic-ui-react'\nimport { millisToMinutesAndSeconds } from 'utils/time'\nimport defaultImage from 'components/current-track/default-artwork.png'\nimport AddedBy from 'components/added-by'\nimport VotedBy from 'components/voted-by'\nimport './index.css'\n\nconst isCurrentTrack = (currentTrack, track) => {\n  if (!currentTrack) return false\n  return currentTrack.uri === track.uri\n}\n\nconst trackImage = ({ image, isCurrent, onClick, hasBeenPlayed }) => {\n  let klass, title\n\n  if (isCurrent) klass = 'current-image'\n  if (onClick && !isCurrent) {\n    title = 'Click to remove from playlist'\n    klass = 'remove-image'\n  }\n\n  return (\n    <Image\n      bordered\n      className={klass}\n      size={hasBeenPlayed ? 'small' : 'tiny'}\n      src={image}\n      title={title}\n      onClick={onClick}\n      inline\n    />\n  )\n}\n\nconst removeTrack = (uri, cb) => {\n  return () => cb(uri)\n}\n\nconst imageChooser = (disabled, track, isCurrent, onRemoveTrack, hasBeenPlayed) => {\n  const image = track.image ? track.image : defaultImage\n\n  return trackImage({\n    image,\n    hasBeenPlayed,\n    isCurrent,\n    onClick: (!disabled && !isCurrent) ? removeTrack(track.uri, onRemoveTrack) : undefined\n  })\n}\n\nconst trackHeading = (track) => <List.Header as='h4'>{track.name}</List.Header>\n\nconst trackDescription = (track) => (\n  <List.Description>\n    {track.artist.name} <small>({millisToMinutesAndSeconds(track.length)})</small>\n  </List.Description>\n)\n\nconst listItems = (disabled, tracks, currentTrack, onRemoveTrack) => {\n  let time\n\n  return tracks.map((track, index) => {\n    const isCurrent = isCurrentTrack(currentTrack, track)\n    const { addedBy = [] } = track\n    const averageVote = track.metrics.votesAverage\n    const playCount = track.metrics.plays\n    if (time) time += track.length\n    if (isCurrent) time = Date.now()\n\n    return (\n      <List.Item\n        className={classnames({ 'current-track': isCurrent })}\n        key={`${index}-${track.uri}`}\n      >\n        { imageChooser(disabled, track, isCurrent, onRemoveTrack, time) }\n        <List.Content\n          className={classnames({ 'track-info': !time })}\n        >\n          {trackHeading(track)}\n          {trackDescription(track)}\n          <VotedBy total={averageVote} />\n          <Label className='track-label' size='tiny'>\n            Played\n            <Label.Detail>{playCount}</Label.Detail>\n          </Label>\n          <AddedBy users={addedBy} />\n        </List.Content>\n      </List.Item>\n    )\n  })\n}\n\nconst Tracklist = ({ disabled, tracks, currentTrack, onRemoveTrack }) => {\n  if (!tracks) { return null }\n\n  return (\n    <List relaxed='very' divided>\n      {listItems(disabled, tracks, currentTrack, onRemoveTrack)}\n    </List>\n  )\n}\n\nTracklist.propTypes = {\n  disabled: PropTypes.bool,\n  tracks: PropTypes.array,\n  currentTrack: PropTypes.object,\n  onRemoveTrack: PropTypes.func.isRequired\n}\n\nexport default Tracklist\n","import React from 'react'\nimport { func, bool } from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst SearchButton = ({ onClick, disabled }) => (\n  <Button\n    animated='vertical'\n    floated='right'\n    onClick={onClick}\n    disabled={disabled}\n  >\n    <Button.Content hidden>Search</Button.Content>\n    <Button.Content visible>\n      <Icon name='search' />\n    </Button.Content>\n  </Button>\n)\n\nSearchButton.propTypes = {\n  onClick: func.isRequired,\n  disabled: bool.isRequired\n}\n\nexport default SearchButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst VOLUME_INC = 1\nconst VOLUME_MAX = 100\nconst VOLUME_MIN = 0\n\nconst volumeUp = (volume, cb) => {\n  volume += VOLUME_INC\n  if (volume <= VOLUME_MAX) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst volumeDown = (volume, cb) => {\n  volume -= VOLUME_INC\n  if (volume >= VOLUME_MIN) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst VolumeButtons = ({ disabled, volume, onVolumeChange }) => (\n  <Button.Group floated='right'>\n    <Button\n      className='jb-volume-down'\n      onClick={volumeDown(volume, onVolumeChange)}\n      disabled={disabled}\n    >\n      <Icon name='volume down' />\n    </Button>\n    <Button.Or text={volume} />\n    <Button\n      className='jb-volume-up'\n      onClick={volumeUp(volume, onVolumeChange)}\n      disabled={disabled}\n    >\n      <Icon name='volume up' />\n    </Button>\n  </Button.Group>\n)\n\nVolumeButtons.propTypes = {\n  disabled: PropTypes.bool,\n  volume: PropTypes.number,\n  onVolumeChange: PropTypes.func.isRequired\n}\n\nexport default VolumeButtons\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Confirm, Label } from 'semantic-ui-react'\n\nclass ClearPlaylist extends Component {\n  state = { open: false }\n\n  clearButton = () => {\n    return (\n      <Label\n        horizontal\n        size='mini'\n        as='a'\n        color='red'\n        onClick={this.show}\n        className='jb-clear-button'\n      >CLEAR</Label>\n    )\n  }\n\n  show = () => {\n    this.setState({ open: true })\n  }\n\n  handleConfirm = (ev) => {\n    this.setState({ open: false })\n    this.props.onClear(ev)\n  }\n\n  handleCancel = () => {\n    this.setState({ open: false })\n  }\n\n  render () {\n    if (this.props.disabled) { return null }\n\n    return (\n      <span>\n        {this.clearButton()}\n        <Confirm\n          content='Are you sure you want to nuke the playlist?'\n          cancelButton='No thanks'\n          confirmButton='Do it!'\n          open={this.state.open}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n        />\n      </span>\n    )\n  }\n}\n\nClearPlaylist.propTypes = {\n  disabled: PropTypes.bool,\n  onClear: PropTypes.func.isRequired\n}\n\nexport default ClearPlaylist\n","import React, { useRef } from 'react'\nimport { func, bool, array, number } from 'prop-types'\nimport { Sidebar, Button, Form, List, Header, Divider, Image, Pagination } from 'semantic-ui-react'\nimport './index.css'\n\nconst Search = (props) => {\n  const {\n    visible, onClose, results, onSubmit,\n    onQueryChange, onAddTrack, totalPages, onPageChange\n  } = props\n  const inputEl = useRef(null)\n\n  const addTrack = (uri) => () => {\n    onAddTrack(uri)\n  }\n\n  const SearchItems = () => (\n    results.map((item) => (\n      <div className='search-list-item' key={item.track.uri} onClick={addTrack(item.track.uri)}>\n        <Image\n          floated='left'\n          src={item.track.image}\n          size='mini'\n          title={`Click to add - ${item.track.name} - ${item.track.artist.name}`}\n          className='search-list-item__image'\n        />\n        <List.Content>\n          <div className='search-list-item__header'>{item.track.name} - {item.track.artist.name}</div>\n          <div className='search-list-item__content'>{item.track.album.name}</div>\n        </List.Content>\n      </div>\n    ))\n  )\n\n  return (\n    <Sidebar.Pushable>\n      <Sidebar\n        animation='overlay'\n        icon='labeled'\n        inverted='true'\n        vertical='true'\n        visible={visible}\n        width='very wide'\n        direction='right'\n        className='sidebar-search'\n        onShow={() => inputEl.current.focus()}\n      >\n        <Form inverted onSubmit={onSubmit}>\n          <Form.Field>\n            <label required>SEARCH</label>\n            <input\n              ref={inputEl}\n              placeholder='track, artist or album'\n              onChange={onQueryChange}\n            />\n          </Form.Field>\n          <Button type='submit' fluid>Submit</Button>\n        </Form>\n        <Divider horizontal>\n          <Header as='h4' inverted>Results</Header>\n        </Divider>\n        {(totalPages > 0) &&\n          <Pagination\n            className='search-list-pagination'\n            defaultActivePage={1}\n            firstItem={null}\n            lastItem={null}\n            pointing\n            secondary\n            totalPages={totalPages}\n            onPageChange={onPageChange}\n          />\n        }\n        <List divided relaxed inverted size='tiny'>\n          <SearchItems />\n        </List>\n      </Sidebar>\n      <Sidebar.Pusher\n        dimmed={visible}\n        onClick={visible ? onClose : null}\n      >\n        { props.children }\n      </Sidebar.Pusher>\n    </Sidebar.Pushable >\n  )\n}\n\nSearch.propTypes = {\n  onClose: func.isRequired,\n  onSubmit: func.isRequired,\n  onQueryChange: func.isRequired,\n  onAddTrack: func.isRequired,\n  onPageChange: func.isRequired,\n  visible: bool.isRequired,\n  results: array.isRequired,\n  totalPages: number.isRequired\n}\n\nexport default Search\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as mopidyActions from 'actions'\nimport * as searchActions from 'search/actions'\nimport SearchSidebar from 'search/components/sidebar'\n\nexport const SearchContainer = (props) => {\n  const search = useSelector(state => state.search)\n  const dispatch = useDispatch()\n\n  const onAddTrack = (uri) => {\n    dispatch(searchActions.removeFromSearchResults(uri))\n    dispatch(mopidyActions.addNewTrack(uri))\n  }\n\n  const onSearch = (params) => {\n    const searchOptions = {\n      offset: (params.activePage - 1) * search.limit,\n      limit: search.limit\n    }\n    dispatch(searchActions.search(search.query, searchOptions))\n  }\n\n  return (\n    <SearchSidebar\n      visible={search.searchSideBarOpen}\n      onClose={() => dispatch(searchActions.toggleSearchSidebar(false))}\n      onSubmit={() => onSearch({ activePage: 1 })}\n      onAddTrack={(uri) => onAddTrack(uri)}\n      onQueryChange={(evt) => dispatch(searchActions.storeSearchQuery(evt.target.value))}\n      onPageChange={(_, data) => onSearch(data)}\n      results={search.results}\n      totalPages={Math.round(search.total / search.limit)}\n    >\n      { props.children }\n    </SearchSidebar>\n  )\n}\n\nexport default SearchContainer\n","import React from 'react'\nimport { Dimmer, Divider, Grid, Header, Container } from 'semantic-ui-react'\nimport Controls from 'components/controls'\nimport DragInTrack from 'components/drag-in-track'\nimport CurrentTrackContainer from 'containers/current-track-container'\nimport Settings from 'components/settings'\nimport TrackList from 'components/tracklist'\nimport SearchButton from 'search/components/button'\nimport VolumeButtons from 'components/volume-buttons'\nimport ClearPlaylist from 'components/clear-playlist'\nimport SearchContainer from 'search'\nimport './index.css'\n\nconst Dashboard = (props) => {\n  const {\n    online,\n    disabled,\n    volume,\n    playbackState,\n    onPlay,\n    onStop,\n    onPause,\n    onNext,\n    onPrevious,\n    onVolumeChange,\n    onDrop,\n    onTracklistClear,\n    onSearchClick,\n    tracklist,\n    currentTrack,\n    onRemoveTrack\n  } = props\n\n  return (\n    <Dimmer.Dimmable\n      blurring\n      dimmed={!online}\n    >\n      <DragInTrack\n        disabled={disabled}\n        onDrop={onDrop}\n      >\n        <SearchContainer>\n          <Container className='header-wrapper' fluid>\n            <Settings />\n            <VolumeButtons\n              disabled={disabled}\n              volume={volume}\n              onVolumeChange={onVolumeChange}\n            />\n            <SearchButton\n              onClick={onSearchClick}\n              disabled={disabled}\n            />\n            <Controls\n              disabled={disabled}\n              playbackState={playbackState}\n              onPlay={onPlay}\n              onStop={onStop}\n              onPause={onPause}\n              onNext={onNext}\n              onPrevious={onPrevious}\n            />\n          </Container>\n          <Divider />\n          <Container className='body-wrapper' fluid>\n            <Grid stackable columns={2} className='dashboard-grid'>\n              <Grid.Column width={4}>\n                <Header size='small'>Current Track</Header>\n                <CurrentTrackContainer />\n              </Grid.Column>\n              <Grid.Column width={8}>\n                <Header size='small'>\n                  Playlist <ClearPlaylist disabled={disabled} onClear={onTracklistClear} />\n                </Header>\n                <TrackList\n                  disabled={disabled}\n                  tracks={tracklist}\n                  currentTrack={currentTrack}\n                  onRemoveTrack={onRemoveTrack}\n                />\n              </Grid.Column>\n            </Grid>\n          </Container>\n        </SearchContainer>\n      </DragInTrack>\n    </Dimmer.Dimmable>\n  )\n}\n\nexport default Dashboard\n","import React, { useEffect, useContext, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DragDropContext } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport SignInToken from 'utils/signin-token'\nimport GoogleAuthContext from 'contexts/google'\nimport * as actions from 'actions'\nimport * as searchActions from 'search/actions'\nimport Dashboard from 'dashboard'\n\nexport const DashboardContainer = () => {\n  const jukebox = useSelector(state => state.jukebox)\n  const tracklist = useSelector(state => state.tracklist)\n  const currentTrack = useSelector(state => state.track)\n  const dispatch = useDispatch()\n  const { isSignedIn, googleUser } = useContext(GoogleAuthContext)\n  const disable = !(isSignedIn && jukebox.mopidyOnline)\n  const googleTokenId = useRef()\n  const refreshTokenTimeoutID = useRef()\n  const hasTokenChanged = (token) => token !== googleTokenId.current\n\n  useEffect(() => {\n    dispatch(actions.wsConnect())\n\n    /* istanbul ignore next */\n    return () => {\n      dispatch(actions.wsDisconnect())\n    }\n  }, [dispatch])\n\n  if (isSignedIn && hasTokenChanged(googleUser.Zi.id_token)) {\n    googleTokenId.current = googleUser.Zi.id_token\n    refreshTokenTimeoutID.current = SignInToken.refresh(googleUser, (token) => {\n      dispatch(actions.updateToken(token))\n    })\n    dispatch(actions.updateToken(googleTokenId.current))\n  }\n\n  if (!isSignedIn) {\n    googleTokenId.current = undefined\n    SignInToken.clear(refreshTokenTimeoutID.current)\n    dispatch(actions.clearToken())\n  }\n\n  return (\n    <Dashboard\n      online={jukebox.online}\n      disabled={disable}\n      volume={jukebox.volume}\n      playbackState={jukebox.playbackState}\n      onPlay={() => dispatch(actions.startPlaying())}\n      onStop={() => dispatch(actions.stopPlaying())}\n      onPause={() => dispatch(actions.pausePlaying())}\n      onNext={() => dispatch(actions.nextPlaying())}\n      onPrevious={() => dispatch(actions.previousPlaying())}\n      onVolumeChange={(evt) => dispatch(actions.setVolume(evt))}\n      onDrop={\n        /* istanbul ignore next */\n        (_item, monitor) => {\n          if (monitor) {\n            dispatch(actions.addNewTrack(monitor.getItem().urls[0]))\n          }\n        }\n      }\n      onTracklistClear={() => dispatch(actions.clearTrackList())}\n      onSearchClick={() => dispatch(searchActions.toggleSearchSidebar(true))}\n      tracklist={tracklist}\n      currentTrack={currentTrack}\n      onRemoveTrack={\n        /* istanbul ignore next */\n        (evt) => dispatch(actions.removeFromTracklist(evt))\n      }\n    />\n  )\n}\n\nexport default DragDropContext(HTML5Backend)(DashboardContainer)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport Notifications from 'react-notify-toast'\nimport { useGoogleLogin } from 'react-use-googlelogin'\nimport ErrorBoundary from 'components/error-boundary'\nimport GoogleAuthContext from 'contexts/google'\nimport jukeboxMiddleware from 'containers/jukebox-middleware'\nimport jukeboxApp from 'reducers'\nimport { Container } from 'semantic-ui-react'\nimport DashboardContainer from 'containers/dashboard-container'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(jukeboxApp, composeEnhancers(applyMiddleware(jukeboxMiddleware)))\n\nconst App = () => {\n  const googleAuth = useGoogleLogin({\n    clientId: process.env.REACT_APP_CLIENT_ID,\n    hostedDomain: 'kyanmedia.com'\n  })\n\n  return (\n    <Provider store={store}>\n      <Container fluid>\n        <GoogleAuthContext.Provider value={googleAuth}>\n          <ErrorBoundary>\n            <Notifications />\n            <DashboardContainer />\n          </ErrorBoundary>\n        </GoogleAuthContext.Provider>\n      </Container>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n","module.exports = __webpack_public_path__ + \"static/media/default-artwork.6bba9800.png\";"],"sourceRoot":""}