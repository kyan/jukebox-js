{"version":3,"sources":["components/current-track/default-artwork.png","utils/spotify/index.js","components/error-boundary/index.js","contexts/google.js","constants/mopidy-api.js","constants/common.js","actions/index.js","votes/constants.js","search/constants.ts","utils/time/index.js","search/actions/index.ts","constants/auth-api.js","utils/payload/index.ts","utils/notify/index.js","utils/on-message-handler/index.js","utils/state/index.js","middleware/jukebox-middleware/index.ts","reducers/track/index.js","reducers/tracklist/index.js","reducers/timer/index.js","reducers/jukebox/index.js","reducers/settings/index.js","search/reducers/search.ts","search/reducers/curated-list.ts","reducers/index.js","utils/signin-token/index.js","components/skip-buttons/index.js","components/controls/index.js","components/url-drop-area/index.js","components/drag-in-track/index.js","components/added-by/index.js","components/voted-by/index.js","components/progress-bar/index.js","components/current-track/index.js","containers/current-track-container/index.js","votes/actions/index.js","components/settings/index.js","components/remove-track/index.js","components/tracklist/index.js","search/components/button/index.tsx","components/volume-buttons/index.js","components/clear-playlist/index.js","search/components/search-item/index.tsx","search/components/draggable-search-item/index.tsx","search/components/sidebar/index.tsx","search/index.tsx","dashboard/index.js","containers/dashboard-container/index.js","App.tsx","index.tsx"],"names":["module","exports","transformUrl","url","uri","replace","match","ErrorBoundary","React","Component","constructor","props","super","this","state","hasError","componentDidCatch","error","info","setState","render","children","GoogleAuthContext","createContext","ADD_CURRENT_TRACK","ADD_TRACKS","CONNECT","CONNECTING","CONNECTED","DISCONNECT","DISCONNECTED","DROP_TYPES","SEND","STORE_TOKEN","CLEAR_STORE_TOKEN","UPDATE_VOLUME","UPDATE_PLAYBACK_STATE","UPDATE_PROGRESS_TIMER","MOPIDY_CONNECTED","MOPIDY_DISCONNECTED","SYNC_SOCIAL_DATA","updateToken","token","type","Types","clearToken","addNewTrack","key","MopidyApi","params","uris","addNewTracks","map","addCurrentTrack","track","syncSocialData","addTrackList","list","removeFromTracklist","criteria","updateProgressTimer","position","duration","Infinity","wsConnect","wsConnecting","wsConnected","wsDisconnect","wsDisconnected","mopidyConnected","mopidyDisconnected","getCurrentTrack","getTimePosition","getState","getTrackList","clearTrackList","startPlaying","stopPlaying","pausePlaying","nextPlaying","previousPlaying","getVolume","updateVolume","volume","updatePlaybackState","setVolume","Number","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","millisToSeconds","toggleSearchSidebar","open","Search","storeSearchQuery","query","search","options","removeFromSearchResults","Payload","decode","payload","JSON","parse","encodeToJson","jwt","data","stringify","Notify","id","title","message","store","addNotification","insert","container","dismiss","success","warning","dispatch","actions","onMessageHandler","progressTimer","user","AuthApi","console","progress","set","length","jukebox","playbackState","start","stop","playBackChanged","tracklist","fullname","SearchConst","results","VoteConst","State","loadInitial","forEach","action","JukeboxMiddleware","process","socket","next","packMessage","settings","onMopidyStateChange","online","onOpen","ProgressTimer","callback","fallbackTargetFrameRate","disableRequestAnimationFrame","trackProgressTimer","onClose","onMessage","onSearchResults","onVote","Constants","close","io","transports","on","reset","emit","VoteConstant","Object","assign","addedBy","metrics","item","initalProgressState","remaining","timer","initalState","mopidyOnline","searchSideBarOpen","limit","offset","total","Constant","filter","includes","tracks","items","curate","find","push","a","splice","b","jukeboxApp","combineReducers","curatedList","SignInToken","refresh","googleApi","workerTimers","reloadAuthResponse","then","response","id_token","err","warn","clear","PreviousButton","Button","onClick","animated","className","disabled","Content","hidden","visible","Icon","name","NextButton","SkipButtons","onPrevious","onNext","PlayButton","active","PauseButton","StopButton","Controls","useSelector","onPlay","onPause","onStop","boxTarget","drop","monitor","onDrop","UrlDropArea","connectDropTarget","isOver","DropTarget","accepts","connect","dropTarget","DragInTrack","backend","HTML5Backend","addedByContent","users","List","i","fullName","Item","userPicture","Description","dateFormat","addedAt","picture","Image","avatar","src","AddedBy","Popup","wide","content","trigger","voteNormaliser","v","round","votedByContent","votes","voteScore","Label","circular","size","vote","at","voteLabel","basic","color","icon","normalisedTotal","ribbon","VotedBy","voteCount","show","ProgressBar","progressPercentage","percentage","isNaN","timerToPercentage","percent","marks","0","style","label","50","100","spotifyLink","code","split","pop","AlbumDescription","year","album","Card","calcVoteAverage","mean","flatten","voteHandleColor","TrackVotes","votesAverage","AddLabel","Detail","count","PlayLabel","plays","VoteLabel","CurrentTrack","userID","defaultImage","Header","currentUserVoter","u","_id","currentUserVote","image","Meta","artist","extra","dots","value","included","step","onChange","rating","handleStyle","borderColor","backgroundColor","href","target","rel","CurrentTrackContainer","googleUser","useContext","useDispatch","googleId","Vote","voteActions","Settings","signIn","signOut","floated","profileObj","rounded","imageUrl","Fragment","RemoveTrack","useState","setOpen","Comment","Action","Confirm","cancelButton","confirmButton","onCancel","onConfirm","ev","TrackImage","Avatar","isCurrent","ImageChooser","TrackHeading","Author","TrackDescription","Text","as","artistName","trackLength","CurrentVote","ActionRemove","cb","CurrentPlays","ListItems","beenPlayed","current","classnames","onArtistSearch","Actions","onRemove","Tracklist","Group","currentTrack","onRemoveTrack","SearchButton","volumeUp","volumeDown","VolumeDownButton","VolumeUpButton","VolumeButtons","onVolumeChange","Or","text","ClearPlaylist","horizontal","onClear","VoteInfo","SearchItem","explicit","alt","undefined","onAdd","DraggableSearchItem","draggable","onDragStart","e","dataTransfer","setData","String","onDragOver","preventDefault","getData","parseInt","SearchItems","MixItems","onSwap","YourMix","Divider","inverted","divided","onRemoveFromMix","onSwapTracks","fluid","onAddTracks","onSubmit","onQueryChange","onAddTrack","onAddTrackToMix","totalPages","onPageChange","inputEl","useRef","Sidebar","Pushable","animation","vertical","width","direction","onShow","focus","Form","Field","ref","placeholder","Pagination","defaultActivePage","firstItem","lastItem","pointing","secondary","relaxed","Pusher","dimmed","selectSearch","selectCuratedList","SearchContainer","onSearch","activePage","searchOptions","searchActions","mopidyActions","evt","_","Dashboard","onTracklistClear","onSearchClick","Dimmer","Dimmable","blurring","Container","Grid","stackable","columns","Column","DragDropContext","isSignedIn","disable","googleTokenId","refreshTokenTimeoutID","useEffect","tokenId","useCallback","_item","getItem","urls","createStore","composeWithDevTools","applyMiddleware","jukeboxMiddleware","App","googleAuth","useGoogleLogin","clientId","hostedDomain","GOOGLE_AUTH_DOMAIN","Provider","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.62f4e3f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-artwork.6bba9800.png\";","// https://open.spotify.com/track/0c41pMosF5Kqwwegcps8ES\nconst transformUrl = url => {\n  const uri = url.replace(/^.*\\/track\\//, 'spotify:track:')\n  return uri.match(/spotify:track/g) ? uri : null\n}\n\nmodule.exports = {\n  transformUrl\n}\n","import React from 'react'\n\n// uses code from https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true })\n\n    // You can also log the error to an error reporting service\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`error: ${error}`)\n      console.log(`info: ${info}`)\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Ouch! I broke a bit.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import React from 'react'\n\nconst GoogleAuthContext = React.createContext()\n\nexport default GoogleAuthContext\n","export default {\n  PLAYBACK_GET_CURRENT_TRACK: 'playback.getCurrentTrack',\n  EVENT_TRACK_PLAYBACK_STARTED: 'event:trackPlaybackStarted',\n  EVENT_PLAYBACK_STATE_CHANGED: 'event:playbackStateChanged',\n  EVENT_PLAYBACK_STATE_RESUMED: 'event:trackPlaybackResumed',\n  TRACKLIST_GET_TRACKS: 'tracklist.getTracks',\n  TRACKLIST_ADD_TRACK: 'tracklist.add',\n  TRACKLIST_REMOVE_TRACK: 'tracklist.remove',\n  TRACKLIST_CLEAR: 'tracklist.clear',\n  PLAYBACK_GET_TIME_POSITION: 'playback.getTimePosition',\n  PLAYBACK_GET_PLAYBACK_STATE: 'playback.getState',\n  PLAYBACK_PLAY: 'playback.play',\n  PLAYBACK_STOP: 'playback.stop',\n  PLAYBACK_PAUSE: 'playback.pause',\n  PLAYBACK_NEXT: 'playback.next',\n  PLAYBACK_BACK: 'playback.previous',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  STOPPED: 'stopped',\n  SET_VOLUME: 'mixer.setVolume',\n  GET_VOLUME: 'mixer.getVolume',\n  EVENT_VOLUME_CHANGED: 'event:volumeChanged',\n  VALIDATION_ERROR: 'validationError'\n}\n","export default {\n  ADD_CURRENT_TRACK: 'actionAddCurrentTrack',\n  ADD_TRACKS: 'actionAddTracks',\n  CONNECT: 'actionConnect',\n  CONNECTING: 'actionConnecting',\n  CONNECTED: 'actionConnected',\n  DISCONNECT: 'actionDisconnect',\n  DISCONNECTED: 'actionDisconnected',\n  DROP_TYPES: ['__NATIVE_URL__'],\n  SEND: 'actionSend',\n  STORE_TOKEN: 'actionStoreToken',\n  CLEAR_STORE_TOKEN: 'actionClearStoreToken',\n  UPDATE_VOLUME: 'actionUpdateVolume',\n  UPDATE_PLAYBACK_STATE: 'actionPlaybackState',\n  UPDATE_PROGRESS_TIMER: 'actionUpdateProgressTimer',\n  MOPIDY_CONNECTED: 'actionMopidyConnected',\n  MOPIDY_DISCONNECTED: 'actionMopidyDisconnected',\n  SYNC_SOCIAL_DATA: 'syncSocialData'\n}\n","import MopidyApi from 'constants/mopidy-api'\nimport Types from 'constants/common'\nimport { transformUrl } from 'utils/spotify'\n\nexport const updateToken = token => {\n  return {\n    type: Types.STORE_TOKEN,\n    token\n  }\n}\n\nexport const clearToken = () => {\n  return {\n    type: Types.CLEAR_STORE_TOKEN\n  }\n}\n\nexport const addNewTrack = url => {\n  let uri = transformUrl(url)\n\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_ADD_TRACK,\n    params: { uris: [uri] }\n  }\n}\n\nexport const addNewTracks = uris => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_ADD_TRACK,\n    params: { uris: uris.map(uri => transformUrl(uri)) }\n  }\n}\n\nexport const addCurrentTrack = track => {\n  return {\n    type: Types.ADD_CURRENT_TRACK,\n    track\n  }\n}\n\nexport const syncSocialData = track => {\n  return {\n    type: Types.SYNC_SOCIAL_DATA,\n    track\n  }\n}\n\nexport const addTrackList = list => {\n  return {\n    type: Types.ADD_TRACKS,\n    list\n  }\n}\n\nexport const removeFromTracklist = uri => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_REMOVE_TRACK,\n    params: { criteria: { uri: [uri] } }\n  }\n}\n\nexport const updateProgressTimer = (position, duration) => {\n  if (duration === Infinity) {\n    duration = 0\n  }\n\n  return {\n    type: Types.UPDATE_PROGRESS_TIMER,\n    position,\n    duration\n  }\n}\n\nexport const wsConnect = () => {\n  return {\n    type: Types.CONNECT\n  }\n}\n\nexport const wsConnecting = () => {\n  return {\n    type: Types.CONNECTING\n  }\n}\n\nexport const wsConnected = () => {\n  return {\n    type: Types.CONNECTED\n  }\n}\n\nexport const wsDisconnect = () => {\n  return {\n    type: Types.DISCONNECT\n  }\n}\n\nexport const wsDisconnected = () => {\n  return {\n    type: Types.DISCONNECTED\n  }\n}\n\nexport const mopidyConnected = () => {\n  return {\n    type: Types.MOPIDY_CONNECTED\n  }\n}\n\nexport const mopidyDisconnected = () => {\n  return {\n    type: Types.MOPIDY_DISCONNECTED\n  }\n}\n\nexport const getCurrentTrack = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_CURRENT_TRACK\n  }\n}\n\nexport const getTimePosition = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_TIME_POSITION\n  }\n}\n\nexport const getState = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_PLAYBACK_STATE\n  }\n}\n\nexport const getTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_GET_TRACKS\n  }\n}\n\nexport const clearTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_CLEAR\n  }\n}\n\nexport const startPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PLAY\n  }\n}\n\nexport const stopPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_STOP\n  }\n}\n\nexport const pausePlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PAUSE\n  }\n}\n\nexport const nextPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_NEXT\n  }\n}\n\nexport const previousPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_BACK\n  }\n}\n\nexport const getVolume = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.GET_VOLUME\n  }\n}\n\nexport const updateVolume = volume => {\n  return {\n    type: Types.UPDATE_VOLUME,\n    volume\n  }\n}\n\nexport const updatePlaybackState = state => {\n  return {\n    type: Types.UPDATE_PLAYBACK_STATE,\n    state\n  }\n}\n\nexport const setVolume = volume => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.SET_VOLUME,\n    params: [Number(volume)]\n  }\n}\n","export default {\n  VOTE: 'actionVote',\n  CAST_VOTE: 'castVote',\n  VOTE_CASTED: 'voteCasted'\n}\n","export default {\n  SEARCH: 'actionTrackSearch',\n  SEARCH_GET_TRACKS: 'searchGetTracks',\n  STORE_SEARCH_RESULTS: 'actionStoreSearchResults',\n  STORE_SEARCH_QUERY: 'actionStoreSearchQuery',\n  TOGGLE_SEARCH_SIDEBAR: 'actionToggleSearchSidebar',\n  REMOVE_FROM_SEARCH_RESULTS: 'actionRemoveFromSearchResults',\n  ADD_TRACK_TO_MIX: 'curateAddTrackToMix',\n  REMOVE_TRACK_FROM_MIX: 'curateRemoveTracksFromMix',\n  SWAP_TRACKS: 'searchSwapTracks',\n  CLEAR_MIX: 'searchClearMix'\n}\n","import ProgressTimer from 'media-progress-timer'\n\nexport const millisToMinutesAndSeconds = millis => {\n  let minutes = Math.floor(millis / 60000)\n  let seconds = ((millis % 60000) / 1000).toFixed(0)\n  return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n}\n\nexport const millisToSeconds = millis => {\n  return millis * 0.001\n}\n\nexport const timerToPercentage = timer => {\n  if (timer.duration === 0) {\n    return 0\n  }\n  const position = millisToSeconds(timer.position)\n  const duration = millisToSeconds(timer.duration)\n  const percentage = Math.round((position / duration) * 100)\n\n  return isNaN(percentage) ? 0 : percentage\n}\n\nexport const trackProgressTimer = (store, actions) => {\n  return ProgressTimer({\n    callback: (position, duration) => {\n      store.dispatch(actions.updateProgressTimer(position, duration))\n    },\n    fallbackTargetFrameRate: 1,\n    disableRequestAnimationFrame: true\n  })\n}\n","import Search from 'search/constants'\n\nexport const toggleSearchSidebar = (open: boolean) => {\n  return {\n    type: Search.TOGGLE_SEARCH_SIDEBAR,\n    open\n  }\n}\n\nexport const storeSearchResults = (results: any[]) => {\n  return {\n    type: Search.STORE_SEARCH_RESULTS,\n    results\n  }\n}\n\nexport const storeSearchQuery = (query: string | null) => {\n  return {\n    type: Search.STORE_SEARCH_QUERY,\n    query\n  }\n}\n\nexport const search = (query: string, options: any) => {\n  return {\n    type: Search.SEARCH,\n    key: Search.SEARCH_GET_TRACKS,\n    params: { query, options }\n  }\n}\n\nexport const removeFromSearchResults = (uris: string[]) => {\n  return {\n    type: Search.REMOVE_FROM_SEARCH_RESULTS,\n    uris\n  }\n}\n\nexport const addTrackToMix = (track: any) => {\n  return {\n    type: Search.ADD_TRACK_TO_MIX,\n    track\n  }\n}\n\nexport const removeFromMix = (uri: string) => {\n  return {\n    type: Search.REMOVE_TRACK_FROM_MIX,\n    uri\n  }\n}\n\nexport const swapTracks = (a: number, b: number) => {\n  return {\n    type: Search.SWAP_TRACKS,\n    a,\n    b\n  }\n}\n\nexport const clearMix = () => {\n  return {\n    type: Search.CLEAR_MIX\n  }\n}\n","export default {\n  AUTHENTICATION_TOKEN_INVALID: 'authenticationTokenInvalid'\n}\n","export interface PayLoadInterface {\n  jwt: string\n  key: string\n  data: any\n}\n\nconst Payload = {\n  decode: (payload: string): PayLoadInterface => JSON.parse(payload),\n  encodeToJson: ({ jwt, key, data }: PayLoadInterface): string => JSON.stringify({ jwt, key, data })\n}\n\nexport default Payload\n","import { store } from 'react-notifications-component'\n\nconst Notify = {\n  info: ({ id, title, message }) => {\n    return store.addNotification({\n      id,\n      title,\n      message,\n      type: 'info',\n      insert: 'top',\n      container: 'bottom-left',\n      dismiss: {\n        duration: 3000\n      }\n    })\n  },\n  success: ({ id, title, message }) => {\n    return store.addNotification({\n      id,\n      title,\n      message,\n      type: 'success',\n      insert: 'top',\n      container: 'bottom-left',\n      dismiss: {\n        duration: 3000\n      }\n    })\n  },\n  warning: ({ id, title, message }) => {\n    return store.addNotification({\n      id,\n      title,\n      message,\n      type: 'warning',\n      insert: 'top',\n      container: 'bottom-left',\n      dismiss: {\n        duration: 5000\n      }\n    })\n  }\n}\n\nexport default Notify\n","import * as actions from 'actions'\nimport * as searchActions from 'search/actions'\nimport AuthApi from 'constants/auth-api'\nimport MopidyApi from 'constants/mopidy-api'\nimport SearchConst from 'search/constants'\nimport VoteConst from 'votes/constants'\nimport Payload from 'utils/payload'\nimport Notify from 'utils/notify'\n\nconst updatePlaybackState = (store, state) => {\n  store.dispatch(actions.updatePlaybackState(state))\n}\n\nconst playBackChanged = (store, state, progress) => {\n  switch (state) {\n    case MopidyApi.PAUSED:\n    case MopidyApi.STOPPED:\n      updatePlaybackState(store, state)\n      progress.stop()\n      break\n    case MopidyApi.PLAYING:\n      updatePlaybackState(store, state)\n      progress.start()\n      break\n    default:\n      break\n  }\n}\n\nconst addCurrentTrack = (track, store, progress) => {\n  store.dispatch(actions.addCurrentTrack(track))\n  store.dispatch(actions.syncSocialData(track))\n  const progressTimer = progress.set(0, track.length)\n  if (store.getState().jukebox.playbackState === MopidyApi.PLAYING) progressTimer.start()\n}\n\nconst addTrackList = (tracklist, store) => {\n  store.dispatch(actions.addTrackList(tracklist))\n}\n\nconst onMessageHandler = (store, payload, progressTimer) => {\n  const { key, data, user } = Payload.decode(payload)\n\n  switch (key) {\n    case AuthApi.AUTHENTICATION_TOKEN_INVALID:\n      console.error(`AUTHENTICATION_TOKEN_INVALID: ${data.error}`)\n      store.dispatch(actions.clearToken())\n      break\n    case MopidyApi.PLAYBACK_GET_CURRENT_TRACK:\n    case MopidyApi.EVENT_TRACK_PLAYBACK_STARTED:\n      if (data && data.track) addCurrentTrack(data.track, store, progressTimer)\n      break\n    case MopidyApi.EVENT_PLAYBACK_STATE_CHANGED:\n    case MopidyApi.PLAYBACK_GET_PLAYBACK_STATE:\n      playBackChanged(store, data, progressTimer)\n      break\n    case MopidyApi.TRACKLIST_GET_TRACKS:\n      addTrackList(data, store)\n      break\n    case MopidyApi.PLAYBACK_NEXT:\n    case MopidyApi.PLAYBACK_BACK:\n      store.dispatch(actions.getCurrentTrack())\n      break\n    case MopidyApi.SET_VOLUME:\n      Notify.info({\n        title: 'Volume Updated',\n        message: `${user.fullname} changed it to ${data.volume}`\n      })\n      break\n    case MopidyApi.TRACKLIST_REMOVE_TRACK:\n      Notify.warning({\n        title: 'Track Removed',\n        message: `${user.fullname} removed: ${data.message}`\n      })\n      break\n    case MopidyApi.TRACKLIST_ADD_TRACK:\n      Notify.success({\n        title: 'New Track',\n        message: `${user.fullname} added: ${data.message}`\n      })\n      break\n    case MopidyApi.GET_VOLUME:\n    case MopidyApi.EVENT_VOLUME_CHANGED:\n      store.dispatch(actions.updateVolume(data.volume))\n      break\n    case MopidyApi.PLAYBACK_GET_TIME_POSITION:\n      progressTimer.set(data)\n      break\n    case SearchConst.SEARCH_GET_TRACKS:\n      store.dispatch(searchActions.storeSearchResults(data))\n      break\n    case VoteConst.VOTE_CASTED:\n      if (data) {\n        store.dispatch(actions.syncSocialData(data))\n      }\n      break\n    case MopidyApi.EVENT_PLAYBACK_STATE_RESUMED:\n      progressTimer.set(data)\n      break\n    case MopidyApi.VALIDATION_ERROR:\n      Notify.warning({\n        title: 'Oops',\n        message: data.message\n      })\n      break\n    default:\n      break\n  }\n}\n\nexport default onMessageHandler\n","import * as actions from 'actions'\n\nconst State = {\n  loadInitial: store => {\n    ;['getCurrentTrack', 'getState', 'getTrackList', 'getVolume', 'getTimePosition'].forEach(\n      action => {\n        store.dispatch(actions[action]())\n      }\n    )\n  }\n}\n\nexport default State\n","import io from 'socket.io-client'\nimport * as actions from 'actions'\nimport Constants from 'constants/common'\nimport VoteConstant from 'votes/constants'\nimport SearchConst from 'search/constants'\nimport { trackProgressTimer } from 'utils/time'\nimport onMessageHandler from 'utils/on-message-handler'\nimport Payload from 'utils/payload'\nimport State from 'utils/state'\nimport { Middleware, MiddlewareAPI, Action } from 'redux'\nimport { Dispatch } from 'react'\n\ninterface ActionInterface extends Action {\n  key: string\n  params: any\n}\n\nconst JukeboxMiddleware: Middleware = (() => {\n  const url = `http://${process.env.REACT_APP_WS_URL}:${process.env.REACT_APP_WS_PORT}`\n  let socket: SocketIOClient.Socket\n  let progressTimer: any = null\n\n  return (store: MiddlewareAPI) => (next: Dispatch<any>) => (action: ActionInterface) => {\n    const getJWT = (): string => store.getState().settings.token\n    const packMessage = () =>\n      Payload.encodeToJson({\n        jwt: getJWT(),\n        key: action.key,\n        data: action.params\n      })\n\n    const onMopidyStateChange = (data: any) => {\n      if (JSON.parse(data).online) {\n        store.dispatch(actions.mopidyConnected())\n        return State.loadInitial(store)\n      }\n      store.dispatch(actions.mopidyDisconnected())\n    }\n    const onOpen = () => {\n      progressTimer = trackProgressTimer(store, actions)\n      store.dispatch(actions.wsConnected())\n    }\n    const onClose = () => store.dispatch(actions.wsDisconnect())\n    const onMessage = (data: any) => onMessageHandler(store, data, progressTimer)\n    const onSearchResults = (data: any) => onMessageHandler(store, data, progressTimer)\n    const onVote = (data: any) => onMessageHandler(store, data, progressTimer)\n    const onConnect = () => {\n      if (socket != null) socket.close()\n      socket = io(url, { transports: ['websocket'] })\n      socket.on('vote', onVote)\n      socket.on('search', onSearchResults)\n      socket.on('mopidy', onMopidyStateChange)\n      socket.on('message', onMessage)\n      socket.on('connect', onOpen)\n      socket.on('disconnect', onClose)\n\n      store.dispatch(actions.wsConnecting())\n    }\n    const onDisconnect = () => {\n      if (progressTimer) {\n        progressTimer.reset()\n      }\n      store.dispatch(actions.wsDisconnected())\n    }\n\n    switch (action.type) {\n      case Constants.CONNECT:\n        return onConnect()\n      case Constants.DISCONNECT:\n        return onDisconnect()\n      case Constants.SEND:\n        return socket && socket.emit('message', packMessage())\n      case SearchConst.SEARCH:\n        return socket && socket.emit('search', packMessage())\n      case VoteConstant.VOTE:\n        return socket && socket.emit('vote', packMessage())\n      default:\n        return next(action)\n    }\n  }\n})()\n\nexport default JukeboxMiddleware\n","import Types from 'constants/common'\n\nconst track = (state = null, action) => {\n  switch (action.type) {\n    case Types.ADD_CURRENT_TRACK:\n      return action.track\n    case Types.SYNC_SOCIAL_DATA:\n      return Object.assign({}, state, {\n        addedBy: action.track.addedBy,\n        metrics: action.track.metrics\n      })\n    default:\n      return state\n  }\n}\n\nexport default track\n","import Types from 'constants/common'\n\nconst tracklist = (state = [], action) => {\n  switch (action.type) {\n    case Types.ADD_TRACKS:\n      return action.list.map(item => item.track)\n    case Types.SYNC_SOCIAL_DATA:\n      return state.map(item => {\n        if (item.uri === action.track.uri) {\n          return Object.assign({}, item, {\n            addedBy: action.track.addedBy,\n            metrics: action.track.metrics\n          })\n        }\n\n        return item\n      })\n    default:\n      return state\n  }\n}\n\nexport default tracklist\n","import Types from 'constants/common'\n\nconst initalProgressState = {\n  position: 0,\n  duration: 0,\n  remaining: 0\n}\n\nconst timer = (state = initalProgressState, action) => {\n  switch (action.type) {\n    case Types.UPDATE_PROGRESS_TIMER:\n      return {\n        position: action.position,\n        duration: action.duration,\n        remaining: action.duration - action.position\n      }\n    default:\n      return state\n  }\n}\n\nexport default timer\n","import MopidyApi from 'constants/mopidy-api'\nimport Types from 'constants/common'\n\nconst initalState = {\n  online: false,\n  mopidyOnline: false,\n  volume: 0,\n  playbackState: MopidyApi.STOPPED\n}\n\nconst jukebox = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.CONNECTED:\n      return Object.assign({}, state, {\n        online: true\n      })\n    case Types.DISCONNECTED:\n      return Object.assign({}, state, {\n        online: false\n      })\n    case Types.MOPIDY_CONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: true\n      })\n    case Types.MOPIDY_DISCONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: false\n      })\n    case Types.UPDATE_VOLUME:\n      return Object.assign({}, state, {\n        volume: action.volume\n      })\n    case Types.UPDATE_PLAYBACK_STATE:\n      return Object.assign({}, state, {\n        playbackState: action.state\n      })\n    default:\n      return state\n  }\n}\n\nexport default jukebox\n","import Types from 'constants/common'\n\nconst initalState = {\n  token: null\n}\n\nconst settings = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.STORE_TOKEN:\n      if (action.token === state.token) return state\n      return Object.assign({}, state, {\n        token: action.token\n      })\n    case Types.CLEAR_STORE_TOKEN:\n      return Object.assign({}, state, {\n        token: null\n      })\n    default:\n      return state\n  }\n}\n\nexport default settings\n","import { Reducer } from 'redux'\nimport Constant from 'search/constants'\n\nexport type SearchState = Readonly<{\n  searchSideBarOpen: boolean\n  query: string\n  limit: number\n  offset: number\n  total: number\n  results: ReadonlyArray<any>\n}>\n\nconst initalState: SearchState = {\n  searchSideBarOpen: false,\n  query: '',\n  limit: 20,\n  offset: 0,\n  total: 0,\n  results: []\n}\n\nconst search: Reducer<SearchState> = (state = initalState, action) => {\n  switch (action.type) {\n    case Constant.REMOVE_FROM_SEARCH_RESULTS: {\n      return {\n        ...state,\n        results: state.results.filter(item => {\n          return !action.uris.includes(item.track.uri)\n        })\n      }\n    }\n    case Constant.TOGGLE_SEARCH_SIDEBAR: {\n      return Object.assign({}, state, {\n        searchSideBarOpen: action.open\n      })\n    }\n    case Constant.STORE_SEARCH_QUERY: {\n      return Object.assign({}, state, {\n        query: action.query\n      })\n    }\n    case Constant.STORE_SEARCH_RESULTS: {\n      const results = action.results.tracks\n      return Object.assign({}, state, {\n        limit: results.limit,\n        offset: results.offset,\n        total: results.total > 10000 ? 10000 : results.total,\n        results: results.items\n      })\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport default search\n","import { Reducer } from 'redux'\nimport Constant from 'search/constants'\n\nexport type CurateState = Readonly<{\n  tracks: any[]\n}>\n\nconst initalState: CurateState = {\n  tracks: []\n}\n\nconst curate: Reducer<CurateState> = (state = initalState, action) => {\n  switch (action.type) {\n    case Constant.ADD_TRACK_TO_MIX: {\n      const exists = state.tracks.find(item => item.track.uri === action.track.uri)\n      if (!exists) state.tracks.push({ track: action.track })\n\n      return state\n    }\n    case Constant.REMOVE_TRACK_FROM_MIX: {\n      return {\n        ...state,\n        tracks: state.tracks.filter(item => item.track.uri !== action.uri)\n      }\n    }\n    case Constant.SWAP_TRACKS: {\n      const list = state.tracks\n      list[action.a] = list.splice(action.b, 1, list[action.a])[0]\n\n      return {\n        ...state,\n        tracks: list\n      }\n    }\n    case Constant.CLEAR_MIX: {\n      return {\n        ...state,\n        tracks: []\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport default curate\n","import { combineReducers } from 'redux'\nimport track from 'reducers/track'\nimport tracklist from 'reducers/tracklist'\nimport timer from 'reducers/timer'\nimport jukebox from 'reducers/jukebox'\nimport settings from 'reducers/settings'\nimport search from 'search/reducers/search'\nimport curatedList from 'search/reducers/curated-list'\n\nconst jukeboxApp = combineReducers({\n  track,\n  tracklist,\n  timer,\n  jukebox,\n  settings,\n  search,\n  curatedList\n})\n\nexport default jukeboxApp\n","import * as workerTimers from 'worker-timers'\n\nconst checkForTokenInMilliseconds = 2700000\n\nconst SignInToken = {\n  refresh: (googleApi, success) => {\n    return workerTimers.setTimeout(() => {\n      googleApi.reloadAuthResponse().then(\n        response => {\n          console.info('Token refreshed OK')\n          return success(response.id_token)\n        },\n        err => console.warn('Token un-refreshable: ', err.message)\n      )\n    }, checkForTokenInMilliseconds)\n  },\n  clear: id => {\n    if (id) workerTimers.clearTimeout(id)\n  }\n}\n\nexport default SignInToken\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst PreviousButton = props => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    className='jb-previous-button'\n    disabled={props.disabled}\n  >\n    <Button.Content hidden>Prev</Button.Content>\n    <Button.Content visible>\n      <Icon name='step backward' />\n    </Button.Content>\n  </Button>\n)\n\nconst NextButton = props => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    className='jb-next-button'\n    disabled={props.disabled}\n  >\n    <Button.Content hidden>Next</Button.Content>\n    <Button.Content visible>\n      <Icon name='step forward' />\n    </Button.Content>\n  </Button>\n)\n\nconst SkipButtons = ({ disabled, onPrevious, onNext }) => (\n  <>\n    <PreviousButton onClick={onPrevious} disabled={disabled} />\n    <NextButton onClick={onNext} disabled={disabled} />\n  </>\n)\n\nSkipButtons.propTypes = {\n  disabled: PropTypes.bool,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default SkipButtons\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport SkipButtons from 'components/skip-buttons'\nimport MopidyApi from 'constants/mopidy-api'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst PlayButton = props => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    disabled={props.state === MopidyApi.PLAYING || props.disabled}\n    active={props.state === MopidyApi.PLAYING}\n    className='jb-play-button'\n  >\n    <Button.Content hidden>Play</Button.Content>\n    <Button.Content visible>\n      <Icon name='play' />\n    </Button.Content>\n  </Button>\n)\n\nconst PauseButton = props => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    disabled={\n      props.state === MopidyApi.PAUSED || props.state === MopidyApi.STOPPED || props.disabled\n    }\n    active={props.state === MopidyApi.PAUSED}\n    className='jb-pause-button'\n  >\n    <Button.Content hidden>Pause</Button.Content>\n    <Button.Content visible>\n      <Icon name='pause' />\n    </Button.Content>\n  </Button>\n)\n\nconst StopButton = props => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    disabled={props.state === MopidyApi.STOPPED || props.disabled}\n    active={props.state === MopidyApi.STOPPED}\n    className='jb-stop-button'\n  >\n    <Button.Content hidden>Stop</Button.Content>\n    <Button.Content visible>\n      <Icon name='stop' />\n    </Button.Content>\n  </Button>\n)\n\nconst Controls = props => {\n  const jukebox = useSelector(state => state.jukebox)\n  const { disabled, onPlay, onPause, onStop, onPrevious, onNext } = props\n\n  return (\n    <span>\n      <SkipButtons disabled={disabled} onPrevious={onPrevious} onNext={onNext} />\n      <PlayButton onClick={onPlay} state={jukebox.playbackState} disabled={disabled} />\n      <PauseButton onClick={onPause} state={jukebox.playbackState} disabled={disabled} />\n      <StopButton onClick={onStop} state={jukebox.playbackState} disabled={disabled} />\n    </span>\n  )\n}\n\nControls.propTypes = {\n  disabled: PropTypes.bool,\n  onPlay: PropTypes.func.isRequired,\n  onPause: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default Controls\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DropTarget } from 'react-dnd'\nimport './index.css'\n\nconst boxTarget = {\n  drop(props, monitor) {\n    if (props.onDrop) {\n      props.onDrop(props, monitor)\n    }\n  }\n}\n\nconst boxHandler = (connect, monitor) => {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver()\n  }\n}\n\nconst dropTrack = show => {\n  if (!show) return null\n  return (\n    <div className='drag-is-over'>\n      <p>Drop da track</p>\n    </div>\n  )\n}\n\nclass UrlDropArea extends Component {\n  render() {\n    const { connectDropTarget, isOver } = this.props\n\n    return connectDropTarget(\n      <div>\n        {dropTrack(isOver)}\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nUrlDropArea.propTypes = {\n  connectDropTarget: PropTypes.func.isRequired,\n  accepts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onDrop: PropTypes.func\n}\n\nexport default DropTarget(props => props.accepts, boxTarget, boxHandler)(UrlDropArea)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DragDropContextProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport Constants from 'constants/common'\nimport UrlDropArea from 'components/url-drop-area'\n\nconst DragInTrack = ({ disabled, onDrop, children }) => {\n  if (disabled) {\n    return children\n  }\n\n  return (\n    <DragDropContextProvider backend={HTML5Backend}>\n      <UrlDropArea accepts={Constants.DROP_TYPES} onDrop={onDrop}>\n        {children}\n      </UrlDropArea>\n    </DragDropContextProvider>\n  )\n}\n\nDragInTrack.propTypes = {\n  disabled: PropTypes.bool,\n  onDrop: PropTypes.func.isRequired\n}\n\nexport default DragInTrack\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { List, Popup, Icon, Image } from 'semantic-ui-react'\nimport dateFormat from 'dateformat'\nimport './index.css'\n\nconst addedByContent = users => (\n  <List className='added-by-list'>\n    {users.map((data, i) => {\n      const fullName = data.user ? data.user.fullname : 'User unknown'\n\n      return (\n        <List.Item key={i}>\n          {userPicture(data)}\n          <List.Content>\n            <List.Description>\n              <strong>{dateFormat(data.addedAt, 'dd mmm yyyy @ h:MM tt')}</strong> - {fullName}\n            </List.Description>\n          </List.Content>\n        </List.Item>\n      )\n    })}\n  </List>\n)\n\nconst userPicture = data => {\n  if (data && data.user && data.user.picture)\n    return <Image avatar className='added_by_avatar_image' src={data.user.picture} />\n  return <Icon name='user' />\n}\n\nconst AddedBy = ({ users = [] }) => {\n  const avatar = userPicture(users[0])\n  if (!users.length) return avatar\n\n  return <Popup wide content={addedByContent(users)} trigger={avatar} />\n}\n\nAddedBy.propTypes = {\n  users: PropTypes.array\n}\n\nexport default AddedBy\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport dateFormat from 'dateformat'\nimport { List, Popup, Image, Label } from 'semantic-ui-react'\nimport './index.css'\n\nconst voteNormaliser = v => Math.round(v / 10 - 5) // 100 is max a user can vote per play\n\nconst votedByContent = props => (\n  <List>\n    {props.votes.map((data, i) => {\n      const fullName = data.user ? data.user.fullname : 'User unknown'\n      const voteScore = (\n        <Label circular size='mini'>\n          {voteNormaliser(data.vote)}\n        </Label>\n      )\n\n      return (\n        <List.Item key={i}>\n          {userPicture(data)}\n          <List.Content>\n            <List.Description>\n              <strong>{dateFormat(data.at, 'dd mmm yyyy @ h:MM tt')}</strong> - {fullName}{' '}\n              {voteScore}\n            </List.Description>\n          </List.Content>\n        </List.Item>\n      )\n    })}\n  </List>\n)\n\nconst userPicture = data => {\n  if (data && data.user && data.user.picture)\n    return <Image avatar className='voted_by_avatar_image' src={data.user.picture} />\n  return null\n}\n\nconst voteLabel = props => {\n  let basic = true\n  let color = 'grey'\n  let icon = 'thumbs up'\n  const normalisedTotal = voteNormaliser(props.total)\n\n  if (normalisedTotal < 0) icon = 'thumbs down'\n  if (normalisedTotal > 4) {\n    color = 'green'\n    basic = false\n  }\n  if (normalisedTotal < -4) {\n    color = 'red'\n    basic = false\n  }\n\n  return (\n    <Label\n      className='track-label vote-track-label'\n      size={props.size || 'tiny'}\n      color={color}\n      basic={basic}\n      icon={icon}\n      content={normalisedTotal}\n      ribbon={props.ribbon ? 'right' : null}\n    />\n  )\n}\n\nconst VotedBy = props => {\n  const voteCount = props.votes ? props.votes.length : 0\n  if (!props.show) return null\n  if (voteCount < 1) return voteLabel(props)\n\n  return <Popup wide='very' content={votedByContent(props)} trigger={voteLabel(props)} />\n}\n\nVotedBy.propTypes = {\n  show: PropTypes.bool,\n  ribbon: PropTypes.bool,\n  votes: PropTypes.array,\n  total: PropTypes.number,\n  size: PropTypes.string\n}\n\nexport default VotedBy\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Line } from 'rc-progress'\nimport { timerToPercentage, millisToMinutesAndSeconds } from 'utils/time'\n\nconst ProgressBar = () => {\n  const timer = useSelector(state => state.timer)\n  const track = useSelector(state => state.track)\n  const progressPercentage = timerToPercentage(timer)\n\n  return (\n    <div className='progress-container'>\n      <span className='remaining-text'>{millisToMinutesAndSeconds(timer.remaining)}</span>\n      <span className='track-length'>{millisToMinutesAndSeconds(track.length)}</span>\n      <Line percent={progressPercentage} />\n    </div>\n  )\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Image, Label, Icon } from 'semantic-ui-react'\nimport Slider from 'rc-slider'\nimport AddedBy from 'components/added-by'\nimport VotedBy from 'components/voted-by'\nimport ProgressBar from 'components/progress-bar'\nimport defaultImage from './default-artwork.png'\nimport { flatten, mean } from 'lodash'\nimport 'rc-slider/assets/index.css'\nimport './index.css'\n\nconst marks = {\n  0: {\n    style: {\n      color: 'red'\n    },\n    label: <Icon name='thumbs down' color='red' />\n  },\n  50: <Icon name='handshake' />,\n  100: {\n    style: {\n      color: 'green'\n    },\n    label: <Icon name='thumbs up' color='green' />\n  }\n}\n\nconst spotifyLink = uri => {\n  const code = uri.split(':').pop()\n  return `https://open.spotify.com/track/${code}`\n}\n\nconst AlbumDescription = props => {\n  const year = ` (${props.album.year})`\n  return (\n    <Card.Description>\n      {props.album.name}\n      {year}\n    </Card.Description>\n  )\n}\n\nconst noTrack = () => (\n  <Card>\n    <Image src={defaultImage} />\n    <Card.Content>\n      <Card.Header>Nothing playing</Card.Header>\n      <Card.Description>Drag some music here or press play.</Card.Description>\n    </Card.Content>\n  </Card>\n)\n\nconst calcVoteAverage = data => {\n  const votes = data.map(i => i.vote)\n  if (votes.length < 1) return 0\n  return mean(flatten(votes))\n}\n\nconst voteHandleColor = total => {\n  if (total > 50) return '#21ba45'\n  if (total < 50) return 'red'\n  return 'gray'\n}\n\nconst TrackVotes = props => {\n  if (!props.metrics) return null\n  return <VotedBy total={props.metrics.votesAverage} show={props.metrics.votes > 0} ribbon />\n}\n\nconst AddLabel = props => {\n  return (\n    <Label size='mini'>\n      Added\n      <Label.Detail>{props.count}</Label.Detail>\n    </Label>\n  )\n}\n\nconst PlayLabel = props => {\n  if (!props.metrics) return null\n\n  return (\n    <Label size='mini'>\n      Played\n      <Label.Detail>{props.metrics.plays}</Label.Detail>\n    </Label>\n  )\n}\n\nconst VoteLabel = props => {\n  if (!props.metrics) return null\n\n  return (\n    <Label size='mini'>\n      Activity\n      <Label.Detail>{props.metrics.votes}</Label.Detail>\n    </Label>\n  )\n}\n\nconst CurrentTrack = props => {\n  const { track, onVote, userID } = props\n  if (!track) {\n    return noTrack()\n  }\n  const maxRating = 10\n  const { addedBy = [] } = track\n  const votes = (addedBy[0] && addedBy[0].votes) || []\n  const currentUserVoter = votes.find(u => u.user._id === userID)\n  const currentUserVote = currentUserVoter ? currentUserVoter.vote : null\n  const doVote = uri => rating => onVote(uri, rating / maxRating)\n\n  return (\n    <Card>\n      <Image src={track.image || defaultImage} label={<TrackVotes metrics={track.metrics} />} />\n      <Card.Content>\n        <ProgressBar />\n        <Card.Header>{track.name}</Card.Header>\n        <Card.Meta>{track.artist.name}</Card.Meta>\n        <AlbumDescription album={track.album} />\n      </Card.Content>\n      <Card.Content extra>\n        <div className='track-rating-container'>\n          <Slider\n            disabled={!userID}\n            dots\n            value={currentUserVote}\n            included={false}\n            marks={marks}\n            step={maxRating}\n            onChange={doVote(track.uri)}\n            handleStyle={{\n              borderColor: voteHandleColor(currentUserVote),\n              backgroundColor: voteHandleColor(currentUserVote)\n            }}\n          />\n        </div>\n      </Card.Content>\n      <Card.Content extra>\n        <AddLabel count={addedBy.length} />\n        <PlayLabel metrics={track.metrics} />\n        <VoteLabel metrics={track.metrics} />\n        <VotedBy size='mini' show={votes.length > 0} total={calcVoteAverage(votes)} votes={votes} />\n      </Card.Content>\n      <Card.Content extra>\n        <AddedBy users={track.addedBy} />\n        <a\n          className='track-uri'\n          href={spotifyLink(track.uri)}\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          {track.uri}\n        </a>\n      </Card.Content>\n    </Card>\n  )\n}\n\nCurrentTrack.propTypes = {\n  userID: PropTypes.string,\n  track: PropTypes.object,\n  onVote: PropTypes.func\n}\n\nexport default CurrentTrack\n","import React, { useContext } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport GoogleAuthContext from 'contexts/google'\nimport * as voteActions from 'votes/actions'\nimport CurrentTrack from 'components/current-track'\n\nexport const CurrentTrackContainer = () => {\n  const { googleUser } = useContext(GoogleAuthContext)\n  const track = useSelector(state => state.track)\n  const dispatch = useDispatch()\n\n  return (\n    <CurrentTrack\n      userID={googleUser && googleUser.googleId}\n      track={track}\n      onVote={(uri, rating) => dispatch(voteActions.vote(uri, rating))}\n    />\n  )\n}\n\nexport default CurrentTrackContainer\n","import Vote from 'votes/constants'\n\nexport const vote = (uri, vote) => {\n  return {\n    type: Vote.VOTE,\n    key: Vote.CAST_VOTE,\n    params: { uri, vote }\n  }\n}\n","import React, { useContext } from 'react'\nimport { Button, Image } from 'semantic-ui-react'\nimport GoogleAuthContext from 'contexts/google'\nimport './index.css'\n\nexport const Settings = () => {\n  const { googleUser, signIn, signOut } = useContext(GoogleAuthContext)\n\n  let avatar = (\n    <Button\n      icon='power off'\n      floated='right'\n      onClick={() => signIn()}\n      className='jb-settings-toggle'\n      title='Login using Google'\n    />\n  )\n  if (googleUser && googleUser.profileObj) {\n    avatar = (\n      <Image\n        rounded\n        size='mini'\n        floated='right'\n        title={googleUser.profileObj.name}\n        src={googleUser.profileObj.imageUrl}\n        onClick={() => signOut()}\n      />\n    )\n  }\n\n  return <React.Fragment>{avatar}</React.Fragment>\n}\n\nexport default Settings\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Comment, Confirm } from 'semantic-ui-react'\n\nconst RemoveTrack = props => {\n  const [open, setOpen] = React.useState(false)\n  const confirm = ev => {\n    props.onClick(ev)\n    setOpen(false)\n  }\n  const cancel = () => setOpen(false)\n  const show = () => setOpen(true)\n\n  return (\n    <>\n      <Comment.Action className='remove-track' onClick={show}>\n        Remove\n      </Comment.Action>\n      <Confirm\n        content={`Are you sure you want to remove: ${props.name}`}\n        cancelButton='No thanks'\n        confirmButton='Do it!'\n        open={open}\n        onCancel={cancel}\n        onConfirm={confirm}\n      />\n    </>\n  )\n}\n\nRemoveTrack.propTypes = {\n  uri: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default RemoveTrack\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Comment, Label, Item } from 'semantic-ui-react'\nimport { millisToMinutesAndSeconds } from 'utils/time'\nimport defaultImage from 'components/current-track/default-artwork.png'\nimport AddedBy from 'components/added-by'\nimport VotedBy from 'components/voted-by'\nimport RemoveTrack from 'components/remove-track'\nimport './index.css'\n\nconst TrackImage = props => (\n  <Comment.Avatar className={props.isCurrent ? 'current-image' : null} src={props.src} />\n)\n\nconst ImageChooser = props => {\n  const image = props.image ? props.image : defaultImage\n\n  return <TrackImage src={image} isCurrent={props.isCurrent} />\n}\n\nconst TrackHeading = props => <Comment.Author>{props.name}</Comment.Author>\n\nconst TrackDescription = props => (\n  <Comment.Text>\n    <Item as='a' className='track-search-link' onClick={props.onClick}>\n      {props.artistName}\n    </Item>{' '}\n    <small>({millisToMinutesAndSeconds(props.trackLength)})</small>\n  </Comment.Text>\n)\n\nconst CurrentVote = props => {\n  if (!props.metrics) return null\n  const show = props.metrics.votes > 0\n  if (!show) return null\n\n  return (\n    <Comment.Action as='span'>\n      <VotedBy total={props.metrics.votesAverage} show={show} />\n    </Comment.Action>\n  )\n}\n\nconst ActionRemove = props => {\n  if (props.isCurrent || props.disabled) return null\n  const removeTrack = (uri, cb) => () => cb(uri)\n\n  return (\n    <RemoveTrack\n      uri={props.uri}\n      name={props.name}\n      onClick={removeTrack(props.uri, props.onClick)}\n    />\n  )\n}\n\nconst CurrentPlays = props => {\n  let basic = true\n  let color = 'grey'\n  if (!props.metrics) return null\n  if (props.metrics.plays > 0) {\n    basic = false\n    color = null\n  }\n\n  return (\n    <Comment.Action as='span'>\n      <Label className='track-label' size='tiny' color={color} basic={basic}>\n        Played <Label.Detail>{props.metrics.plays}</Label.Detail>\n      </Label>\n    </Comment.Action>\n  )\n}\n\nconst ListItems = props => {\n  let beenPlayed = false\n  const isCurrentTrack = (current, uri) => current && current.uri === uri\n\n  return props.tracks.map((track, i) => {\n    const { addedBy } = track\n    const isCurrent = isCurrentTrack(props.current, track.uri)\n    if (isCurrent) beenPlayed = beenPlayed || true\n\n    return (\n      <Comment className={classnames({ 'current-track': isCurrent })} key={`${i}${track.uri}`}>\n        <ImageChooser image={track.image} isCurrent={isCurrent} />\n        <Comment.Content className={classnames({ 'track-info': !beenPlayed })}>\n          <TrackHeading name={track.name} />\n          <TrackDescription\n            artistName={track.artist.name}\n            trackLength={track.length}\n            onClick={props.onArtistSearch(track.artist.name)}\n          />\n          <Comment.Actions>\n            <CurrentVote metrics={track.metrics} />\n            <CurrentPlays metrics={track.metrics} />\n            <Comment.Action>\n              <AddedBy users={addedBy} />\n            </Comment.Action>\n            <ActionRemove\n              uri={track.uri}\n              name={track.name}\n              disabled={props.disabled}\n              isCurrent={isCurrent}\n              onClick={props.onRemove}\n            />\n          </Comment.Actions>\n        </Comment.Content>\n      </Comment>\n    )\n  })\n}\n\nconst Tracklist = props => {\n  if (!props.tracks) {\n    return null\n  }\n\n  return (\n    <Comment.Group size='small'>\n      <ListItems\n        disabled={props.disabled}\n        tracks={props.tracks}\n        current={props.currentTrack}\n        onRemove={props.onRemoveTrack}\n        onArtistSearch={props.onArtistSearch}\n      />\n    </Comment.Group>\n  )\n}\n\nTracklist.propTypes = {\n  disabled: PropTypes.bool,\n  tracks: PropTypes.array,\n  currentTrack: PropTypes.object,\n  onRemoveTrack: PropTypes.func.isRequired,\n  onArtistSearch: PropTypes.func.isRequired\n}\n\nexport default Tracklist\n","import React from 'react'\nimport { Button, Icon } from 'semantic-ui-react'\n\ntype SearchButtonProps = {\n  disabled: boolean\n  onClick: () => void\n}\n\nconst SearchButton: React.FC<SearchButtonProps> = props => (\n  <Button animated='vertical' floated='right' onClick={props.onClick} disabled={props.disabled}>\n    <Button.Content hidden>Search</Button.Content>\n    <Button.Content visible>\n      <Icon name='search' />\n    </Button.Content>\n  </Button>\n)\n\nexport default SearchButton\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst VOLUME_INC = 5\nconst VOLUME_MAX = 100\nconst VOLUME_MIN = 0\n\nconst volumeUp = (volume, cb) => {\n  volume += VOLUME_INC\n  if (volume <= VOLUME_MAX) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst volumeDown = (volume, cb) => {\n  volume -= VOLUME_INC\n  if (volume >= VOLUME_MIN) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst VolumeDownButton = props => (\n  <Button\n    className='jb-volume-down'\n    onClick={volumeDown(props.volume, props.onChange)}\n    disabled={props.disabled}\n  >\n    <Icon name='volume down' />\n  </Button>\n)\n\nconst VolumeUpButton = props => (\n  <Button\n    className='jb-volume-up'\n    onClick={volumeUp(props.volume, props.onChange)}\n    disabled={props.disabled}\n  >\n    <Icon name='volume up' />\n  </Button>\n)\n\nconst VolumeButtons = ({ disabled, onVolumeChange }) => {\n  const jukebox = useSelector(state => state.jukebox)\n\n  return (\n    <Button.Group floated='right'>\n      <VolumeDownButton volume={jukebox.volume} onChange={onVolumeChange} disabled={disabled} />\n      <Button.Or text={jukebox.volume} />\n      <VolumeUpButton volume={jukebox.volume} onChange={onVolumeChange} disabled={disabled} />\n    </Button.Group>\n  )\n}\n\nVolumeButtons.propTypes = {\n  disabled: PropTypes.bool,\n  onVolumeChange: PropTypes.func.isRequired\n}\n\nexport default VolumeButtons\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Confirm, Label } from 'semantic-ui-react'\n\nconst ClearPlaylist = props => {\n  const [open, setOpen] = React.useState(false)\n  if (props.disabled) {\n    return null\n  }\n\n  const confirm = ev => {\n    props.onClear(ev)\n    setOpen(false)\n  }\n  const cancel = () => setOpen(false)\n  const show = () => setOpen(true)\n\n  return (\n    <>\n      <Label horizontal size='mini' as='a' color='red' onClick={show} className='jb-clear-button'>\n        CLEAR\n      </Label>\n      <Confirm\n        content='Are you sure you want to nuke the playlist?'\n        cancelButton='No thanks'\n        confirmButton='Do it!'\n        open={open}\n        onCancel={cancel}\n        onConfirm={confirm}\n      />\n    </>\n  )\n}\n\nClearPlaylist.propTypes = {\n  disabled: PropTypes.bool,\n  onClear: PropTypes.func.isRequired\n}\n\nexport default ClearPlaylist\n","import React from 'react'\nimport classnames from 'classnames'\nimport { List, Image } from 'semantic-ui-react'\nimport VotedBy from 'components/voted-by'\n\ntype SearchItemProps = {\n  className?: string\n  track: any\n  onAdd?: () => void\n  onClick?: () => void\n}\n\ntype VoteInfoProps = {\n  metrics: any\n}\n\nconst VoteInfo: React.FC<VoteInfoProps> = props => {\n  if (!props.metrics) return null\n  return <VotedBy size='mini' total={props.metrics.votesAverage} show={props.metrics.votes > 0} />\n}\n\nconst SearchItem: React.FC<SearchItemProps> = props => (\n  <div\n    className={classnames(props.className, 'search-list-item', { disabled: props.track.explicit })}\n  >\n    <Image\n      alt={props.track.name}\n      floated='left'\n      src={props.track.image}\n      size='tiny'\n      title={`Click to add - ${props.track.name} - ${props.track.artist.name}`}\n      className='search-list-item__image'\n      disabled={props.track.explicit}\n      onClick={props.track.explicit ? undefined : props.onClick}\n    />\n    <List.Content>\n      <div className='search-list-item__header'>\n        {props.track.name} - {props.track.artist.name}\n      </div>\n      <div className='search-list-item__content'>{props.track.album.name}</div>\n      <VoteInfo metrics={props.track.metrics} />\n      {props.onAdd ? (\n        <span onClick={props.onAdd} className='search-list-item__add'>\n          Add to mix\n        </span>\n      ) : null}\n    </List.Content>\n  </div>\n)\n\nexport default SearchItem\n","import React from 'react'\nimport classnames from 'classnames'\nimport SearchItem from '../search-item'\n\ntype DraggableSearchItemProps = {\n  i: number\n  track: any\n  action: (a: number, b: number) => void\n  onRemove: () => void\n}\n\nconst DraggableSearchItem: React.FC<DraggableSearchItemProps> = props => {\n  const { i } = props\n\n  const onDragStart = (ev: React.DragEvent, i: string): void => {\n    ev.dataTransfer && ev.dataTransfer.setData('text/plain', i)\n  }\n  const onDragOver = (ev: React.DragEvent): void => {\n    ev.preventDefault()\n  }\n\n  const onDrop = (ev: React.DragEvent, a: string): void => {\n    const b = ev.dataTransfer && ev.dataTransfer.getData('text/plain')\n    if (b) props.action(parseInt(a, 10), parseInt(b, 10))\n  }\n\n  return (\n    <div\n      draggable\n      className={classnames('draggable', 'search-list-item-draggable')}\n      onDragStart={e => onDragStart(e, String(i))}\n      onDragOver={e => onDragOver(e)}\n      onDrop={e => onDrop(e, String(i))}\n      title='You can drag this to sort.'\n    >\n      <SearchItem key={props.track.uri} track={props.track} />\n      <span onClick={props.onRemove} className='search-list-item__remove'>\n        Remove\n      </span>\n    </div>\n  )\n}\n\nexport default DraggableSearchItem\n","import React from 'react'\nimport { Sidebar, Button, Form, List, Header, Divider, Pagination } from 'semantic-ui-react'\nimport SearchItem from '../search-item'\nimport DraggableSearchItem from '../draggable-search-item'\nimport './index.css'\n\ntype SearchItemsProps = {\n  tracks: ReadonlyArray<any>\n  onClick: (uri: string) => void\n  onAdd: (track: any) => void\n}\n\ntype MixItemsProps = {\n  tracks: ReadonlyArray<any>\n  onSwap: (a: number, b: number) => void\n  onRemove: (uri: string) => void\n}\n\ntype YourMixProps = {\n  tracks: ReadonlyArray<any>\n  onRemoveFromMix: (uri: string) => void\n  onSwapTracks: (a: number, b: number) => void\n  onAddTracks: (uris: string[]) => void\n}\n\ntype SearchProps = {\n  visible: boolean\n  onClose: () => void\n  results: ReadonlyArray<any>\n  curatedList: ReadonlyArray<any>\n  onSubmit: () => void\n  query: string\n  onSwapTracks: (a: number, b: number) => void\n  onRemoveFromMix: (uri: string) => void\n  onQueryChange: (evt: React.ChangeEvent<HTMLInputElement>) => void\n  onAddTrack: (uri: string) => void\n  onAddTracks: (uris: string[]) => void\n  onAddTrackToMix: (track: any) => void\n  totalPages: number\n  onPageChange: (_: any, data: any) => void\n}\n\nconst SearchItems: React.FC<SearchItemsProps> = props => (\n  <>\n    {props.tracks.map(item => (\n      <SearchItem\n        key={item.track.uri}\n        track={item.track}\n        onClick={() => props.onClick(item.track.uri)}\n        onAdd={() => props.onAdd(item.track)}\n      />\n    ))}\n  </>\n)\n\nconst MixItems: React.FC<MixItemsProps> = props => (\n  <>\n    {props.tracks.map((item, i) => (\n      <DraggableSearchItem\n        i={i}\n        key={i}\n        track={item.track}\n        onRemove={() => props.onRemove(item.track.uri)}\n        action={props.onSwap}\n      />\n    ))}\n  </>\n)\n\nconst YourMix: React.FC<YourMixProps> = props => {\n  if (props.tracks.length === 0) return null\n  const uris = props.tracks.map(data => data.track.uri)\n\n  return (\n    <>\n      <Divider horizontal>\n        <Header as='h4' inverted>\n          Your Mix\n        </Header>\n      </Divider>\n      <List divided inverted size='tiny'>\n        <MixItems\n          tracks={props.tracks}\n          onRemove={props.onRemoveFromMix}\n          onSwap={props.onSwapTracks}\n        />\n      </List>\n      <Button\n        fluid\n        onClick={() => props.onAddTracks(uris)}\n        className='search-list-item__add_to_mix'\n      >\n        Add mix to playlist\n      </Button>\n      <Divider horizontal />\n    </>\n  )\n}\n\nconst Search: React.FC<SearchProps> = props => {\n  const {\n    visible,\n    onClose,\n    results,\n    curatedList,\n    onSubmit,\n    query,\n    onSwapTracks,\n    onRemoveFromMix,\n    onQueryChange,\n    onAddTrack,\n    onAddTracks,\n    onAddTrackToMix,\n    totalPages,\n    onPageChange\n  } = props\n  const inputEl = React.useRef<HTMLInputElement>(null)\n\n  return (\n    <Sidebar.Pushable>\n      <Sidebar\n        animation='overlay'\n        icon='labeled'\n        inverted='true'\n        vertical='true'\n        visible={visible}\n        width='very wide'\n        direction='right'\n        className='sidebar-search'\n        onShow={() => inputEl.current && inputEl.current.focus()}\n      >\n        <YourMix\n          tracks={curatedList}\n          onSwapTracks={onSwapTracks}\n          onAddTracks={onAddTracks}\n          onRemoveFromMix={onRemoveFromMix}\n        />\n        <Form inverted onSubmit={onSubmit}>\n          <Form.Field>\n            <label>SEARCH</label>\n            <input\n              ref={inputEl}\n              placeholder='track, artist or album'\n              onChange={onQueryChange}\n              value={query}\n            />\n          </Form.Field>\n          <Button type='submit' fluid>\n            Find\n          </Button>\n        </Form>\n        <Divider horizontal>\n          <Header as='h4' inverted>\n            Results\n          </Header>\n        </Divider>\n        {totalPages > 0 && (\n          <Pagination\n            className='search-list-pagination'\n            defaultActivePage={1}\n            firstItem={null}\n            lastItem={null}\n            pointing\n            secondary\n            totalPages={totalPages}\n            onPageChange={onPageChange}\n          />\n        )}\n        <List divided relaxed inverted size='tiny'>\n          <SearchItems tracks={results} onClick={onAddTrack} onAdd={onAddTrackToMix} />\n        </List>\n      </Sidebar>\n      <Sidebar.Pusher dimmed={visible} onClick={visible ? onClose : null}>\n        {props.children}\n      </Sidebar.Pusher>\n    </Sidebar.Pushable>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as mopidyActions from 'actions'\nimport * as searchActions from 'search/actions'\nimport SearchSidebar from 'search/components/sidebar'\nimport { SearchState } from './reducers/search'\nimport { CurateState } from './reducers/curated-list'\n\ninterface RootState {\n  search: SearchState\n  curatedList: CurateState\n}\n\nconst selectSearch = (state: RootState) => state.search\nconst selectCuratedList = (state: RootState) => state.curatedList\n\nexport const SearchContainer: React.FC = props => {\n  const search = useSelector(selectSearch)\n  const curatedList = useSelector(selectCuratedList)\n  const dispatch = useDispatch()\n\n  const onAddTrack = (uri: string) => {\n    dispatch(searchActions.removeFromSearchResults([uri]))\n    dispatch(mopidyActions.addNewTrack(uri))\n  }\n\n  const onAddTracks = (uris: string[]) => {\n    dispatch(mopidyActions.addNewTracks(uris))\n    dispatch(searchActions.clearMix())\n  }\n\n  const onAddTrackToMix = (track: any) => {\n    if (curatedList.tracks.length < 5) {\n      dispatch(searchActions.removeFromSearchResults([track.uri]))\n      dispatch(searchActions.addTrackToMix(track))\n    }\n  }\n\n  const onRemoveFromMix = (uri: string) => {\n    dispatch(searchActions.removeFromMix(uri))\n    onSearch()\n  }\n\n  const onSwapTracks = (a: number, b: number) => {\n    dispatch(searchActions.swapTracks(a, b))\n  }\n\n  const onSearch = (params = { activePage: 1 }) => {\n    const searchOptions = {\n      offset: (params.activePage - 1) * search.limit,\n      limit: search.limit\n    }\n    dispatch(searchActions.search(search.query, searchOptions))\n  }\n\n  return (\n    <SearchSidebar\n      visible={search.searchSideBarOpen}\n      onClose={() => dispatch(searchActions.toggleSearchSidebar(false))}\n      onSubmit={() => onSearch()}\n      onSwapTracks={onSwapTracks}\n      onAddTrack={onAddTrack}\n      onAddTracks={onAddTracks}\n      onAddTrackToMix={onAddTrackToMix}\n      onRemoveFromMix={onRemoveFromMix}\n      onQueryChange={evt => dispatch(searchActions.storeSearchQuery(evt.target.value))}\n      onPageChange={(_, data) => onSearch(data)}\n      results={search.results}\n      curatedList={curatedList.tracks}\n      totalPages={Math.round(search.total / search.limit)}\n      query={search.query}\n    >\n      {props.children}\n    </SearchSidebar>\n  )\n}\n\nexport default SearchContainer\n","import React from 'react'\nimport { Dimmer, Divider, Grid, Header, Container } from 'semantic-ui-react'\nimport Controls from 'components/controls'\nimport DragInTrack from 'components/drag-in-track'\nimport CurrentTrackContainer from 'containers/current-track-container'\nimport Settings from 'components/settings'\nimport TrackList from 'components/tracklist'\nimport SearchButton from 'search/components/button'\nimport VolumeButtons from 'components/volume-buttons'\nimport ClearPlaylist from 'components/clear-playlist'\nimport SearchContainer from 'search'\nimport './index.css'\n\nconst Dashboard = props => {\n  const {\n    online,\n    disabled,\n    onPlay,\n    onStop,\n    onPause,\n    onNext,\n    onPrevious,\n    onVolumeChange,\n    onDrop,\n    onTracklistClear,\n    onSearchClick,\n    tracklist,\n    currentTrack,\n    onRemoveTrack,\n    onArtistSearch\n  } = props\n\n  return (\n    <Dimmer.Dimmable blurring dimmed={!online}>\n      <DragInTrack disabled={disabled} onDrop={onDrop}>\n        <SearchContainer>\n          <Container className='header-wrapper' fluid>\n            <Settings />\n            <VolumeButtons disabled={disabled} onVolumeChange={onVolumeChange} />\n            <SearchButton onClick={onSearchClick} disabled={disabled} />\n            <Controls\n              disabled={disabled}\n              onPlay={onPlay}\n              onStop={onStop}\n              onPause={onPause}\n              onNext={onNext}\n              onPrevious={onPrevious}\n            />\n          </Container>\n          <Divider />\n          <Container className='body-wrapper' fluid>\n            <Grid stackable columns={2} className='dashboard-grid'>\n              <Grid.Column width={4}>\n                <Header size='small'>Current Track</Header>\n                <CurrentTrackContainer />\n              </Grid.Column>\n              <Grid.Column width={8}>\n                <Header size='small'>\n                  Playlist <ClearPlaylist disabled={disabled} onClear={onTracklistClear} />\n                </Header>\n                <TrackList\n                  disabled={disabled}\n                  tracks={tracklist}\n                  currentTrack={currentTrack}\n                  onRemoveTrack={onRemoveTrack}\n                  onArtistSearch={onArtistSearch}\n                />\n              </Grid.Column>\n            </Grid>\n          </Container>\n        </SearchContainer>\n      </DragInTrack>\n    </Dimmer.Dimmable>\n  )\n}\n\nexport default Dashboard\n","import React, { useCallback, useEffect, useContext, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DragDropContext } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport SignInToken from 'utils/signin-token'\nimport GoogleAuthContext from 'contexts/google'\nimport * as actions from 'actions'\nimport * as searchActions from 'search/actions'\nimport Dashboard from 'dashboard'\n\nexport const DashboardContainer = () => {\n  const jukebox = useSelector(state => state.jukebox)\n  const tracklist = useSelector(state => state.tracklist)\n  const currentTrack = useSelector(state => state.track)\n  const dispatch = useDispatch()\n  const { isSignedIn, googleUser } = useContext(GoogleAuthContext)\n  const disable = !(isSignedIn && jukebox.mopidyOnline)\n  const googleTokenId = useRef()\n  const refreshTokenTimeoutID = useRef()\n  const hasTokenChanged = token => token !== googleTokenId.current\n\n  useEffect(() => {\n    dispatch(actions.wsConnect())\n\n    /* istanbul ignore next */\n    return () => {\n      dispatch(actions.wsDisconnect())\n    }\n  }, [dispatch])\n\n  if (isSignedIn && hasTokenChanged(googleUser.tokenId)) {\n    googleTokenId.current = googleUser.tokenId\n    refreshTokenTimeoutID.current = SignInToken.refresh(googleUser, token => {\n      dispatch(actions.updateToken(token))\n    })\n    dispatch(actions.updateToken(googleTokenId.current))\n  }\n\n  if (!isSignedIn) {\n    googleTokenId.current = undefined\n    SignInToken.clear(refreshTokenTimeoutID.current)\n    dispatch(actions.clearToken())\n  }\n\n  const onPlay = useCallback(() => dispatch(actions.startPlaying()), [dispatch])\n  const onStop = useCallback(() => dispatch(actions.stopPlaying()), [dispatch])\n  const onPause = useCallback(() => dispatch(actions.pausePlaying()), [dispatch])\n  const onNext = useCallback(() => dispatch(actions.nextPlaying()), [dispatch])\n  const onPrevious = useCallback(() => dispatch(actions.previousPlaying()), [dispatch])\n  const onVolumeChange = useCallback(evt => dispatch(actions.setVolume(evt)), [dispatch])\n  /* istanbul ignore next */\n  const onDrop = useCallback(\n    (_item, monitor) => {\n      if (monitor) {\n        dispatch(actions.addNewTrack(monitor.getItem().urls[0]))\n      }\n    },\n    [dispatch]\n  )\n  const onTracklistClear = useCallback(() => dispatch(actions.clearTrackList()), [dispatch])\n  const onSearchClick = useCallback(() => dispatch(searchActions.toggleSearchSidebar(true)), [\n    dispatch\n  ])\n  const onRemoveTrack = useCallback(evt => dispatch(actions.removeFromTracklist(evt)), [dispatch])\n  const onArtistSearch = useCallback(\n    query => _ => {\n      const searchOptions = { offset: 0 }\n      dispatch(searchActions.search(query, searchOptions))\n      dispatch(searchActions.storeSearchQuery(query, searchOptions))\n      dispatch(searchActions.toggleSearchSidebar(true))\n    },\n    [dispatch]\n  )\n\n  return (\n    <Dashboard\n      online={jukebox.online}\n      disabled={disable}\n      onPlay={onPlay}\n      onStop={onStop}\n      onPause={onPause}\n      onNext={onNext}\n      onPrevious={onPrevious}\n      onVolumeChange={onVolumeChange}\n      onDrop={onDrop}\n      onTracklistClear={onTracklistClear}\n      onSearchClick={onSearchClick}\n      tracklist={tracklist}\n      currentTrack={currentTrack}\n      onRemoveTrack={onRemoveTrack}\n      onArtistSearch={onArtistSearch}\n    />\n  )\n}\n\nexport default DragDropContext(HTML5Backend)(DashboardContainer)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport ReactNotification from 'react-notifications-component'\nimport { useGoogleLogin } from 'react-use-googlelogin'\nimport ErrorBoundary from 'components/error-boundary'\nimport GoogleAuthContext from 'contexts/google'\nimport jukeboxMiddleware from 'middleware/jukebox-middleware'\nimport jukeboxApp from 'reducers'\nimport { Container } from 'semantic-ui-react'\nimport DashboardContainer from 'containers/dashboard-container'\nimport 'react-notifications-component/dist/theme.css'\n\nconst store = createStore(jukeboxApp, composeWithDevTools(applyMiddleware(jukeboxMiddleware)))\n\nconst App = () => {\n  const googleAuth = useGoogleLogin({\n    clientId: process.env.REACT_APP_CLIENT_ID,\n    hostedDomain: process.env.GOOGLE_AUTH_DOMAIN\n  })\n\n  return (\n    <Provider store={store}>\n      <ReactNotification />\n      <Container fluid>\n        <GoogleAuthContext.Provider value={googleAuth}>\n          <ErrorBoundary>\n            <DashboardContainer />\n          </ErrorBoundary>\n        </GoogleAuthContext.Provider>\n      </Container>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}