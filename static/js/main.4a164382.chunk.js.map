{"version":3,"sources":["components/current-track/default-artwork.png","utils/spotify/index.js","components/error-boundary/index.js","contexts/google.js","constants/mopidy-api.js","constants/common.js","actions/index.js","search/constants.js","utils/images/index.js","utils/time/index.js","search/actions/index.js","constants/auth-api.js","utils/payload/index.js","utils/notify/index.js","utils/on-message-handler/index.js","utils/state/index.js","containers/jukebox-middleware/index.js","reducers/track/index.js","reducers/tracklist/index.js","reducers/assets/index.js","reducers/timer/index.js","reducers/jukebox/index.js","reducers/settings/index.js","search/reducers/index.js","reducers/index.js","utils/signin-token/index.js","selectors/index.js","components/skip-buttons/index.js","components/controls/index.js","components/url-drop-area/index.js","components/drag-in-track/index.js","components/current-track/index.js","containers/current-track-container/index.js","components/settings/index.js","components/tracklist/added-by/index.js","components/tracklist/index.js","search/components/button/index.js","components/volume-buttons/index.js","components/clear-playlist/index.js","search/components/sidebar/index.js","search/index.js","dashboard/index.js","containers/dashboard-container/index.js","App.js","index.js"],"names":["module","exports","transformUrl","url","uri","replace","match","ErrorBoundary","props","state","hasError","error","info","this","setState","children","React","Component","GoogleAuthContext","createContext","ADD_CURRENT_TRACK","ADD_TRACKS","CONNECT","CONNECTING","CONNECTED","DISCONNECT","DISCONNECTED","DROP_TYPES","NEW_IMAGE","RESOLVE_IMAGE","SEND","STORE_TOKEN","CLEAR_STORE_TOKEN","UPDATE_VOLUME","UPDATE_PLAYBACK_STATE","UPDATE_PROGRESS_TIMER","MOPIDY_CONNECTED","MOPIDY_DISCONNECTED","updateToken","token","type","Types","clearToken","addNewTrack","key","MopidyApi","params","addCurrentTrack","track","addTrackList","list","removeFromTracklist","updateProgressTimer","position","duration","Infinity","wsConnect","wsConnecting","wsConnected","wsDisconnect","wsDisconnected","mopidyConnected","mopidyDisconnected","getCurrentTrack","getTimePosition","getState","getImage","newImage","resolveImage","data","getTrackList","clearTrackList","startPlaying","stopPlaying","pausePlaying","nextPlaying","previousPlaying","getVolume","updateVolume","volume","updatePlaybackState","setVolume","Number","findImageInCache","cache","index","findIndex","asset","ref","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","millisToSeconds","timerToPercentage","timer","percentage","round","isNaN","toggleSearchSidebar","open","Search","Payload","encode","jwt","decode","payload","JSON","parse","encodeToJson","stringify","Notify","success","message","notify","show","warning","store","dispatch","actions","imageUriChooser","composer","album","onMessageHandler","progressTimer","AuthApi","console","log","progress","set","length","jukebox","playbackState","start","stop","playBackChanged","tracklist","forEach","item","name","artist","SearchConst","results","State","loadInitial","action","JukeboxMiddleware","process","socket","next","isImageRequest","packMessage","settings","mopidyStateChange","online","onOpen","_evt","ProgressTimer","callback","fallbackTargetFrameRate","disableRequestAnimationFrame","trackProgressTimer","onClose","onMessage","onSearchResults","Constants","close","io","transports","on","reset","assets","emit","map","initalState","find","a","slice","initalProgressState","remaining","mopidyOnline","Object","assign","searchSideBarOpen","query","limit","offset","total","search","Constant","filter","tracks","items","jukeboxApp","combineReducers","SignInToken","refresh","googleApi","workerTimers","reloadAuthResponse","then","response","id_token","err","warn","clear","id","getAssets","getCurrentTrackImageInCache","createSelector","getTracklistImagesInCache","images","SkipButtons","disabled","onPrevious","onNext","cb","Button","onClick","animated","className","Content","hidden","visible","Icon","previousButton","nextButton","Controls","onPlay","onPause","onStop","active","playButton","pauseButton","stopButton","UrlDropArea","connectDropTarget","title","DropTarget","accepts","drop","monitor","onDrop","connect","dropTarget","DragInTrack","backend","HTML5Backend","albumArt","image","defaultImage","Image","src","CurrentTrack","Card","percent","Header","Meta","year","Description","albumDescription","extra","lookup","spotify","split","color","serviceIcon","Settings","useContext","googleUser","signIn","signOut","avatar","icon","floated","profileObj","rounded","size","imageUrl","Fragment","addedByContent","user","users","List","Item","addedAt","userPicture","dateFormat","fullname","firstTime","picture","AddedBy","currentUser","previousUsers","Popup","wide","content","trigger","imageChooser","isCurrent","onRemoveTrack","hasBeenPlayed","klass","inline","trackImage","undefined","listItems","currentTrack","time","isCurrentTrack","Date","now","addedBy","classnames","as","trackHeading","trackDescription","Tracklist","relaxed","SearchButton","volumeUp","volumeDown","VolumeButtons","onVolumeChange","Group","Or","text","ClearPlaylist","clearButton","Label","horizontal","handleConfirm","ev","onClear","handleCancel","Confirm","cancelButton","confirmButton","onCancel","onConfirm","onSubmit","onQueryChange","onAddTrack","totalPages","onPageChange","inputEl","useRef","Sidebar","Pushable","animation","inverted","vertical","width","direction","onShow","current","focus","Form","Field","required","placeholder","onChange","fluid","Divider","Pagination","defaultActivePage","firstItem","lastItem","pointing","secondary","divided","Pusher","dimmed","SearchContainer","useSelector","useDispatch","searchActions","mopidyActions","onSearch","searchOptions","activePage","options","evt","target","value","_","Dashboard","onTracklistClear","onSearchClick","trackListImages","Dimmer","Dimmable","blurring","Container","Grid","stackable","columns","Column","DragDropContext","tracklistImages","isSignedIn","disable","googleTokenId","refreshTokenTimeoutID","useEffect","Zi","_item","getItem","urls","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","jukeboxMiddleware","App","googleAuth","useGoogleLogin","clientId","hostedDomain","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a164382.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-artwork.6bba9800.png\";","// https://open.spotify.com/track/0c41pMosF5Kqwwegcps8ES\nconst transformUrl = (url) => {\n  const uri = url.replace(/^.*\\/track\\//, 'spotify:track:')\n  return (uri.match(/spotify:track/g) ? uri : null)\n}\n\nmodule.exports = {\n  transformUrl\n}\n","import React from 'react'\n\n// uses code from https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html\nclass ErrorBoundary extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true })\n\n    // You can also log the error to an error reporting service\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`error: ${error}`)\n      console.log(`info: ${info}`)\n    }\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Ouch! I broke a bit.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import React from 'react'\n\nconst GoogleAuthContext = React.createContext()\n\nexport default GoogleAuthContext\n","export default {\n  PLAYBACK_GET_CURRENT_TRACK: 'mopidy::playback.getCurrentTrack',\n  EVENT_TRACK_PLAYBACK_STARTED: 'mopidy::event:trackPlaybackStarted',\n  EVENT_PLAYBACK_STATE_CHANGED: 'mopidy::event:playbackStateChanged',\n  EVENT_PLAYBACK_STATE_RESUMED: 'mopidy::event:trackPlaybackResumed',\n  TRACKLIST_GET_TRACKS: 'mopidy::tracklist.getTracks',\n  TRACKLIST_ADD_TRACK: 'mopidy::tracklist.add',\n  TRACKLIST_REMOVE_TRACK: 'mopidy::tracklist.remove',\n  TRACKLIST_CLEAR: 'mopidy::tracklist.clear',\n  LIBRARY_GET_IMAGES: 'mopidy::library.getImages',\n  PLAYBACK_GET_TIME_POSITION: 'mopidy::playback.getTimePosition',\n  PLAYBACK_GET_PLAYBACK_STATE: 'mopidy::playback.getState',\n  PLAYBACK_PLAY: 'mopidy::playback.play',\n  PLAYBACK_STOP: 'mopidy::playback.stop',\n  PLAYBACK_PAUSE: 'mopidy::playback.pause',\n  PLAYBACK_NEXT: 'mopidy::playback.next',\n  PLAYBACK_BACK: 'mopidy::playback.previous',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  STOPPED: 'stopped',\n  SET_VOLUME: 'mopidy::mixer.setVolume',\n  GET_VOLUME: 'mopidy::mixer.getVolume',\n  EVENT_VOLUME_CHANGED: 'mopidy::event:volumeChanged',\n  VALIDATION_ERROR: 'mopidy::validationError'\n}\n","export default {\n  ADD_CURRENT_TRACK: 'actionAddCurrentTrack',\n  ADD_TRACKS: 'actionAddTracks',\n  CONNECT: 'actionConnect',\n  CONNECTING: 'actionConnecting',\n  CONNECTED: 'actionConnected',\n  DISCONNECT: 'actionDisconnect',\n  DISCONNECTED: 'actionDisconnected',\n  DROP_TYPES: ['__NATIVE_URL__'],\n  NEW_IMAGE: 'actionNewImage',\n  RESOLVE_IMAGE: 'actionResolveImage',\n  SEND: 'actionSend',\n  STORE_TOKEN: 'actionStoreToken',\n  CLEAR_STORE_TOKEN: 'actionClearStoreToken',\n  UPDATE_VOLUME: 'actionUpdateVolume',\n  UPDATE_PLAYBACK_STATE: 'actionPlaybackState',\n  UPDATE_PROGRESS_TIMER: 'actionUpdateProgressTimer',\n  MOPIDY_CONNECTED: 'actionMopidyConnected',\n  MOPIDY_DISCONNECTED: 'actionMopidyDisconnected'\n}\n","import MopidyApi from 'constants/mopidy-api'\nimport Types from 'constants/common'\nimport { transformUrl } from 'utils/spotify'\n\nexport const updateToken = token => {\n  return {\n    type: Types.STORE_TOKEN,\n    token\n  }\n}\n\nexport const clearToken = () => {\n  return {\n    type: Types.CLEAR_STORE_TOKEN\n  }\n}\n\nexport const addNewTrack = url => {\n  let uri = transformUrl(url)\n\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_ADD_TRACK,\n    params: { 'uri': uri }\n  }\n}\n\nexport const addCurrentTrack = track => {\n  return {\n    type: Types.ADD_CURRENT_TRACK,\n    track\n  }\n}\n\nexport const addTrackList = list => {\n  return {\n    type: Types.ADD_TRACKS,\n    list\n  }\n}\n\nexport const removeFromTracklist = uri => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_REMOVE_TRACK,\n    params: { 'uri': [uri] }\n  }\n}\n\nexport const updateProgressTimer = (position, duration) => {\n  if (duration === Infinity) { duration = 0 }\n\n  return {\n    type: Types.UPDATE_PROGRESS_TIMER,\n    position,\n    duration\n  }\n}\n\nexport const wsConnect = () => {\n  return {\n    type: Types.CONNECT\n  }\n}\n\nexport const wsConnecting = () => {\n  return {\n    type: Types.CONNECTING\n  }\n}\n\nexport const wsConnected = () => {\n  return {\n    type: Types.CONNECTED\n  }\n}\n\nexport const wsDisconnect = () => {\n  return {\n    type: Types.DISCONNECT\n  }\n}\n\nexport const wsDisconnected = () => {\n  return {\n    type: Types.DISCONNECTED\n  }\n}\n\nexport const mopidyConnected = () => {\n  return {\n    type: Types.MOPIDY_CONNECTED\n  }\n}\n\nexport const mopidyDisconnected = () => {\n  return {\n    type: Types.MOPIDY_DISCONNECTED\n  }\n}\n\nexport const getCurrentTrack = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_CURRENT_TRACK\n  }\n}\n\nexport const getTimePosition = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_TIME_POSITION\n  }\n}\n\nexport const getState = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_PLAYBACK_STATE\n  }\n}\n\nexport const getImage = (uri) => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.LIBRARY_GET_IMAGES,\n    params: [[uri]],\n    uri: uri\n  }\n}\n\nexport const newImage = (uri) => {\n  return {\n    type: Types.NEW_IMAGE,\n    uri\n  }\n}\n\nexport const resolveImage = (data) => {\n  return {\n    type: Types.RESOLVE_IMAGE,\n    data\n  }\n}\n\nexport const getTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_GET_TRACKS\n  }\n}\n\nexport const clearTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_CLEAR\n  }\n}\n\nexport const startPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PLAY\n  }\n}\n\nexport const stopPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_STOP\n  }\n}\n\nexport const pausePlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PAUSE\n  }\n}\n\nexport const nextPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_NEXT\n  }\n}\n\nexport const previousPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_BACK\n  }\n}\n\nexport const getVolume = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.GET_VOLUME\n  }\n}\n\nexport const updateVolume = (volume) => {\n  return {\n    type: Types.UPDATE_VOLUME,\n    volume\n  }\n}\n\nexport const updatePlaybackState = (state) => {\n  return {\n    type: Types.UPDATE_PLAYBACK_STATE,\n    state\n  }\n}\n\nexport const setVolume = (volume) => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.SET_VOLUME,\n    params: [Number(volume)]\n  }\n}\n","export default {\n  SEARCH: 'actionTrackSearch',\n  SEARCH_GET_TRACKS: 'search::getTracks',\n  STORE_SEARCH_RESULTS: 'actionStoreSearchResults',\n  STORE_SEARCH_QUERY: 'actionStoreSearchQuery',\n  TOGGLE_SEARCH_SIDEBAR: 'actionToggleSearchSidebar',\n  REMOVE_FROM_SEARCH_RESULTS: 'actionRemoveFromSearchResults'\n}\n","export const findImageInCache = (uri, cache) => {\n  const index = cache.findIndex(asset => asset.ref === uri)\n  if (cache[index]) { return cache[index].uri }\n  return null\n}\n","import ProgressTimer from 'media-progress-timer'\n\nexport const millisToMinutesAndSeconds = (millis) => {\n  let minutes = Math.floor(millis / 60000)\n  let seconds = ((millis % 60000) / 1000).toFixed(0)\n  return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n}\n\nexport const millisToSeconds = (millis) => {\n  return millis * 0.001\n}\n\nexport const timerToPercentage = timer => {\n  if (timer.duration === 0) { return 0 }\n  const position = millisToSeconds(timer.position)\n  const duration = millisToSeconds(timer.duration)\n  const percentage = Math.round((position / duration) * 100)\n\n  return isNaN(percentage) ? 0 : percentage\n}\n\nexport const trackProgressTimer = (store, actions) => {\n  return ProgressTimer({\n    callback: (position, duration) => {\n      store.dispatch(actions.updateProgressTimer(position, duration))\n    },\n    fallbackTargetFrameRate: 1,\n    disableRequestAnimationFrame: true\n  })\n}\n","import Search from 'search/constants'\n\nexport const toggleSearchSidebar = (open) => {\n  return {\n    type: Search.TOGGLE_SEARCH_SIDEBAR,\n    open\n  }\n}\n\nexport const storeSearchResults = (results) => {\n  return {\n    type: Search.STORE_SEARCH_RESULTS,\n    results\n  }\n}\n\nexport const storeSearchQuery = (query) => {\n  return {\n    type: Search.STORE_SEARCH_QUERY,\n    query\n  }\n}\n\nexport const search = (query, options) => {\n  return {\n    type: Search.SEARCH,\n    key: Search.SEARCH_GET_TRACKS,\n    params: { query, options }\n  }\n}\n\nexport const removeFromSearchResults = (uri) => {\n  return {\n    type: Search.REMOVE_FROM_SEARCH_RESULTS,\n    uri\n  }\n}\n","export default {\n  AUTHENTICATION_TOKEN_INVALID: 'auth::authenticationTokenInvalid'\n}\n","const Payload = {\n  encode: (jwt, key, data) => {\n    return {\n      jwt,\n      key,\n      data\n    }\n  },\n\n  decode: payload => {\n    return JSON.parse(payload)\n  },\n\n  encodeToJson: (jwt, key, data) => {\n    return JSON.stringify(Payload.encode(jwt, key, data))\n  }\n}\n\nexport default Payload\n","import { notify } from 'react-notify-toast'\n\nconst Notify = {\n  success: (message) => notify.show(message, 'success', 3000, {}),\n  warning: (message) => notify.show(message, 'warning', 3000, {})\n}\n\nexport default Notify\n","import * as actions from 'actions'\nimport * as searchActions from 'search/actions'\nimport AuthApi from 'constants/auth-api'\nimport MopidyApi from 'constants/mopidy-api'\nimport SearchConst from 'search/constants'\nimport Payload from 'utils/payload'\nimport notify from 'utils/notify'\n\nconst updatePlaybackState = (store, state) => {\n  store.dispatch(actions.updatePlaybackState(state))\n}\n\nconst playBackChanged = (store, state, progress) => {\n  switch (state) {\n    case MopidyApi.PAUSED:\n    case MopidyApi.STOPPED:\n      updatePlaybackState(store, state)\n      progress.stop()\n      notify.success('Jukebox Halted')\n      break\n    case MopidyApi.PLAYING:\n      updatePlaybackState(store, state)\n      progress.start()\n      break\n    default:\n      break\n  }\n}\n\nconst imageUriChooser = (track) => {\n  if (track.composer) return track.composer.uri\n  return track.album.uri\n}\n\nconst addCurrentTrack = (track, store, progress) => {\n  store.dispatch(actions.addCurrentTrack(track))\n  store.dispatch(actions.getImage(imageUriChooser(track)))\n  const progressTimer = progress.set(0, track.length)\n  if (store.getState().jukebox.playbackState === MopidyApi.PLAYING) progressTimer.start()\n}\n\nconst addTrackList = (tracklist, store) => {\n  store.dispatch(actions.addTrackList(tracklist))\n  tracklist.forEach(item => {\n    store.dispatch(actions.getImage(imageUriChooser(item.track)))\n  })\n}\n\nconst onMessageHandler = (store, payload, progressTimer) => {\n  const { key, data } = Payload.decode(payload)\n\n  switch (key) {\n    case AuthApi.AUTHENTICATION_TOKEN_INVALID:\n      console.log(`AUTHENTICATION_TOKEN_INVALID: ${data.error}`)\n      store.dispatch(actions.clearToken())\n      break\n    case MopidyApi.PLAYBACK_GET_CURRENT_TRACK:\n    case MopidyApi.EVENT_TRACK_PLAYBACK_STARTED:\n      if (data && data.track) addCurrentTrack(data.track, store, progressTimer)\n      break\n    case MopidyApi.EVENT_PLAYBACK_STATE_CHANGED:\n    case MopidyApi.PLAYBACK_GET_PLAYBACK_STATE:\n      playBackChanged(store, data, progressTimer)\n      break\n    case MopidyApi.TRACKLIST_GET_TRACKS:\n      addTrackList(data, store)\n      break\n    case MopidyApi.TRACKLIST_ADD_TRACK:\n      const track = data.track\n      notify.success(`Adding: ${track.name} / ${track.album.name} by ${track.artist.name}`)\n      break\n    case MopidyApi.PLAYBACK_NEXT:\n    case MopidyApi.PLAYBACK_BACK:\n      store.dispatch(actions.getCurrentTrack())\n      break\n    case MopidyApi.GET_VOLUME:\n      store.dispatch(actions.updateVolume(data))\n      break\n    case MopidyApi.EVENT_VOLUME_CHANGED:\n      store.dispatch(actions.updateVolume(data))\n      notify.success('Volume Changed')\n      break\n    case MopidyApi.LIBRARY_GET_IMAGES:\n      store.dispatch(actions.resolveImage(data))\n      break\n    case MopidyApi.PLAYBACK_GET_TIME_POSITION:\n      progressTimer.set(data)\n      break\n    case SearchConst.SEARCH_GET_TRACKS:\n      store.dispatch(searchActions.storeSearchResults(data))\n      break\n    case MopidyApi.VALIDATION_ERROR:\n      notify.warning(data)\n      break\n    default:\n      console.log(`Unknown message: ${key} body: ${data}`)\n      break\n  }\n}\n\nexport default onMessageHandler\n","import * as actions from 'actions'\n\nconst State = {\n  loadInitial: (store) => {\n    [\n      'getCurrentTrack',\n      'getTimePosition',\n      'getState',\n      'getTrackList',\n      'getVolume'\n    ].forEach(action => {\n      store.dispatch(actions[action]())\n    })\n  }\n}\n\nexport default State\n","import io from 'socket.io-client'\nimport * as actions from 'actions'\nimport MopidyApi from 'constants/mopidy-api'\nimport Constants from 'constants/common'\nimport SearchConst from 'search/constants'\nimport { findImageInCache } from 'utils/images'\nimport { trackProgressTimer } from 'utils/time'\nimport onMessageHandler from 'utils/on-message-handler'\nimport Payload from 'utils/payload'\nimport State from 'utils/state'\n\nconst JukeboxMiddleware = (() => {\n  let url = `http://${process.env.REACT_APP_WS_URL}:${process.env.REACT_APP_WS_PORT}`\n  let socket = null\n  let progressTimer = null\n\n  return store => next => action => {\n    const isImageRequest = () => action.key === MopidyApi.LIBRARY_GET_IMAGES\n    const imageIsCached = () => findImageInCache(action.uri, store.getState().assets)\n    const preStoreImage = () => store.dispatch(actions.newImage(action.uri))\n    const getJWT = () => store.getState().settings.token\n    const packMessage = () => Payload.encodeToJson(getJWT(store), action.key, action.params)\n\n    const mopidyStateChange = data => {\n      if (JSON.parse(data).online) {\n        store.dispatch(actions.mopidyConnected())\n        return State.loadInitial(store)\n      }\n      store.dispatch(actions.mopidyDisconnected())\n    }\n    const onOpen = _evt => {\n      progressTimer = trackProgressTimer(store, actions)\n      store.dispatch(actions.wsConnected())\n    }\n    const onClose = _evt => store.dispatch(actions.wsDisconnect())\n    const onMessage = data => onMessageHandler(store, data, progressTimer)\n    const onSearchResults = data => onMessageHandler(store, data, progressTimer)\n    const onConnect = () => {\n      if (socket != null) socket.close()\n      socket = io(url, { transports: ['websocket'] })\n      socket.on('search', onSearchResults)\n      socket.on('mopidy', mopidyStateChange)\n      socket.on('message', onMessage)\n      socket.on('connect', onOpen)\n      socket.on('disconnect', onClose)\n\n      store.dispatch(actions.wsConnecting())\n    }\n    const onDisconnect = () => {\n      if (progressTimer) { progressTimer.reset() }\n      store.dispatch(actions.wsDisconnected())\n    }\n\n    switch (action.type) {\n      case Constants.CONNECT:\n        return onConnect()\n      case Constants.DISCONNECT:\n        return onDisconnect()\n      case Constants.SEND:\n        if (isImageRequest() && imageIsCached()) return\n        if (isImageRequest()) preStoreImage()\n\n        return socket.emit('message', packMessage())\n      case SearchConst.SEARCH:\n        return socket.emit('search', packMessage())\n      default:\n        return next(action)\n    }\n  }\n})()\n\nexport default JukeboxMiddleware\n","import Types from 'constants/common'\n\nconst track = (state = null, action) => {\n  switch (action.type) {\n    case Types.ADD_CURRENT_TRACK:\n      return action.track\n    default:\n      return state\n  }\n}\n\nexport default track\n","import Types from 'constants/common'\n\nconst tracklist = (state = [], action) => {\n  switch (action.type) {\n    case Types.ADD_TRACKS:\n      return action.list.map(item => item.track)\n    default:\n      return state\n  }\n}\n\nexport default tracklist\n","import Types from 'constants/common'\n\nconst initalState = []\nconst MAX_IMAGES_IN_CACHE = 200\n\nconst assets = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.NEW_IMAGE:\n      return (state.find(a => action.uri && a.ref === action.uri))\n        ? state\n        : [ ...state, { ref: action.uri } ]\n    case Types.RESOLVE_IMAGE:\n      return state.map(asset =>\n        (action.data[asset.ref] && action.data[asset.ref][0])\n          ? { ...asset, uri: action.data[asset.ref][0].uri }\n          : asset\n      ).slice(0, MAX_IMAGES_IN_CACHE)\n    default:\n      return state\n  }\n}\n\nexport default assets\n","import Types from 'constants/common'\n\nconst initalProgressState = {\n  position: 0,\n  duration: 0,\n  remaining: 0\n}\n\nconst timer = (state = initalProgressState, action) => {\n  switch (action.type) {\n    case Types.UPDATE_PROGRESS_TIMER:\n      return {\n        position: action.position,\n        duration: action.duration,\n        remaining: action.duration - action.position\n      }\n    default:\n      return state\n  }\n}\n\nexport default timer\n","import MopidyApi from 'constants/mopidy-api'\nimport Types from 'constants/common'\n\nconst initalState = {\n  online: false,\n  mopidyOnline: false,\n  volume: 0,\n  playbackState: MopidyApi.STOPPED\n}\n\nconst jukebox = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.CONNECTED:\n      return Object.assign({}, state, {\n        online: true\n      })\n    case Types.DISCONNECTED:\n      return Object.assign({}, state, {\n        online: false\n      })\n    case Types.MOPIDY_CONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: true\n      })\n    case Types.MOPIDY_DISCONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: false\n      })\n    case Types.UPDATE_VOLUME:\n      return Object.assign({}, state, {\n        volume: action.volume\n      })\n    case Types.UPDATE_PLAYBACK_STATE:\n      return Object.assign({}, state, {\n        playbackState: action.state\n      })\n    default:\n      return state\n  }\n}\n\nexport default jukebox\n","import Types from 'constants/common'\n\nconst initalState = {\n  token: null\n}\n\nconst settings = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.STORE_TOKEN:\n      if (action.token === state.token) return state\n      return Object.assign({}, state, {\n        token: action.token\n      })\n    case Types.CLEAR_STORE_TOKEN:\n      return Object.assign({}, state, {\n        token: null\n      })\n    default:\n      return state\n  }\n}\n\nexport default settings\n","import Constant from 'search/constants'\n\nconst initalState = {\n  searchSideBarOpen: false,\n  query: '',\n  limit: 20,\n  offset: 0,\n  total: 0,\n  results: []\n}\n\nconst search = (state = initalState, action) => {\n  switch (action.type) {\n    case Constant.REMOVE_FROM_SEARCH_RESULTS:\n      return {\n        ...state,\n        results: state.results.filter(item => {\n          return item.track.uri !== action.uri\n        })\n      }\n    case Constant.TOGGLE_SEARCH_SIDEBAR:\n      return Object.assign({}, state, {\n        searchSideBarOpen: action.open\n      })\n    case Constant.STORE_SEARCH_QUERY:\n      return Object.assign({}, state, {\n        query: action.query\n      })\n    case Constant.STORE_SEARCH_RESULTS:\n      const results = action.results.tracks\n      return Object.assign({}, state, {\n        limit: results.limit,\n        offset: results.offset,\n        total: results.total > 10000 ? 10000 : results.total,\n        results: results.items\n      })\n    default:\n      return state\n  }\n}\n\nexport default search\n","import { combineReducers } from 'redux'\nimport track from 'reducers/track'\nimport tracklist from 'reducers/tracklist'\nimport assets from 'reducers/assets'\nimport timer from 'reducers/timer'\nimport jukebox from 'reducers/jukebox'\nimport settings from 'reducers/settings'\nimport search from 'search/reducers'\n\nconst jukeboxApp = combineReducers({\n  track,\n  tracklist,\n  assets,\n  timer,\n  jukebox,\n  settings,\n  search\n})\n\nexport default jukeboxApp\n","import * as workerTimers from 'worker-timers'\n\nconst checkForTokenInMilliseconds = 2700000\n\nconst SignInToken = {\n  refresh: (googleApi, success) => {\n    return workerTimers.setTimeout(() => {\n      googleApi.reloadAuthResponse().then(\n        (response) => success(response.id_token),\n        (err) => console.warn('Token un-refreshable: ', err.message))\n    }, checkForTokenInMilliseconds)\n  },\n  clear: (id) => { if (id) workerTimers.clearTimeout(id) }\n}\n\nexport default SignInToken\n","import { createSelector } from 'reselect'\nimport { findImageInCache } from 'utils/images'\n\nconst getCurrentTrack = (state) => state.track\nconst getTrackList = (state) => state.tracklist\nconst getAssets = (state) => state.assets\n\nexport const getCurrentTrackImageInCache = createSelector(\n  [getCurrentTrack, getAssets],\n  (track, cache) => {\n    if (!track) { return null }\n    return findImageInCache(track.album.uri, cache)\n  }\n)\n\nexport const getTracklistImagesInCache = createSelector(\n  [getTrackList, getAssets],\n  (tracklist, cache) => {\n    const images = {}\n    tracklist.forEach(track => {\n      images[track.album.uri] = findImageInCache(track.album.uri, cache)\n    })\n    return images\n  }\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst previousButton = (cb, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    className='jb-previous-button'\n    disabled={disabled}\n  >\n    <Button.Content hidden>Prev</Button.Content>\n    <Button.Content visible>\n      <Icon name='step backward' />\n    </Button.Content>\n  </Button>\n)\n\nconst nextButton = (cb, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    className='jb-next-button'\n    disabled={disabled}\n  >\n    <Button.Content hidden>Next</Button.Content>\n    <Button.Content visible>\n      <Icon name='step forward' />\n    </Button.Content>\n  </Button>\n)\n\nconst SkipButtons = ({ disabled, onPrevious, onNext }) => (\n  <span>\n    {previousButton(onPrevious, disabled)}\n    {nextButton(onNext, disabled)}\n  </span>\n)\n\nSkipButtons.propTypes = {\n  disabled: PropTypes.bool,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default SkipButtons\n","import React from 'react'\nimport SkipButtons from 'components/skip-buttons'\nimport MopidyApi from 'constants/mopidy-api'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst playButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.PLAYING || disabled)}\n    active={(playbackState === MopidyApi.PLAYING)}\n    className='jb-play-button'\n  >\n    <Button.Content hidden>Play</Button.Content>\n    <Button.Content visible>\n      <Icon name='play' />\n    </Button.Content>\n  </Button>\n)\n\nconst pauseButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.PAUSED || playbackState === MopidyApi.STOPPED || disabled)}\n    active={(playbackState === MopidyApi.PAUSED)}\n    className='jb-pause-button'\n  >\n    <Button.Content hidden>Pause</Button.Content>\n    <Button.Content visible>\n      <Icon name='pause' />\n    </Button.Content>\n  </Button>\n)\n\nconst stopButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.STOPPED || disabled)}\n    active={(playbackState === MopidyApi.STOPPED)}\n    className='jb-stop-button'\n  >\n    <Button.Content hidden>Stop</Button.Content>\n    <Button.Content visible>\n      <Icon name='stop' />\n    </Button.Content>\n  </Button>\n)\n\nconst Controls = (props) => {\n  const { disabled, playbackState, onPlay, onPause, onStop, onPrevious, onNext } = props\n  return (\n    <span>\n      <SkipButtons\n        disabled={disabled}\n        onPrevious={onPrevious}\n        onNext={onNext}\n      />\n      {playButton(onPlay, playbackState, disabled)}\n      {pauseButton(onPause, playbackState, disabled)}\n      {stopButton(onStop, playbackState, disabled)}\n    </span>\n  )\n}\n\nControls.propTypes = {\n  disabled: PropTypes.bool,\n  playbackState: PropTypes.string,\n  onPlay: PropTypes.func.isRequired,\n  onPause: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default Controls\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DropTarget } from 'react-dnd'\n\nconst boxTarget = {\n  drop (props, monitor) {\n    if (props.onDrop) {\n      props.onDrop(props, monitor)\n    }\n  }\n}\n\nconst boxHandler = (connect, monitor) => {\n  return {\n    connectDropTarget: connect.dropTarget()\n  }\n}\n\nclass UrlDropArea extends Component {\n  render () {\n    const { connectDropTarget } = this.props\n\n    return connectDropTarget(\n      <div title='Drag in Spotify tracks to add to playlist'>\n        { this.props.children }\n      </div>\n    )\n  }\n}\n\nUrlDropArea.propTypes = {\n  connectDropTarget: PropTypes.func.isRequired,\n  accepts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onDrop: PropTypes.func\n}\n\nexport default DropTarget(props => props.accepts, boxTarget, boxHandler)(UrlDropArea)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DragDropContextProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport Constants from 'constants/common'\nimport UrlDropArea from 'components/url-drop-area'\n\nconst DragInTrack = ({ disabled, onDrop, children }) => {\n  if (disabled) { return children }\n\n  return (\n    <DragDropContextProvider backend={HTML5Backend}>\n      <UrlDropArea accepts={Constants.DROP_TYPES} onDrop={onDrop}>\n        { children }\n      </UrlDropArea>\n    </DragDropContextProvider>\n  )\n}\n\nDragInTrack.propTypes = {\n  disabled: PropTypes.bool,\n  onDrop: PropTypes.func.isRequired\n}\n\nexport default DragInTrack\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Icon, Image } from 'semantic-ui-react'\nimport { Line } from 'rc-progress'\nimport defaultImage from './default-artwork.png'\nimport { millisToMinutesAndSeconds } from 'utils/time'\nimport './index.css'\n\nconst albumDescription = album => {\n  if (!album) return null\n  const year = album.year ? ` (${album.year})` : null\n  return <Card.Description>{album.name}{year}</Card.Description>\n}\n\nconst composerDescription = composer => {\n  if (!composer) return null\n  return <Card.Description>{composer.name}</Card.Description>\n}\n\nconst albumArt = (image) => {\n  if (!image) image = defaultImage\n  return <Image src={image} />\n}\n\nconst serviceIcon = (uri) => {\n  const lookup = {\n    spotify: 'green'\n  }\n  const key = uri.split(':')[0]\n  if (!lookup[key]) return null\n  return <Icon name={key} color={lookup[key]} />\n}\n\nconst noTrack = () => (\n  <Card>\n    { albumArt(null) }\n    <Card.Content>\n      <Card.Header>Nothing playing</Card.Header>\n      <Card.Description>Drag some music here or press play.</Card.Description>\n    </Card.Content>\n  </Card>\n)\n\nconst CurrentTrack = ({ track, image, progress, remaining }) => {\n  if (!track) { return noTrack() }\n\n  return (\n    <Card>\n      { albumArt(image) }\n      <Card.Content>\n        <div className='progress-container'>\n          <span className='remaining-text'>{millisToMinutesAndSeconds(remaining)}</span>\n          <span className='track-length'>{millisToMinutesAndSeconds(track.length)}</span>\n          <Line percent={progress} />\n        </div>\n        <Card.Header>{track.name}</Card.Header>\n        <Card.Meta>{track.artist.name}</Card.Meta>\n        { albumDescription(track.album) }\n        { composerDescription(track.composer) }\n      </Card.Content>\n      <Card.Content extra>\n        {serviceIcon(track.uri)}\n      </Card.Content>\n    </Card>\n  )\n}\n\nCurrentTrack.propTypes = {\n  track: PropTypes.object,\n  image: PropTypes.string,\n  progress: PropTypes.number,\n  remaining: PropTypes.number\n}\n\nexport default CurrentTrack\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { timerToPercentage } from 'utils/time'\nimport { getCurrentTrackImageInCache } from 'selectors'\nimport CurrentTrack from 'components/current-track'\n\nexport const CurrentTrackContainer = ({ track, image, progress, remaining }) => (\n  <CurrentTrack\n    track={track}\n    image={image}\n    progress={progress}\n    remaining={remaining}\n  />\n)\n\nconst mapStateToProps = state => {\n  return {\n    track: state.track,\n    image: getCurrentTrackImageInCache(state),\n    progress: timerToPercentage(state.timer),\n    remaining: state.timer.remaining\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(CurrentTrackContainer)\n","import React, { useContext } from 'react'\nimport { Button, Image } from 'semantic-ui-react'\nimport GoogleAuthContext from 'contexts/google'\nimport './index.css'\n\nexport const Settings = () => {\n  const { googleUser, signIn, signOut } = useContext(GoogleAuthContext)\n\n  let avatar = (\n    <Button\n      icon='power off'\n      floated='right'\n      onClick={() => signIn()}\n      className='jb-settings-toggle'\n      title='Login using Google'\n    />\n  )\n  if (googleUser && googleUser.profileObj) {\n    avatar = (\n      <Image\n        rounded\n        size='mini'\n        floated='right'\n        title={googleUser.profileObj.name}\n        src={googleUser.profileObj.imageUrl}\n        onClick={() => signOut()}\n      />\n    )\n  }\n\n  return (\n    <React.Fragment>{avatar}</React.Fragment>\n  )\n}\n\nexport default Settings\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { List, Popup, Icon, Image } from 'semantic-ui-react'\nimport dateFormat from 'dateformat'\n\nconst firstTime = (user) => {\n  if (!user) return 'First time played.'\n\n  return <strong>Added: {dateFormat(user.addedAt, 'dd mmm yyyy @ h:MM tt')}</strong>\n}\n\nconst addedByContent = (user, users) => {\n  if (users.length) {\n    return (\n      <List>\n        {\n          users.map(user => {\n            return (\n              <List.Item key={user.addedAt}>\n                {userPicture(user)}\n                <List.Content>\n                  <List.Description>\n                    <strong>{dateFormat(user.addedAt, 'dd mmm yyyy @ h:MM tt')}</strong> - {user.fullname}\n                  </List.Description>\n                </List.Content>\n              </List.Item>\n            )\n          })\n        }\n      </List>\n    )\n  }\n\n  return firstTime(user)\n}\n\nconst userPicture = user => {\n  if (user && user.picture) return <Image avatar className='tracklist_avatar_image' src={user.picture} />\n  return <Icon name='spotify' color='green' />\n}\n\nconst AddedBy = ({ users = [] }) => {\n  const currentUser = users[0]\n  const previousUsers = users.slice(0, -1)\n\n  return (\n    <Popup\n      wide\n      content={addedByContent(currentUser, previousUsers)}\n      trigger={userPicture(currentUser)}\n    />\n  )\n}\n\nAddedBy.propTypes = {\n  users: PropTypes.array\n}\n\nexport default AddedBy\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { List, Image } from 'semantic-ui-react'\nimport { millisToMinutesAndSeconds } from 'utils/time'\nimport defaultImage from 'components/current-track/default-artwork.png'\nimport AddedBy from './added-by'\nimport './index.css'\n\nconst isCurrentTrack = (currentTrack, track) => {\n  if (!currentTrack) return false\n  return currentTrack.uri === track.uri\n}\n\nconst trackImage = ({ image, isCurrent, onClick, hasBeenPlayed }) => {\n  let klass, title\n\n  if (isCurrent) klass = 'current-image'\n  if (onClick && !isCurrent) {\n    title = 'Click to remove from playlist'\n    klass = 'remove-image'\n  }\n\n  return (\n    <Image\n      className={klass}\n      size={hasBeenPlayed ? 'tiny' : 'mini'}\n      src={image}\n      title={title}\n      onClick={onClick}\n      inline\n    />\n  )\n}\n\nconst removeTrack = (uri, cb) => {\n  return () => cb(uri)\n}\n\nconst imageChooser = (disabled, track, images, isCurrent, onRemoveTrack, hasBeenPlayed) => {\n  let image\n  if (images && track.album) image = images[track.album.uri]\n  if (images && track.composer) image = images[track.composer.uri]\n  if (!image) image = defaultImage\n\n  return trackImage({\n    image,\n    hasBeenPlayed,\n    isCurrent,\n    onClick: (!disabled && !isCurrent) ? removeTrack(track.uri, onRemoveTrack) : undefined\n  })\n}\n\nconst trackHeading = (track) => (\n  <List.Header as='h4'>{track.name}</List.Header>\n)\n\nconst trackDescription = (track) => (\n  <List.Description>\n    {track.artist.name} <small>({millisToMinutesAndSeconds(track.length)})</small>\n  </List.Description>\n)\n\nconst listItems = (disabled, tracks, images, currentTrack, onRemoveTrack) => {\n  let time\n\n  return tracks.map((track, index) => {\n    const isCurrent = isCurrentTrack(currentTrack, track)\n    if (time) time += track.length\n    if (isCurrent) time = Date.now()\n    const { addedBy } = track\n    return (\n      <List.Item\n        className={classnames({ 'current-track': isCurrent })}\n        key={`${index}-${track.uri}`}\n      >\n        { imageChooser(disabled, track, images, isCurrent, onRemoveTrack, time) }\n        <List.Content\n          className={classnames({ 'track-info': !time })}\n        >\n          {trackHeading(track)}\n          {trackDescription(track)}\n          <AddedBy users={addedBy} />\n        </List.Content>\n      </List.Item>\n    )\n  })\n}\n\nconst Tracklist = ({ disabled, tracks, images, currentTrack, onRemoveTrack }) => {\n  if (!tracks) { return null }\n\n  return (\n    <List relaxed>\n      {listItems(disabled, tracks, images, currentTrack, onRemoveTrack)}\n    </List>\n  )\n}\n\nTracklist.propTypes = {\n  disabled: PropTypes.bool,\n  tracks: PropTypes.array,\n  images: PropTypes.object,\n  currentTrack: PropTypes.object,\n  onRemoveTrack: PropTypes.func.isRequired\n}\n\nexport default Tracklist\n","import React from 'react'\nimport { func, bool } from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst SearchButton = ({ onClick, disabled }) => (\n  <Button\n    animated='vertical'\n    floated='right'\n    onClick={onClick}\n    disabled={disabled}\n  >\n    <Button.Content hidden>Search</Button.Content>\n    <Button.Content visible>\n      <Icon name='search' />\n    </Button.Content>\n  </Button>\n)\n\nSearchButton.propTypes = {\n  onClick: func.isRequired,\n  disabled: bool.isRequired\n}\n\nexport default SearchButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst VOLUME_INC = 1\nconst VOLUME_MAX = 100\nconst VOLUME_MIN = 0\n\nconst volumeUp = (volume, cb) => {\n  volume += VOLUME_INC\n  if (volume <= VOLUME_MAX) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst volumeDown = (volume, cb) => {\n  volume -= VOLUME_INC\n  if (volume >= VOLUME_MIN) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst VolumeButtons = ({ disabled, volume, onVolumeChange }) => (\n  <Button.Group floated='right'>\n    <Button\n      className='jb-volume-down'\n      onClick={volumeDown(volume, onVolumeChange)}\n      disabled={disabled}\n    >\n      <Icon name='volume down' />\n    </Button>\n    <Button.Or text={volume} />\n    <Button\n      className='jb-volume-up'\n      onClick={volumeUp(volume, onVolumeChange)}\n      disabled={disabled}\n    >\n      <Icon name='volume up' />\n    </Button>\n  </Button.Group>\n)\n\nVolumeButtons.propTypes = {\n  disabled: PropTypes.bool,\n  volume: PropTypes.number,\n  onVolumeChange: PropTypes.func.isRequired\n}\n\nexport default VolumeButtons\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Confirm, Label } from 'semantic-ui-react'\n\nclass ClearPlaylist extends Component {\n  state = { open: false }\n\n  clearButton = () => {\n    return (\n      <Label\n        horizontal\n        size='mini'\n        as='a'\n        color='red'\n        onClick={this.show}\n        className='jb-clear-button'\n      >CLEAR</Label>\n    )\n  }\n\n  show = () => {\n    this.setState({ open: true })\n  }\n\n  handleConfirm = (ev) => {\n    this.setState({ open: false })\n    this.props.onClear(ev)\n  }\n\n  handleCancel = () => {\n    this.setState({ open: false })\n  }\n\n  render () {\n    if (this.props.disabled) { return null }\n\n    return (\n      <span>\n        {this.clearButton()}\n        <Confirm\n          content='Are you sure you want to nuke the playlist?'\n          cancelButton='No thanks'\n          confirmButton='Do it!'\n          open={this.state.open}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n        />\n      </span>\n    )\n  }\n}\n\nClearPlaylist.propTypes = {\n  disabled: PropTypes.bool,\n  onClear: PropTypes.func.isRequired\n}\n\nexport default ClearPlaylist\n","import React, { useRef } from 'react'\nimport { func, bool, array, number } from 'prop-types'\nimport { Sidebar, Button, Form, List, Header, Divider, Image, Pagination } from 'semantic-ui-react'\nimport './index.css'\n\nconst Search = (props) => {\n  const {\n    visible, onClose, results, onSubmit,\n    onQueryChange, onAddTrack, totalPages, onPageChange\n  } = props\n  const inputEl = useRef(null)\n\n  const addTrack = (uri) => () => {\n    onAddTrack(uri)\n  }\n\n  const SearchItems = () => (\n    results.map((item) => (\n      <div className='search-list-item' key={item.track.uri} onClick={addTrack(item.track.uri)}>\n        <Image\n          floated='left'\n          src={item.track.image}\n          size='mini'\n          title={`Click to add - ${item.track.name} - ${item.track.artist.name}`}\n          className='search-list-item__image'\n        />\n        <List.Content>\n          <div className='search-list-item__header'>{item.track.name} - {item.track.artist.name}</div>\n          <div className='search-list-item__content'>{item.track.album.name}</div>\n        </List.Content>\n      </div>\n    ))\n  )\n\n  return (\n    <Sidebar.Pushable>\n      <Sidebar\n        animation='overlay'\n        icon='labeled'\n        inverted='true'\n        vertical='true'\n        visible={visible}\n        width='very wide'\n        direction='right'\n        className='sidebar-search'\n        onShow={() => inputEl.current.focus()}\n      >\n        <Form inverted onSubmit={onSubmit}>\n          <Form.Field>\n            <label required>SEARCH</label>\n            <input\n              ref={inputEl}\n              placeholder='track, artist or album'\n              onChange={onQueryChange}\n            />\n          </Form.Field>\n          <Button type='submit' fluid>Submit</Button>\n        </Form>\n        <Divider horizontal>\n          <Header as='h4' inverted>Results</Header>\n        </Divider>\n        {(totalPages > 0) &&\n          <Pagination\n            className='search-list-pagination'\n            defaultActivePage={1}\n            firstItem={null}\n            lastItem={null}\n            pointing\n            secondary\n            totalPages={totalPages}\n            onPageChange={onPageChange}\n          />\n        }\n        <List divided relaxed inverted size='tiny'>\n          <SearchItems />\n        </List>\n      </Sidebar>\n      <Sidebar.Pusher\n        dimmed={visible}\n        onClick={visible ? onClose : null}\n      >\n        { props.children }\n      </Sidebar.Pusher>\n    </Sidebar.Pushable >\n  )\n}\n\nSearch.propTypes = {\n  onClose: func.isRequired,\n  onSubmit: func.isRequired,\n  onQueryChange: func.isRequired,\n  onAddTrack: func.isRequired,\n  onPageChange: func.isRequired,\n  visible: bool.isRequired,\n  results: array.isRequired,\n  totalPages: number.isRequired\n}\n\nexport default Search\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as mopidyActions from 'actions'\nimport * as searchActions from 'search/actions'\nimport SearchSidebar from 'search/components/sidebar'\n\nexport const SearchContainer = (props) => {\n  const search = useSelector(state => state.search)\n  const dispatch = useDispatch()\n\n  const onAddTrack = (uri) => {\n    dispatch(searchActions.removeFromSearchResults(uri))\n    dispatch(mopidyActions.addNewTrack(uri))\n  }\n\n  const onSearch = (params) => {\n    const searchOptions = {\n      offset: (params.activePage - 1) * search.limit,\n      limit: search.limit\n    }\n    dispatch(searchActions.search(search.query, searchOptions))\n  }\n\n  return (\n    <SearchSidebar\n      visible={search.searchSideBarOpen}\n      onClose={() => dispatch(searchActions.toggleSearchSidebar(false))}\n      onSubmit={() => onSearch({ activePage: 1 })}\n      onAddTrack={(uri) => onAddTrack(uri)}\n      onQueryChange={(evt) => dispatch(searchActions.storeSearchQuery(evt.target.value))}\n      onPageChange={(_, data) => onSearch(data)}\n      results={search.results}\n      totalPages={Math.round(search.total / search.limit)}\n    >\n      { props.children }\n    </SearchSidebar>\n  )\n}\n\nexport default SearchContainer\n","import React from 'react'\nimport { Dimmer, Divider, Grid, Header, Container } from 'semantic-ui-react'\nimport Controls from 'components/controls'\nimport DragInTrack from 'components/drag-in-track'\nimport CurrentTrackContainer from 'containers/current-track-container'\nimport Settings from 'components/settings'\nimport TrackList from 'components/tracklist'\nimport SearchButton from 'search/components/button'\nimport VolumeButtons from 'components/volume-buttons'\nimport ClearPlaylist from 'components/clear-playlist'\nimport SearchContainer from 'search'\nimport './index.css'\n\nconst Dashboard = (props) => {\n  const {\n    online,\n    disabled,\n    volume,\n    playbackState,\n    onPlay,\n    onStop,\n    onPause,\n    onNext,\n    onPrevious,\n    onVolumeChange,\n    onDrop,\n    onTracklistClear,\n    onSearchClick,\n    trackListImages,\n    tracklist,\n    currentTrack,\n    onRemoveTrack\n  } = props\n\n  return (\n    <Dimmer.Dimmable\n      blurring\n      dimmed={!online}\n    >\n      <SearchContainer>\n        <Container className='header-wrapper' fluid>\n          <Settings />\n          <VolumeButtons\n            disabled={disabled}\n            volume={volume}\n            onVolumeChange={onVolumeChange}\n          />\n          <SearchButton\n            onClick={onSearchClick}\n            disabled={disabled}\n          />\n          <Controls\n            disabled={disabled}\n            playbackState={playbackState}\n            onPlay={onPlay}\n            onStop={onStop}\n            onPause={onPause}\n            onNext={onNext}\n            onPrevious={onPrevious}\n          />\n        </Container>\n        <Divider />\n        <Container className='body-wrapper' fluid>\n          <Grid stackable columns={2} className='dashboard-grid'>\n            <Grid.Column width={4}>\n              <DragInTrack\n                disabled={disabled}\n                onDrop={onDrop}\n              >\n                <Header size='small'>Current Track</Header>\n                <CurrentTrackContainer />\n              </DragInTrack>\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <Header size='small'>\n                Playlist <ClearPlaylist\n                  disabled={disabled}\n                  onClear={onTracklistClear}\n                />\n              </Header>\n              <TrackList\n                disabled={disabled}\n                images={trackListImages}\n                tracks={tracklist}\n                currentTrack={currentTrack}\n                onRemoveTrack={onRemoveTrack}\n              />\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </SearchContainer>\n    </Dimmer.Dimmable>\n  )\n}\n\nexport default Dashboard\n","import React, { useEffect, useContext, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DragDropContext } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport SignInToken from 'utils/signin-token'\nimport GoogleAuthContext from 'contexts/google'\nimport * as actions from 'actions'\nimport * as searchActions from 'search/actions'\nimport { getTracklistImagesInCache } from 'selectors'\nimport Dashboard from 'dashboard'\n\nexport const DashboardContainer = () => {\n  const jukebox = useSelector(state => state.jukebox)\n  const tracklist = useSelector(state => state.tracklist)\n  const currentTrack = useSelector(state => state.track)\n  const tracklistImages = useSelector(state => getTracklistImagesInCache(state))\n  const dispatch = useDispatch()\n  const { isSignedIn, googleUser } = useContext(GoogleAuthContext)\n  const disable = !(isSignedIn && jukebox.mopidyOnline)\n  const googleTokenId = useRef()\n  const refreshTokenTimeoutID = useRef()\n  const hasTokenChanged = (token) => token !== googleTokenId.current\n\n  useEffect(() => {\n    dispatch(actions.wsConnect())\n\n    /* istanbul ignore next */\n    return () => {\n      dispatch(actions.wsDisconnect())\n    }\n  }, [dispatch])\n\n  if (isSignedIn && hasTokenChanged(googleUser.Zi.id_token)) {\n    googleTokenId.current = googleUser.Zi.id_token\n    refreshTokenTimeoutID.current = SignInToken.refresh(googleUser, (token) => {\n      dispatch(actions.updateToken(token))\n    })\n    dispatch(actions.updateToken(googleTokenId.current))\n  }\n\n  if (!isSignedIn) {\n    googleTokenId.current = undefined\n    SignInToken.clear(refreshTokenTimeoutID.current)\n    dispatch(actions.clearToken())\n  }\n\n  return (\n    <Dashboard\n      online={jukebox.online}\n      disabled={disable}\n      volume={jukebox.volume}\n      playbackState={jukebox.playbackState}\n      onPlay={() => dispatch(actions.startPlaying())}\n      onStop={() => dispatch(actions.stopPlaying())}\n      onPause={() => dispatch(actions.pausePlaying())}\n      onNext={() => dispatch(actions.nextPlaying())}\n      onPrevious={() => dispatch(actions.previousPlaying())}\n      onVolumeChange={(evt) => dispatch(actions.setVolume(evt))}\n      onDrop={\n        /* istanbul ignore next */\n        (_item, monitor) => {\n          if (monitor) {\n            dispatch(actions.addNewTrack(monitor.getItem().urls[0]))\n          }\n        }\n      }\n      onTracklistClear={() => dispatch(actions.clearTrackList())}\n      onSearchClick={() => dispatch(searchActions.toggleSearchSidebar(true))}\n      trackListImages={tracklistImages}\n      tracklist={tracklist}\n      currentTrack={currentTrack}\n      onRemoveTrack={\n        /* istanbul ignore next */\n        (evt) => dispatch(actions.removeFromTracklist(evt))\n      }\n    />\n  )\n}\n\nexport default DragDropContext(HTML5Backend)(DashboardContainer)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport Notifications from 'react-notify-toast'\nimport { useGoogleLogin } from 'react-use-googlelogin'\nimport ErrorBoundary from 'components/error-boundary'\nimport GoogleAuthContext from 'contexts/google'\nimport jukeboxMiddleware from 'containers/jukebox-middleware'\nimport jukeboxApp from 'reducers'\nimport { Container } from 'semantic-ui-react'\nimport DashboardContainer from 'containers/dashboard-container'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(jukeboxApp, composeEnhancers(applyMiddleware(jukeboxMiddleware)))\n\nconst App = () => {\n  const googleAuth = useGoogleLogin({\n    clientId: process.env.REACT_APP_CLIENT_ID,\n    hostedDomain: 'kyanmedia.com'\n  })\n\n  return (\n    <Provider store={store}>\n      <Container fluid>\n        <GoogleAuthContext.Provider value={googleAuth}>\n          <ErrorBoundary>\n            <Notifications />\n            <DashboardContainer />\n          </ErrorBoundary>\n        </GoogleAuthContext.Provider>\n      </Container>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}