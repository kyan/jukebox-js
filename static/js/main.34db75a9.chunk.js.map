{"version":3,"sources":["components/current-track/default-artwork.png","utils/spotify/index.js","components/error-boundary/index.js","contexts/google.js","constants/mopidy-api.js","constants/index.js","utils/notify/index.js","actions/index.js","utils/images/index.js","utils/time/index.js","constants/auth-api.js","utils/payload/index.js","utils/on-message-handler/index.js","utils/state/index.js","containers/jukebox-middleware/index.js","reducers/track/index.js","reducers/tracklist/index.js","reducers/assets/index.js","reducers/timer/index.js","reducers/jukebox/index.js","reducers/settings/index.js","reducers/index.js","components/volume-buttons/index.js","components/clear-playlist/index.js","selectors/index.js","components/current-track/index.js","containers/current-track-container/index.js","components/settings/index.js","components/tracklist/index.js","components/skip-buttons/index.js","components/controls/index.js","components/url-drop-area/index.js","components/drag-in-track/index.js","containers/dashboard/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","transformUrl","url","uri","replace","match","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","react_default","a","createElement","children","React","Component","GoogleAuthContext","createContext","mopidy_api","constants","ADD_CURRENT_TRACK","ADD_TRACKS","CONNECT","CONNECTING","CONNECTED","DISCONNECT","DISCONNECTED","DROP_TYPES","NEW_IMAGE","RESOLVE_IMAGE","SEND","STORE_TOKEN","CLEAR_STORE_TOKEN","UPDATE_VOLUME","UPDATE_PLAYBACK_STATE","UPDATE_PROGRESS_TIMER","Notify","message","notify","show","updateToken","token","type","Types","clearToken","addNewTrack","key","MopidyApi","params","addCurrentTrack","track","addTrackList","list","removeFromTracklist","updateProgressTimer","position","duration","Infinity","wsConnect","wsConnecting","wsConnected","wsDisconnect","wsDisconnected","getCurrentTrack","getTimePosition","getState","getImage","newImage","resolveImage","data","getTrackList","clearTrackList","startPlaying","pausePlaying","nextPlaying","previousPlaying","getVolume","updateVolume","volume","updatePlaybackState","setVolume","Number","findImageInCache","cache","index","findIndex","asset","ref","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","millisToSeconds","timerToPercentage","timer","round","auth_api","Payload","encode","jwt","decode","payload","JSON","parse","encodeToJson","stringify","store","dispatch","actions","imageUriChooser","composer","album","onMessageHandler","progressTimer","_Payload$decode","AuthApi","console","log","concat","progress","set","length","start","stop","playBackChanged","tracklist","forEach","item","State","loadInitial","action","JukeboxMiddleware","process","socket","onOpen","_token","_evt","ProgressTimer","callback","fallbackTargetFrameRate","disableRequestAnimationFrame","trackProgressTimer","onConnect","close","io","transports","on","onMessage","onClose","next","Constants","reset","onDisconnect","assets","emit","settings","getJWT","arguments","undefined","notification","oldT","newT","difference","newList","oldList","n","Set","o","map","t","toConsumableArray","filter","has","tracklistDiff","size","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","value","name","artist","err","return","find","objectSpread","slice","initalProgressState","initalState","online","playbackState","jukebox","assign","jukeboxApp","combineReducers","volumeUp","cb","volumeDown","VolumeButtons","_ref","disabled","onVolumeChange","Button","Group","floated","className","onClick","Icon","Or","text","ClearPlaylist","open","clearButton","Label","horizontal","as","color","handleConfirm","ev","onClear","handleCancel","Confirm","content","cancelButton","confirmButton","onCancel","onConfirm","getAssets","getCurrentTrackImageInCache","createSelector","getTracklistImagesInCache","images","albumArt","image","defaultImage","Image","src","CurrentTrack","Card","Content","rc_progress_es","percent","Header","Meta","year","Description","albumDescription","extra","lookup","spotify","split","serviceIcon","connect","components_current_track","Settings","_useContext","useContext","googleUser","signIn","signOut","avatar","icon","title","profileObj","rounded","imageUrl","Fragment","currentImage","inline","removeTrack","imageChooser","isCurrent","onRemoveTrack","revealImage","listItems","tracks","currentTrack","time","isCurrentTrack","Date","now","List","Item","classnames","current-track","track-info","dateformat","trackStartTime","trackHeading","trackDescription","Tracklist","relaxed","SkipButtons","onPrevious","onNext","animated","hidden","visible","previousButton","nextButton","Controls","onPlay","onPause","skip_buttons","active","playButton","pauseButton","UrlDropArea","connectDropTarget","DropTarget","accepts","drop","monitor","onDrop","dropTarget","DragInTrack","cjs","backend","HTML5Backend","url_drop_area","DragDropContext","useSelector","tracklistImages","useDispatch","isSignedIn","useEffect","tokenId","Dimmer","Dimmable","blurring","dimmed","components_settings","volume_buttons","evt","controls","Divider","Grid","Column","width","drag_in_track","_item","getItem","urls","current_track_container","clear_playlist","src_components_tracklist","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","jukeboxMiddleware","App","googleAuth","useGoogleLogin","clientId","hostedDomain","es","Container","fluid","google","Provider","error_boundary","notify_default","dashboard","ReactDOM","render","src_App","document","getElementById"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+DCMxCH,EAAOC,QAAU,CACfG,aANmB,SAACC,GACpB,IAAMC,EAAMD,EAAIE,QAAQ,eAAgB,kBACxC,OAAQD,EAAIE,MAAM,kBAAoBF,EAAM,sgDCyB/BG,cAxBb,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAAEC,UAAU,GAFPR,iFAKDS,EAAOC,GAExBP,KAAKQ,SAAS,CAAEH,UAAU,qCAU1B,OAAIL,KAAKI,MAAMC,SACNI,EAAAC,EAAAC,cAAA,kCAEFX,KAAKJ,MAAMgB,gBArBMC,IAAMC,WCCnBC,EAFWF,IAAMG,kCCFjBC,EACe,mCADfA,EAEiB,qCAFjBA,EAGiB,qCAHjBA,EAKY,iCALZA,EAMS,8BANTA,EAOQ,wBAPRA,EAQW,2BARXA,EASI,0BATJA,EAUO,4BAVPA,EAWe,mCAXfA,EAYgB,4BAZhBA,EAaE,wBAbFA,EAcG,yBAdHA,EAeE,wBAfFA,EAgBE,4BAhBFA,EAiBJ,UAjBIA,EAkBL,SAlBKA,EAmBJ,UAnBIA,EAoBD,0BApBCA,EAqBD,0BArBCA,EAsBS,8BCtBTC,EAAA,CACbC,kBAAmB,wBACnBC,WAAY,kBACZC,QAAS,gBACTC,WAAY,mBACZC,UAAW,kBACXC,WAAY,mBACZC,aAAc,qBACdC,WAAY,CAAC,kBACbC,UAAW,iBACXC,cAAe,qBACfC,KAAM,aACNC,YAAa,mBACbC,kBAAmB,wBACnBC,cAAe,qBACfC,sBAAuB,sBACvBC,sBAAuB,6BCZVC,EAFA,SAACC,GAAD,OAAaC,SAAOC,KAAKF,EAAS,UAAW,IAAM,cCGrDG,EAAc,SAAAC,GACzB,MAAO,CACLC,KAAMC,EAAMZ,YACZU,UAISG,EAAa,WACxB,MAAO,CACLF,KAAMC,EAAMX,oBAIHa,EAAc,SAAArD,GACzB,IAAIC,EAAMF,uBAAaC,GAEvB,MAAO,CACLkD,KAAMC,EAAMb,KACZgB,IAAKC,EACLC,OAAQ,CAAEvD,IAAOA,KAIRwD,EAAkB,SAAAC,GAC7B,MAAO,CACLR,KAAMC,EAAMvB,kBACZ8B,UAISC,EAAe,SAAAC,GAC1B,MAAO,CACLV,KAAMC,EAAMtB,WACZ+B,SAISC,EAAsB,SAAA5D,GACjC,MAAO,CACLiD,KAAMC,EAAMb,KACZgB,IAAKC,EACLC,OAAQ,CAAEvD,IAAO,CAACA,MAIT6D,EAAsB,SAACC,EAAUC,GAG5C,OAFIA,IAAaC,MAAYD,EAAW,GAEjC,CACLd,KAAMC,EAAMR,sBACZoB,WACAC,aAISE,EAAY,WACvB,MAAO,CACLhB,KAAMC,EAAMrB,UAIHqC,GAAe,WAC1B,MAAO,CACLjB,KAAMC,EAAMpB,aAIHqC,GAAc,WACzB,MAAO,CACLlB,KAAMC,EAAMnB,YAIHqC,GAAe,WAC1B,MAAO,CACLnB,KAAMC,EAAMlB,aAIHqC,GAAiB,WAC5B,MAAO,CACLpB,KAAMC,EAAMjB,eAIHqC,GAAkB,WAC7B,MAAO,CACLrB,KAAMC,EAAMb,KACZgB,IAAKC,IAIIiB,GAAkB,WAC7B,MAAO,CACLtB,KAAMC,EAAMb,KACZgB,IAAKC,IAIIkB,GAAW,WACtB,MAAO,CACLvB,KAAMC,EAAMb,KACZgB,IAAKC,IAIImB,GAAW,SAACzE,GACvB,MAAO,CACLiD,KAAMC,EAAMb,KACZgB,IAAKC,EACLC,OAAQ,CAAC,CAACvD,IACVA,IAAKA,IAII0E,GAAW,SAAC1E,GACvB,MAAO,CACLiD,KAAMC,EAAMf,UACZnC,QAIS2E,GAAe,SAACC,GAC3B,MAAO,CACL3B,KAAMC,EAAMd,cACZwC,SAISC,GAAe,WAC1B,MAAO,CACL5B,KAAMC,EAAMb,KACZgB,IAAKC,IAIIwB,GAAiB,WAC5B,MAAO,CACL7B,KAAMC,EAAMb,KACZgB,IAAKC,IAIIyB,GAAe,WAG1B,OAFAlC,EAAM,mBAEC,CACLI,KAAMC,EAAMb,KACZgB,IAAKC,IAII0B,GAAe,WAG1B,OAFAnC,EAAM,kBAEC,CACLI,KAAMC,EAAMb,KACZgB,IAAKC,IAII2B,GAAc,WACzB,MAAO,CACLhC,KAAMC,EAAMb,KACZgB,IAAKC,IAII4B,GAAkB,WAC7B,MAAO,CACLjC,KAAMC,EAAMb,KACZgB,IAAKC,IAII6B,GAAY,WACvB,MAAO,CACLlC,KAAMC,EAAMb,KACZgB,IAAKC,IAII8B,GAAe,SAACC,GAC3B,MAAO,CACLpC,KAAMC,EAAMV,cACZ6C,WAISC,GAAsB,SAAC1E,GAClC,MAAO,CACLqC,KAAMC,EAAMT,sBACZ7B,UAIS2E,GAAY,SAACF,GACxB,MAAO,CACLpC,KAAMC,EAAMb,KACZgB,IAAKC,EACLC,OAAQ,CAACiC,OAAOH,MC7MPI,GAAmB,SAACzF,EAAK0F,GACpC,IAAMC,EAAQD,EAAME,UAAU,SAAAC,GAAK,OAAIA,EAAMC,MAAQ9F,IACrD,OAAI0F,EAAMC,GAAiBD,EAAMC,GAAO3F,IACjC,2BCDI+F,GAA4B,SAACC,GACxC,IAAIC,EAAUC,KAAKC,MAAMH,EAAS,KAC9BI,GAAYJ,EAAS,IAAS,KAAMK,QAAQ,GAChD,OAAOJ,EAAU,KAAOG,EAAU,GAAK,IAAM,IAAMA,GAGxCE,GAAkB,SAACN,GAC9B,MAAgB,KAATA,GAGIO,GAAoB,SAAAC,GAC/B,GAAuB,IAAnBA,EAAMzC,SAAkB,OAAO,EACnC,IAAMD,EAAWwC,GAAgBE,EAAM1C,UACjCC,EAAWuC,GAAgBE,EAAMzC,UAEvC,OAAOmC,KAAKO,MAAO3C,EAAWC,EAAY,MCjB7B2C,GACiB,mCCD1BC,GAAU,CACdC,OAAQ,SAACC,EAAKxD,EAAKuB,GACjB,MAAO,CACLiC,MACAxD,MACAuB,SAIJkC,OAAQ,SAAAC,GACN,OAAOC,KAAKC,MAAMF,IAGpBG,aAAc,SAACL,EAAKxD,EAAKuB,GACvB,OAAOoC,KAAKG,UAAUR,GAAQC,OAAOC,EAAKxD,EAAKuB,MAIpC+B,MCbTrB,GAAsB,SAAC8B,EAAOxG,GAClCwG,EAAMC,SAASC,GAA4B1G,KAmBvC2G,GAAkB,SAAC9D,GACvB,OAAIA,EAAM+D,SAAiB/D,EAAM+D,SAASxH,IACnCyD,EAAMgE,MAAMzH,KAyDN0H,GAxCU,SAACN,EAAOL,EAASY,GAAkB,IAAAC,EACpCjB,GAAQG,OAAOC,GAA7B1D,EADkDuE,EAClDvE,IAAKuB,EAD6CgD,EAC7ChD,KAEb,OAAQvB,GACN,KAAKwE,GACHC,QAAQC,IAAR,iCAAAC,OAA6CpD,EAAK9D,QAClDsG,EAAMC,SAASC,KACf,MACF,KAAKhE,EACL,KAAKA,GAvBe,SAACG,EAAO2D,EAAOa,GAChCxE,IACL2D,EAAMC,SAASC,EAAwB7D,IACvCwE,EAASC,IAAI,EAAGzE,EAAM0E,QAAQC,QAC9BhB,EAAMC,SAASC,GAAiBC,GAAgB9D,MAoB5CD,CAAgBoB,EAAKnB,MAAO2D,EAAOO,GACnC,MACF,KAAKrE,EACL,KAAKA,GAhDe,SAAC8D,EAAOxG,EAAOqH,GACrC,OAAQrH,GACN,KAAK0C,EACL,KAAKA,EACHgC,GAAoB8B,EAAOxG,GAC3BqH,EAASI,OACT,MACF,KAAK/E,EACHgC,GAAoB8B,EAAOxG,GAC3BqH,EAASG,SAwCTE,CAAgBlB,EAAOxC,EAAM+C,GAC7B,MACF,KAAKrE,EACH8D,EAAMC,SAASC,MACf,MACF,KAAKhE,GA1BY,SAACiF,EAAWnB,GAC/BA,EAAMC,SAASC,EAAqBiB,IACpCA,EAAUC,QAAQ,SAAAC,GAChBrB,EAAMC,SAASC,GAAiBC,GAAgBkB,EAAKhF,WAwBnDC,CAAakB,EAAMwC,GACnB,MACF,KAAK9D,EAGL,KAAKA,EACH8D,EAAMC,SAASC,GAAqB1C,IACpC,MACF,KAAKtB,EACH8D,EAAMC,SAASC,GAAqB1C,IACpC,MACF,KAAKtB,EACHqE,EAAcO,IAAItD,GAClB,MACF,QACEkD,QAAQC,IAAR,oBAAAC,OAAgC3E,EAAhC,WAAA2E,OAA6CpD,MC/DpC8D,GAdD,CACZC,YAAa,SAACvB,GACZ,CACE,kBACA,kBACA,WACA,eACA,aACAoB,QAAQ,SAAAI,GACRxB,EAAMC,SAASC,EAAQsB,UC8DdC,GA/DY,WACzB,IAAI9I,EAAG,UAAAiI,OAAac,yBAAb,KAAAd,OAA6Cc,QAChDC,EAAS,KACTpB,EAAgB,KAEdqB,EAAS,SAAC5B,EAAO6B,GAAR,OAAmB,SAAAC,GAChCvB,ELI8B,SAACP,EAAOE,GACxC,OAAO6B,KAAc,CACnBC,SAAU,SAACtF,EAAUC,GACnBqD,EAAMC,SAASC,EAAQzD,oBAAoBC,EAAUC,KAEvDsF,wBAAyB,EACzBC,8BAA8B,IKVdC,CAAmBnC,EAAOE,GAC1CF,EAAMC,SAASC,MACfoB,GAAMC,YAAYvB,KAWdoC,EAAY,SAACpC,GACH,MAAV2B,GAAkBA,EAAOU,QAC7BrC,EAAMC,SAASC,OAEfyB,EAASW,IAAG3J,EAAK,CACf4J,WAAY,CAAC,gBAERC,GAAG,UAXM,SAACxC,GAAD,OAAW,SAAAxC,GAC3B8C,GAAiBN,EAAOxC,EAAM+C,IAUTkC,CAAUzC,IAC/B2B,EAAOa,GAAG,UAAWZ,EAAO5B,IAC5B2B,EAAOa,GAAG,aAjBI,SAACxC,GAAD,OAAW,SAAA8B,GACzB9B,EAAMC,SAASC,OAgBSwC,CAAQ1C,KAYlC,OAAO,SAAAA,GAAK,OAAI,SAAA2C,GAAI,OAAI,SAAAnB,GACtB,OAAQA,EAAO3F,MACb,KAAK+G,EAAUnI,QACb2H,EAAUpC,GACV,MACF,KAAK4C,EAAUhI,YAdE,SAACoF,GAChBO,GAAiBA,EAAcsC,QACnC7C,EAAMC,SAASC,MAaX4C,CAAa9C,GACb,MACF,KAAK4C,EAAU3H,KACb,GAAIuG,EAAOvF,MAAQC,EAA8B,CAC/C,IAAKsF,EAAO5I,IAAO,MACnB,GAAIyF,GAAiBmD,EAAO5I,IAAKoH,EAAM5C,WAAW2F,QAAW,MAC7D/C,EAAMC,SAASC,GAAiBsB,EAAO5I,MAGzC+I,EAAOqB,KAAK,UAAWzD,GAAQO,aAnBtB,SAACE,GACd,OAAOA,EAAM5C,WAAW6F,SAASrH,MAkBesH,CAAOlD,GAAQwB,EAAOvF,IAAKuF,EAAOrF,SAC9E,MACF,QACE,OAAOwG,EAAKnB,OA1DO,GCCZnF,GATD,WAA0B,IAAzB7C,EAAyB2J,UAAApC,OAAA,QAAAqC,IAAAD,UAAA,GAAAA,UAAA,GAAjB,KAAM3B,EAAW2B,UAAApC,OAAA,EAAAoC,UAAA,QAAAC,EACtC,OAAQ5B,EAAO3F,MACb,KAAKC,EAAMvB,kBACT,OAAOiH,EAAOnF,MAChB,QACE,OAAO7C,cCEP6J,GAAe,SAACC,EAAMC,GAC1B,GAAoB,IAAhBD,EAAKvC,OAAT,CACA,IAAMyC,EARc,SAACC,EAASC,GAC9B,IAAMC,EAAI,IAAIC,IAAIH,GACZI,EAAI,IAAID,IAAIF,EAAQI,IAAI,SAAAC,GAAC,OAAIA,EAAEnL,OACrC,OAAO,IAAIgL,IAAI1K,OAAA8K,GAAA,EAAA9K,CAAIyK,GAAGM,OAAO,SAAAF,GAAC,OAAKF,EAAEK,IAAIH,EAAEnL,QAKxBuL,CAAcZ,EAAMD,GACvC,GAAwB,IAApBE,EAAWY,KAAf,CAHmC,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAnB,EAAA,IAKnC,QAAAoB,EAAAC,EAAkBjB,EAAlBkB,OAAAC,cAAAN,GAAAG,EAAAC,EAAA9B,QAAAiC,MAAAP,GAAA,EAA8B,KAArBhI,EAAqBmI,EAAAK,MAC5BpJ,EAAM,SAAAmF,OAAUvE,EAAMyI,KAAhB,QAAAlE,OAA2BvE,EAAM0I,OAAOD,QANb,MAAAE,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,OAoBtBpD,GAVG,WAAwB,IAAvB3H,EAAuB2J,UAAApC,OAAA,QAAAqC,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAI3B,EAAW2B,UAAApC,OAAA,EAAAoC,UAAA,QAAAC,EACxC,OAAQ5B,EAAO3F,MACb,KAAKC,EAAMtB,WAET,OADA6I,GAAa7J,EAAOgI,EAAOjF,KAAKuH,IAAI,SAAAzC,GAAI,OAAIA,EAAKhF,SAC1CmF,EAAOjF,KAAKuH,IAAI,SAAAzC,GAAI,OAAIA,EAAKhF,QACtC,QACE,OAAO7C,cCJEuJ,GAjBA,WAAwB,IAAvBvJ,EAAuB2J,UAAApC,OAAA,QAAAqC,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAI3B,EAAW2B,UAAApC,OAAA,EAAAoC,UAAA,QAAAC,EACrC,OAAQ5B,EAAO3F,MACb,KAAKC,EAAMf,UACT,OAAQvB,EAAM0L,KAAK,SAAApL,GAAC,OAAIA,EAAE4E,MAAQ8C,EAAO5I,MACrCY,EADG,GAAAoH,OAAA1H,OAAA8K,GAAA,EAAA9K,CAEEM,GAFF,CAES,CAAEkF,IAAK8C,EAAO5I,OAChC,KAAKkD,EAAMd,cACT,OAAOxB,EAAMsK,IAAI,SAAArF,GAAK,OACnB+C,EAAOhE,KAAKiB,EAAMC,MAAQ8C,EAAOhE,KAAKiB,EAAMC,KAAK,GAAlDxF,OAAAiM,GAAA,EAAAjM,CAAA,GACSuF,EADT,CACgB7F,IAAK4I,EAAOhE,KAAKiB,EAAMC,KAAK,GAAG9F,MAC3C6F,IACJ2G,MAAM,EAbc,KAcxB,QACE,OAAO5L,ICfP6L,GAAsB,CAC1B3I,SAAU,EACVC,SAAU,GAeGyC,GAZD,WAAyC,IAAxC5F,EAAwC2J,UAAApC,OAAA,QAAAqC,IAAAD,UAAA,GAAAA,UAAA,GAAhCkC,GAAqB7D,EAAW2B,UAAApC,OAAA,EAAAoC,UAAA,QAAAC,EACrD,OAAQ5B,EAAO3F,MACb,KAAKC,EAAMR,sBACT,MAAO,CACLoB,SAAU8E,EAAO9E,SACjBC,SAAU6E,EAAO7E,UAErB,QACE,OAAOnD,ICZP8L,GAAc,CAClBC,QAAQ,EACRtH,OAAQ,EACRuH,cAAetJ,GA0BFuJ,GAvBC,WAAiC,IAAhCjM,EAAgC2J,UAAApC,OAAA,QAAAqC,IAAAD,UAAA,GAAAA,UAAA,GAAxBmC,GAAa9D,EAAW2B,UAAApC,OAAA,EAAAoC,UAAA,QAAAC,EAC/C,OAAQ5B,EAAO3F,MACb,KAAKC,EAAMnB,UACT,OAAOzB,OAAOwM,OAAO,GAAIlM,EAAO,CAC9B+L,QAAQ,IAEZ,KAAKzJ,EAAMjB,aACT,OAAO3B,OAAOwM,OAAO,GAAIlM,EAAO,CAC9B+L,QAAQ,IAEZ,KAAKzJ,EAAMV,cACT,OAAOlC,OAAOwM,OAAO,GAAIlM,EAAO,CAC9ByE,OAAQuD,EAAOvD,SAEnB,KAAKnC,EAAMT,sBACT,OAAOnC,OAAOwM,OAAO,GAAIlM,EAAO,CAC9BgM,cAAehE,EAAOhI,QAE1B,QACE,OAAOA,IC1BP8L,GAAc,CAClB1J,MAAO,MAkBMqH,GAfE,WAAiC,IAAhCzJ,EAAgC2J,UAAApC,OAAA,QAAAqC,IAAAD,UAAA,GAAAA,UAAA,GAAxBmC,GAAa9D,EAAW2B,UAAApC,OAAA,EAAAoC,UAAA,QAAAC,EAChD,OAAQ5B,EAAO3F,MACb,KAAKC,EAAMZ,YACT,OAAOhC,OAAOwM,OAAO,GAAIlM,EAAO,CAC9BoC,MAAO4F,EAAO5F,QAElB,KAAKE,EAAMX,kBACT,OAAOjC,OAAOwM,OAAO,GAAIlM,EAAO,CAC9BoC,MAAO,OAEX,QACE,OAAOpC,ICAEmM,GATIC,0BAAgB,CACjCvJ,SACA8E,aACA4B,UACA3D,SACAqG,WACAxC,iHCNI4C,GAAW,SAAC5H,EAAQ6H,GAExB,IADA7H,GALiB,IACA,IAMf,OAAO,WACL6H,EAAG7H,KAKH8H,GAAa,SAAC9H,EAAQ6H,GAE1B,IADA7H,GAdiB,IAEA,EAcf,OAAO,WACL6H,EAAG7H,KA+BM+H,GA1BO,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUjI,EAAbgI,EAAahI,OAAQkI,EAArBF,EAAqBE,eAArB,OACpBtM,EAAAC,EAAAC,cAACqM,GAAA,EAAOC,MAAR,CAAcC,QAAQ,SACpBzM,EAAAC,EAAAC,cAACqM,GAAA,EAAD,CACEG,UAAU,iBACVC,QAAST,GAAW9H,EAAQkI,GAC5BD,SAAUA,GAEVrM,EAAAC,EAAAC,cAAC0M,GAAA,EAAD,CAAM3B,KAAK,iBAEbjL,EAAAC,EAAAC,cAACqM,GAAA,EAAOM,GAAR,CAAWC,KAAM1I,IACjBpE,EAAAC,EAAAC,cAACqM,GAAA,EAAD,CACEG,UAAU,eACVC,QAASX,GAAS5H,EAAQkI,GAC1BD,SAAUA,GAEVrM,EAAAC,EAAAC,cAAC0M,GAAA,EAAD,CAAM3B,KAAK,qCCgBF8B,8MApDbpN,MAAQ,CAAEqN,MAAM,KAEhBC,YAAc,WACZ,OACEjN,EAAAC,EAAAC,cAACgN,GAAA,EAAD,CACEC,YAAU,EACV5C,KAAK,OACL6C,GAAG,IACHC,MAAM,MACNV,QAASvN,EAAKyC,KACd6K,UAAU,mBANZ,YAWJ7K,KAAO,WACLzC,EAAKW,SAAS,CAAEiN,MAAM,OAGxBM,cAAgB,SAACC,GACfnO,EAAKW,SAAS,CAAEiN,MAAM,IACtB5N,EAAKD,MAAMqO,QAAQD,MAGrBE,aAAe,WACbrO,EAAKW,SAAS,CAAEiN,MAAM,6EAItB,OAAIzN,KAAKJ,MAAMkN,SAAmB,KAGhCrM,EAAAC,EAAAC,cAAA,YACGX,KAAK0N,cACNjN,EAAAC,EAAAC,cAACwN,GAAA,EAAD,CACEC,QAAQ,8CACRC,aAAa,YACbC,cAAc,SACdb,KAAMzN,KAAKI,MAAMqN,KACjBc,SAAUvO,KAAKkO,aACfM,UAAWxO,KAAK+N,wBAzCEjN,uBCCtB2N,GAAY,SAACrO,GAAD,OAAWA,EAAMuJ,QAEtB+E,GAA8BC,aACzC,CALsB,SAACvO,GAAD,OAAWA,EAAM6C,OAKrBwL,IAClB,SAACxL,EAAOiC,GACN,OAAKjC,EACEgC,GAAiBhC,EAAMgE,MAAMzH,IAAK0F,GADpB,OAKZ0J,GAA4BD,aACvC,CAZmB,SAACvO,GAAD,OAAWA,EAAM2H,WAYrB0G,IACf,SAAC1G,EAAW7C,GACV,IAAM2J,EAAS,GAIf,OAHA9G,EAAUC,QAAQ,SAAA/E,GAChB4L,EAAO5L,EAAMgE,MAAMzH,KAAOyF,GAAiBhC,EAAMgE,MAAMzH,IAAK0F,KAEvD2J,uDCHLC,WAAW,SAACC,GAEhB,OADKA,IAAOA,EAAQC,MACbvO,EAAAC,EAAAC,cAACsO,GAAA,EAAD,CAAOC,IAAKH,MAmDNI,GA7BM,SAAAtC,GAAgC,IA7BzB7F,EA6BJ/D,EAA6B4J,EAA7B5J,MAAO8L,EAAsBlC,EAAtBkC,MAAOtH,EAAeoF,EAAfpF,SACpC,OAAKxE,EAGHxC,EAAAC,EAAAC,cAACyO,GAAA,EAAD,KACIN,GAASC,GACXtO,EAAAC,EAAAC,cAACyO,GAAA,EAAKC,QAAN,KACE5O,EAAAC,EAAAC,cAAA,OAAKwM,UAAU,sBACb1M,EAAAC,EAAAC,cAAA,QAAMwM,UAAU,iBAAiB1F,EAAjC,MACAhH,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAAMC,QAAS9H,KAEjBhH,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,OAAN,KAAcvM,EAAMyI,MACpBjL,EAAAC,EAAAC,cAACyO,GAAA,EAAKK,KAAN,SAAalK,GAA0BtC,EAAM0E,QAA7C,KAAwD1E,EAAM0I,OAAOD,MA/CpD,SAAAzE,GACvB,IAAKA,EAAO,OAAO,KACnB,IAAMyI,EAAOzI,EAAMyI,KAAN,KAAAlI,OAAkBP,EAAMyI,KAAxB,KAAkC,KAC/C,OAAOjP,EAAAC,EAAAC,cAACyO,GAAA,EAAKO,YAAN,KAAmB1I,EAAMyE,KAAMgE,GA6C9BE,CAAiB3M,EAAMgE,QA1CLD,EA2CE/D,EAAM+D,UAzC3BvG,EAAAC,EAAAC,cAACyO,GAAA,EAAKO,YAAN,KAAmB3I,EAAS0E,MADb,MA4ClBjL,EAAAC,EAAAC,cAACyO,GAAA,EAAKC,QAAN,CAAcQ,OAAK,GAnCL,SAACrQ,GACnB,IAAMsQ,EAAS,CACbC,QAAS,SAELlN,EAAMrD,EAAIwQ,MAAM,KAAK,GAC3B,OAAKF,EAAOjN,GACLpC,EAAAC,EAAAC,cAAC0M,GAAA,EAAD,CAAM3B,KAAM7I,EAAKiL,MAAOgC,EAAOjN,KADb,KA+BlBoN,CAAYhN,EAAMzD,OA1BzBiB,EAAAC,EAAAC,cAACyO,GAAA,EAAD,KACIN,GAAS,MACXrO,EAAAC,EAAAC,cAACyO,GAAA,EAAKC,QAAN,KACE5O,EAAAC,EAAAC,cAACyO,GAAA,EAAKI,OAAN,wBACA/O,EAAAC,EAAAC,cAACyO,GAAA,EAAKO,YAAN,+CChBSO,eARS,SAAA9P,GACtB,MAAO,CACL6C,MAAO7C,EAAM6C,MACb8L,MAAOL,GAA4BtO,GACnCqH,SAAU1B,GAAkB3F,EAAM4F,SAIvBkK,CAhBsB,SAAArD,GAAA,IAAG5J,EAAH4J,EAAG5J,MAAO8L,EAAVlC,EAAUkC,MAAOtH,EAAjBoF,EAAiBpF,SAAjB,OACnChH,EAAAC,EAAAC,cAACwP,GAAD,CACElN,MAAOA,EACP8L,MAAOA,EACPtH,SAAUA,MCwBC2I,GA9BS,WAAM,IAAAC,EACYC,qBAAWvP,GAA3CwP,EADoBF,EACpBE,WAAYC,EADQH,EACRG,OAAQC,EADAJ,EACAI,QAExBC,EACFjQ,EAAAC,EAAAC,cAACqM,GAAA,EAAD,CACE2D,KAAK,YACLzD,QAAQ,QACRE,QAAS,kBAAMoD,KACfrD,UAAU,qBACVyD,MAAM,uBAgBV,OAbIL,GAAcA,EAAWM,aAC3BH,EACEjQ,EAAAC,EAAAC,cAACsO,GAAA,EAAD,CACE6B,SAAO,EACP9F,KAAK,OACLkC,QAAQ,QACR0D,MAAOL,EAAWM,WAAWnF,KAC7BwD,IAAKqB,EAAWM,WAAWE,SAC3B3D,QAAS,kBAAMqD,QAMnBhQ,EAAAC,EAAAC,cAACF,EAAAC,EAAMsQ,SAAP,KAAiBN,sDChBfO,WAAe,SAAClC,GAAD,OACnBtO,EAAAC,EAAAC,cAACsO,GAAA,EAAD,CACE9B,UAAU,gBACVnC,KAAK,OACLkE,IAAKH,EACLmC,QAAM,MAcJC,GAAc,SAAC3R,EAAKkN,GACxB,OAAO,kBAAMA,EAAGlN,KAGZ4R,GAAe,SAACtE,EAAU7J,EAAO4L,EAAQwC,EAAWC,GACxD,IAAIvC,EAIJ,OAHIF,GAAU5L,EAAMgE,QAAO8H,EAAQF,EAAO5L,EAAMgE,MAAMzH,MAClDqP,GAAU5L,EAAM+D,WAAU+H,EAAQF,EAAO5L,EAAM+D,SAASxH,MACvDuP,IAAOA,EAAQC,MAChBlC,EAAmBmE,GAAalC,GAE7BsC,EAAYJ,GAAalC,GArBd,SAACA,EAAOvP,EAAK8R,GAAb,OAClB7Q,EAAAC,EAAAC,cAACsO,GAAA,EAAD,CACE9B,UAAU,eACVnC,KAAK,OACLkE,IAAKH,EACLmC,QAAM,EACN9D,QAAS+D,GAAY3R,EAAK8R,KAeaC,CAAYxC,EAAO9L,EAAMzD,IAAK8R,IAkBnEE,GAAY,SAAC1E,EAAU2E,EAAQ5C,EAAQ6C,EAAcJ,GACzD,IAAIK,EAEJ,OAAOF,EAAO/G,IAAI,SAACzH,EAAOkC,GACxB,IAAMkM,EAzDa,SAACK,EAAczO,GACpC,QAAKyO,GACEA,EAAalS,MAAQyD,EAAMzD,IAuDdoS,CAAeF,EAAczO,GAI/C,OAHI0O,IAAMA,GAAQ1O,EAAM0E,QACpB0J,IAAWM,EAAOE,KAAKC,OAGzBrR,EAAAC,EAAAC,cAACoR,GAAA,EAAKC,KAAN,CACE7E,UAAW8E,KAAW,CAAEC,gBAAiBb,IACzCxO,IAAG,GAAA2E,OAAKrC,EAAL,KAAAqC,OAAcvE,EAAMzD,MAErB4R,GAAatE,EAAU7J,EAAO4L,EAAQwC,EAAWC,GACnD7Q,EAAAC,EAAAC,cAACoR,GAAA,EAAK1C,QAAN,CACElC,UAAW8E,KAAW,CAAEE,cAAeR,KA9B1B,SAACA,EAAMN,GAC5B,OAAKM,GAAQN,EAAkB,KACxB5Q,EAAAC,EAAAC,cAACoR,GAAA,EAAKvC,OAAN,CAAa3B,GAAG,MAAMuE,KAAW,IAAIP,KAAKF,GAAO,SA8B/CU,CAAeV,EAAMN,GA3BX,SAACpO,GAAD,OACnBxC,EAAAC,EAAAC,cAACoR,GAAA,EAAKvC,OAAN,CAAa3B,GAAG,MAAM5K,EAAMyI,MA2BnB4G,CAAarP,GAxBC,SAACA,GAAD,OACvBxC,EAAAC,EAAAC,cAACoR,GAAA,EAAKpC,YAAN,KACG1M,EAAM0I,OAAOD,KADhB,IACsBjL,EAAAC,EAAAC,cAAA,iBAAS4E,GAA0BtC,EAAM0E,QAAzC,MAuBb4K,CAAiBtP,QAyBbuP,GAlBG,SAAA3F,GAA+D,IAA5DC,EAA4DD,EAA5DC,SAAU2E,EAAkD5E,EAAlD4E,OAAQ5C,EAA0ChC,EAA1CgC,OAAQ6C,EAAkC7E,EAAlC6E,aAAcJ,EAAoBzE,EAApByE,cAC3D,OAAKG,EAGHhR,EAAAC,EAAAC,cAACoR,GAAA,EAAD,CAAMU,SAAO,GACVjB,GAAU1E,EAAU2E,EAAQ5C,EAAQ6C,EAAcJ,IAJjC,MC5CToB,GAbK,SAAA7F,GAAA,IAAGC,EAAHD,EAAGC,SAAU6F,EAAb9F,EAAa8F,WAAYC,EAAzB/F,EAAyB+F,OAAzB,OAClBnS,EAAAC,EAAAC,cAAA,YA7BqB,SAAC+L,EAAII,GAAL,OACrBrM,EAAAC,EAAAC,cAACqM,GAAA,EAAD,CACEI,QAASV,EACTmG,SAAS,WACT1F,UAAU,qBACVL,SAAUA,GAEVrM,EAAAC,EAAAC,cAACqM,GAAA,EAAOqC,QAAR,CAAgByD,QAAM,GAAtB,QACArS,EAAAC,EAAAC,cAACqM,GAAA,EAAOqC,QAAR,CAAgB0D,SAAO,GACrBtS,EAAAC,EAAAC,cAAC0M,GAAA,EAAD,CAAM3B,KAAK,oBAqBZsH,CAAeL,EAAY7F,GAhBb,SAACJ,EAAII,GAAL,OACjBrM,EAAAC,EAAAC,cAACqM,GAAA,EAAD,CACEI,QAASV,EACTmG,SAAS,WACT1F,UAAU,iBACVL,SAAUA,GAEVrM,EAAAC,EAAAC,cAACqM,GAAA,EAAOqC,QAAR,CAAgByD,QAAM,GAAtB,QACArS,EAAAC,EAAAC,cAACqM,GAAA,EAAOqC,QAAR,CAAgB0D,SAAO,GACrBtS,EAAAC,EAAAC,cAAC0M,GAAA,EAAD,CAAM3B,KAAK,mBAQZuH,CAAWL,EAAQ9F,KCwBToG,GAvBE,SAAArG,GAAsE,IAAnEC,EAAmED,EAAnEC,SAAUV,EAAyDS,EAAzDT,cAAe+G,EAA0CtG,EAA1CsG,OAAQC,EAAkCvG,EAAlCuG,QAAST,EAAyB9F,EAAzB8F,WAAYC,EAAa/F,EAAb+F,OACxE,OACEnS,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC0S,GAAD,CACEvG,SAAUA,EACV6F,WAAYA,EACZC,OAAQA,IApCG,SAAClG,EAAIN,EAAeU,GAApB,OACjBrM,EAAAC,EAAAC,cAACqM,GAAA,EAAD,CACEI,QAASV,EACTmG,SAAS,WACT/F,SAAWV,IAAkBtJ,GAAqBgK,EAClDwG,OAASlH,IAAkBtJ,EAC3BqK,UAAU,kBAEV1M,EAAAC,EAAAC,cAACqM,GAAA,EAAOqC,QAAR,CAAgByD,QAAM,GAAtB,QACArS,EAAAC,EAAAC,cAACqM,GAAA,EAAOqC,QAAR,CAAgB0D,SAAO,GACrBtS,EAAAC,EAAAC,cAAC0M,GAAA,EAAD,CAAM3B,KAAK,WA4BV6H,CAAWJ,EAAQ/G,EAAeU,GAvBrB,SAACJ,EAAIN,EAAeU,GAApB,OAClBrM,EAAAC,EAAAC,cAACqM,GAAA,EAAD,CACEI,QAASV,EACTmG,SAAS,WACT/F,SAAWV,IAAkBtJ,GAAoBgK,EACjDwG,OAASlH,IAAkBtJ,EAC3BqK,UAAU,mBAEV1M,EAAAC,EAAAC,cAACqM,GAAA,EAAOqC,QAAR,CAAgByD,QAAM,GAAtB,SACArS,EAAAC,EAAAC,cAACqM,GAAA,EAAOqC,QAAR,CAAgB0D,SAAO,GACrBtS,EAAAC,EAAAC,cAAC0M,GAAA,EAAD,CAAM3B,KAAK,YAcV8H,CAAYJ,EAAShH,EAAeU,KC3BrC2G,oLAIF,OAAOC,EAFuB1T,KAAKJ,MAA3B8T,mBAGNjT,EAAAC,EAAAC,cAAA,WACIX,KAAKJ,MAAMgB,kBANKE,aAkBX6S,yBAAW,SAAA/T,GAAK,OAAIA,EAAMgU,SAhCvB,CAChBC,KADgB,SACVjU,EAAOkU,GACPlU,EAAMmU,QACRnU,EAAMmU,OAAOnU,EAAOkU,KAKP,SAAC5D,EAAS4D,GAC3B,MAAO,CACLJ,kBAAmBxD,EAAQ8D,eAsBhBL,CAA0DF,ICZ1DQ,GAjBK,SAAApH,GAAoC,IAAjCC,EAAiCD,EAAjCC,SAAUiH,EAAuBlH,EAAvBkH,OAAQnT,EAAeiM,EAAfjM,SACvC,OAAIkM,EAAmBlM,EAGrBH,EAAAC,EAAAC,cAACuT,GAAA,wBAAD,CAAyBC,QAASC,MAChC3T,EAAAC,EAAAC,cAAC0T,GAAD,CAAaT,QAASpK,EAAU9H,WAAYqS,OAAQA,GAChDnT,KCuFK0T,8BAAgBF,KAAhBE,CApFU,WACvB,IAAMjI,EAAUkI,YAAY,SAAAnU,GAAK,OAAIA,EAAMiM,UACrCtE,EAAYwM,YAAY,SAAAnU,GAAK,OAAIA,EAAM2H,YACvC2J,EAAe6C,YAAY,SAAAnU,GAAK,OAAIA,EAAM6C,QAC1CuR,EAAkBD,YAAY,SAAAnU,GAAK,OAAIwO,GAA0BxO,KACjEyG,EAAW4N,cALYpE,EAMMC,qBAAWvP,GAAtC2T,EANqBrE,EAMrBqE,WAAYnE,EANSF,EAMTE,WAiBpB,OAfAoE,oBAAU,WAIR,OAHA9N,EAASC,KAGF,WACLD,EAASC,QAEV,CAACD,IAGFA,EADE6N,EACO5N,EAAoByJ,EAAWqE,SAE/B9N,KAITrG,EAAAC,EAAAC,cAACkU,GAAA,EAAOC,SAAR,CACEC,UAAQ,EACR5H,UAAU,oBACV6H,QAAS3I,EAAQF,QAEjB1L,EAAAC,EAAAC,cAACsU,GAAD,MACAxU,EAAAC,EAAAC,cAACuU,GAAD,CACEpI,UAAW4H,EACX7P,OAAQwH,EAAQxH,OAChBkI,eAAgB,SAACoI,GAAD,OAAStO,EAASC,GAAkBqO,OAEtD1U,EAAAC,EAAAC,cAACyU,GAAD,CACEtI,UAAW4H,EACXtI,cAAeC,EAAQD,cACvB+G,OAAQ,kBAAMtM,EAASC,OACvBsM,QAAS,kBAAMvM,EAASC,OACxB8L,OAAQ,kBAAM/L,EAASC,OACvB6L,WAAY,kBAAM9L,EAASC,SAE7BrG,EAAAC,EAAAC,cAAC0U,GAAA,EAAD,MACA5U,EAAAC,EAAAC,cAAC2U,GAAA,EAAD,KACE7U,EAAAC,EAAAC,cAAC2U,GAAA,EAAKC,OAAN,CAAaC,MAAO,GAClB/U,EAAAC,EAAAC,cAAC8U,GAAD,CACE3I,UAAW4H,EACXX,OAEE,SAAC2B,EAAO5B,GACFA,GACFjN,EAASC,EAAoBgN,EAAQ6B,UAAUC,KAAK,OAK1DnV,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,CAAQxE,KAAK,SAAb,iBACAvK,EAAAC,EAAAC,cAACkV,GAAD,QAGJpV,EAAAC,EAAAC,cAAC2U,GAAA,EAAKC,OAAN,CAAaC,MAAO,IAClB/U,EAAAC,EAAAC,cAAC6O,GAAA,EAAD,CAAQxE,KAAK,SAAb,YACWvK,EAAAC,EAAAC,cAACmV,GAAD,CACPhJ,UAAW4H,EACXzG,QAAS,kBAAMpH,EAASC,UAG5BrG,EAAAC,EAAAC,cAACoV,GAAD,CACEjJ,UAAW4H,EACX7F,OAAQ2F,EACR/C,OAAQ1J,EACR2J,aAAcA,EACdJ,cAEE,SAAC6D,GAAD,OAAStO,EAASC,EAA4BqO,YC/EtDa,GAAmBC,OAAOC,sCAAwCC,UAClEvP,GAAQwP,sBAAY7J,GAAYyJ,GAAiBK,0BAAgBC,MAsBxDC,GApBH,WACV,IAAMC,EAAaC,yBAAe,CAChCC,SAAUpO,2EACVqO,aAAc,kBAGhB,OACElW,EAAAC,EAAAC,cAACiW,EAAA,EAAD,CAAUhQ,MAAOA,IACfnG,EAAAC,EAAAC,cAACkW,GAAA,EAAD,CAAWC,OAAK,GACdrW,EAAAC,EAAAC,cAACoW,EAAkBC,SAAnB,CAA4BvL,MAAO+K,GACjC/V,EAAAC,EAAAC,cAACsW,EAAD,KACExW,EAAAC,EAAAC,cAACuW,EAAAxW,EAAD,MACAD,EAAAC,EAAAC,cAACwW,GAAD,kBCtBZC,IAASC,OACP5W,EAAAC,EAAAC,cAAC2W,GAAD,MACAC,SAASC,eAAe","file":"static/js/main.34db75a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-artwork.6bba9800.png\";","// https://open.spotify.com/track/0c41pMosF5Kqwwegcps8ES\nconst transformUrl = (url) => {\n  const uri = url.replace(/^.*\\/track\\//, 'spotify:track:')\n  return (uri.match(/spotify:track/g) ? uri : null)\n}\n\nmodule.exports = {\n  transformUrl\n}\n","import React from 'react'\n\n// uses code from https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html\nclass ErrorBoundary extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true })\n\n    // You can also log the error to an error reporting service\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`error: ${error}`)\n      console.log(`info: ${info}`)\n    }\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Ouch! I broke a bit.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import React from 'react'\n\nconst GoogleAuthContext = React.createContext()\n\nexport default GoogleAuthContext\n","export default {\n  PLAYBACK_GET_CURRENT_TRACK: 'mopidy::playback.getCurrentTrack',\n  EVENT_TRACK_PLAYBACK_STARTED: 'mopidy::event:trackPlaybackStarted',\n  EVENT_PLAYBACK_STATE_CHANGED: 'mopidy::event:playbackStateChanged',\n  EVENT_PLAYBACK_STATE_RESUMED: 'mopidy::event:trackPlaybackResumed',\n  EVENT_TRACKLIST_CHANGED: 'mopidy::event:tracklistChanged',\n  TRACKLIST_GET_TRACKS: 'mopidy::tracklist.getTracks',\n  TRACKLIST_ADD_TRACK: 'mopidy::tracklist.add',\n  TRACKLIST_REMOVE_TRACK: 'mopidy::tracklist.remove',\n  TRACKLIST_CLEAR: 'mopidy::tracklist.clear',\n  LIBRARY_GET_IMAGES: 'mopidy::library.getImages',\n  PLAYBACK_GET_TIME_POSITION: 'mopidy::playback.getTimePosition',\n  PLAYBACK_GET_PLAYBACK_STATE: 'mopidy::playback.getState',\n  PLAYBACK_PLAY: 'mopidy::playback.play',\n  PLAYBACK_PAUSE: 'mopidy::playback.pause',\n  PLAYBACK_NEXT: 'mopidy::playback.next',\n  PLAYBACK_BACK: 'mopidy::playback.previous',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  STOPPED: 'stopped',\n  SET_VOLUME: 'mopidy::mixer.setVolume',\n  GET_VOLUME: 'mopidy::mixer.getVolume',\n  EVENT_VOLUME_CHANGED: 'mopidy::event:volumeChanged'\n}\n","export default {\n  ADD_CURRENT_TRACK: 'actionAddCurrentTrack',\n  ADD_TRACKS: 'actionAddTracks',\n  CONNECT: 'actionConnect',\n  CONNECTING: 'actionConnecting',\n  CONNECTED: 'actionConnected',\n  DISCONNECT: 'actionDisconnect',\n  DISCONNECTED: 'actionDisconnected',\n  DROP_TYPES: ['__NATIVE_URL__'],\n  NEW_IMAGE: 'actionNewImage',\n  RESOLVE_IMAGE: 'actionResolveImage',\n  SEND: 'actionSend',\n  STORE_TOKEN: 'actionStoreToken',\n  CLEAR_STORE_TOKEN: 'actionClearStoreToken',\n  UPDATE_VOLUME: 'actionUpdateVolume',\n  UPDATE_PLAYBACK_STATE: 'actionPlaybackState',\n  UPDATE_PROGRESS_TIMER: 'actionUpdateProgressTimer'\n}\n","import { notify } from 'react-notify-toast'\n\nconst Notify = (message) => notify.show(message, 'success', 3000, {})\n\nexport default Notify\n","import MopidyApi from '../constants/mopidy-api'\nimport Types from '../constants'\nimport notify from '../utils/notify'\nimport { transformUrl } from '../utils/spotify'\n\nexport const updateToken = token => {\n  return {\n    type: Types.STORE_TOKEN,\n    token\n  }\n}\n\nexport const clearToken = () => {\n  return {\n    type: Types.CLEAR_STORE_TOKEN\n  }\n}\n\nexport const addNewTrack = url => {\n  let uri = transformUrl(url)\n\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_ADD_TRACK,\n    params: { 'uri': uri }\n  }\n}\n\nexport const addCurrentTrack = track => {\n  return {\n    type: Types.ADD_CURRENT_TRACK,\n    track\n  }\n}\n\nexport const addTrackList = list => {\n  return {\n    type: Types.ADD_TRACKS,\n    list\n  }\n}\n\nexport const removeFromTracklist = uri => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_REMOVE_TRACK,\n    params: { 'uri': [uri] }\n  }\n}\n\nexport const updateProgressTimer = (position, duration) => {\n  if (duration === Infinity) { duration = 0 }\n\n  return {\n    type: Types.UPDATE_PROGRESS_TIMER,\n    position,\n    duration\n  }\n}\n\nexport const wsConnect = () => {\n  return {\n    type: Types.CONNECT\n  }\n}\n\nexport const wsConnecting = () => {\n  return {\n    type: Types.CONNECTING\n  }\n}\n\nexport const wsConnected = () => {\n  return {\n    type: Types.CONNECTED\n  }\n}\n\nexport const wsDisconnect = () => {\n  return {\n    type: Types.DISCONNECT\n  }\n}\n\nexport const wsDisconnected = () => {\n  return {\n    type: Types.DISCONNECTED\n  }\n}\n\nexport const getCurrentTrack = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_CURRENT_TRACK\n  }\n}\n\nexport const getTimePosition = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_TIME_POSITION\n  }\n}\n\nexport const getState = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_PLAYBACK_STATE\n  }\n}\n\nexport const getImage = (uri) => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.LIBRARY_GET_IMAGES,\n    params: [[uri]],\n    uri: uri\n  }\n}\n\nexport const newImage = (uri) => {\n  return {\n    type: Types.NEW_IMAGE,\n    uri\n  }\n}\n\nexport const resolveImage = (data) => {\n  return {\n    type: Types.RESOLVE_IMAGE,\n    data\n  }\n}\n\nexport const getTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_GET_TRACKS\n  }\n}\n\nexport const clearTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_CLEAR\n  }\n}\n\nexport const startPlaying = () => {\n  notify(`Jukebox Playing`)\n\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PLAY\n  }\n}\n\nexport const pausePlaying = () => {\n  notify(`Jukebox Paused`)\n\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PAUSE\n  }\n}\n\nexport const nextPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_NEXT\n  }\n}\n\nexport const previousPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_BACK\n  }\n}\n\nexport const getVolume = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.GET_VOLUME\n  }\n}\n\nexport const updateVolume = (volume) => {\n  return {\n    type: Types.UPDATE_VOLUME,\n    volume\n  }\n}\n\nexport const updatePlaybackState = (state) => {\n  return {\n    type: Types.UPDATE_PLAYBACK_STATE,\n    state\n  }\n}\n\nexport const setVolume = (volume) => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.SET_VOLUME,\n    params: [Number(volume)]\n  }\n}\n","export const findImageInCache = (uri, cache) => {\n  const index = cache.findIndex(asset => asset.ref === uri)\n  if (cache[index]) { return cache[index].uri }\n  return null\n}\n","import ProgressTimer from 'media-progress-timer'\n\nexport const millisToMinutesAndSeconds = (millis) => {\n  var minutes = Math.floor(millis / 60000)\n  var seconds = ((millis % 60000) / 1000).toFixed(0)\n  return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n}\n\nexport const millisToSeconds = (millis) => {\n  return millis * 0.001\n}\n\nexport const timerToPercentage = timer => {\n  if (timer.duration === 0) { return 0 }\n  const position = millisToSeconds(timer.position)\n  const duration = millisToSeconds(timer.duration)\n\n  return Math.round((position / duration) * 100)\n}\n\nexport const trackProgressTimer = (store, actions) => {\n  return ProgressTimer({\n    callback: (position, duration) => {\n      store.dispatch(actions.updateProgressTimer(position, duration))\n    },\n    fallbackTargetFrameRate: 1,\n    disableRequestAnimationFrame: true\n  })\n}\n","export default {\n  AUTHENTICATION_TOKEN_INVALID: 'auth::authenticationTokenInvalid'\n}\n","const Payload = {\n  encode: (jwt, key, data) => {\n    return {\n      jwt,\n      key,\n      data\n    }\n  },\n\n  decode: payload => {\n    return JSON.parse(payload)\n  },\n\n  encodeToJson: (jwt, key, data) => {\n    return JSON.stringify(Payload.encode(jwt, key, data))\n  }\n}\n\nexport default Payload\n","import * as actions from '../../actions'\nimport AuthApi from '../../constants/auth-api'\nimport MopidyApi from '../../constants/mopidy-api'\nimport Payload from '../../utils/payload'\n\nconst updatePlaybackState = (store, state) => {\n  store.dispatch(actions.updatePlaybackState(state))\n}\n\nconst playBackChanged = (store, state, progress) => {\n  switch (state) {\n    case MopidyApi.PAUSED:\n    case MopidyApi.STOPPED:\n      updatePlaybackState(store, state)\n      progress.stop()\n      break\n    case MopidyApi.PLAYING:\n      updatePlaybackState(store, state)\n      progress.start()\n      break\n    default:\n      break\n  }\n}\n\nconst imageUriChooser = (track) => {\n  if (track.composer) return track.composer.uri\n  return track.album.uri\n}\n\nconst addCurrentTrack = (track, store, progress) => {\n  if (!track) return\n  store.dispatch(actions.addCurrentTrack(track))\n  progress.set(0, track.length).start()\n  store.dispatch(actions.getImage(imageUriChooser(track)))\n}\n\nconst addTrackList = (tracklist, store) => {\n  store.dispatch(actions.addTrackList(tracklist))\n  tracklist.forEach(item => {\n    store.dispatch(actions.getImage(imageUriChooser(item.track)))\n  })\n}\n\nconst onMessageHandler = (store, payload, progressTimer) => {\n  const { key, data } = Payload.decode(payload)\n\n  switch (key) {\n    case AuthApi.AUTHENTICATION_TOKEN_INVALID:\n      console.log(`AUTHENTICATION_TOKEN_INVALID: ${data.error}`)\n      store.dispatch(actions.clearToken())\n      break\n    case MopidyApi.PLAYBACK_GET_CURRENT_TRACK:\n    case MopidyApi.EVENT_TRACK_PLAYBACK_STARTED:\n      addCurrentTrack(data.track, store, progressTimer)\n      break\n    case MopidyApi.EVENT_PLAYBACK_STATE_CHANGED:\n    case MopidyApi.PLAYBACK_GET_PLAYBACK_STATE:\n      playBackChanged(store, data, progressTimer)\n      break\n    case MopidyApi.EVENT_TRACKLIST_CHANGED:\n      store.dispatch(actions.getTrackList())\n      break\n    case MopidyApi.TRACKLIST_GET_TRACKS:\n      addTrackList(data, store)\n      break\n    case MopidyApi.GET_VOLUME:\n      store.dispatch(actions.updateVolume(data))\n      break\n    case MopidyApi.EVENT_VOLUME_CHANGED:\n      store.dispatch(actions.updateVolume(data))\n      break\n    case MopidyApi.LIBRARY_GET_IMAGES:\n      store.dispatch(actions.resolveImage(data))\n      break\n    case MopidyApi.PLAYBACK_GET_TIME_POSITION:\n      progressTimer.set(data)\n      break\n    default:\n      console.log(`Unknown message: ${key} body: ${data}`)\n      break\n  }\n}\n\nexport default onMessageHandler\n","import * as actions from '../../actions'\n\nconst State = {\n  loadInitial: (store) => {\n    [\n      'getCurrentTrack',\n      'getTimePosition',\n      'getState',\n      'getTrackList',\n      'getVolume'\n    ].forEach(action => {\n      store.dispatch(actions[action]())\n    })\n  }\n}\n\nexport default State\n","import io from 'socket.io-client'\nimport * as actions from '../../actions'\nimport MopidyApi from '../../constants/mopidy-api'\nimport Constants from '../../constants'\nimport { findImageInCache } from '../../utils/images'\nimport { trackProgressTimer } from '../../utils/time'\nimport onMessageHandler from '../../utils/on-message-handler'\nimport Payload from '../../utils/payload'\nimport State from '../../utils/state'\n\nconst JukeboxMiddleware = (() => {\n  let url = `http://${process.env.REACT_APP_WS_URL}:${process.env.REACT_APP_WS_PORT}`\n  let socket = null\n  let progressTimer = null\n\n  const onOpen = (store, _token) => _evt => {\n    progressTimer = trackProgressTimer(store, actions)\n    store.dispatch(actions.wsConnected())\n    State.loadInitial(store)\n  }\n\n  const onClose = (store) => _evt => {\n    store.dispatch(actions.wsDisconnect())\n  }\n\n  const onMessage = (store) => data => {\n    onMessageHandler(store, data, progressTimer)\n  }\n\n  const onConnect = (store) => {\n    if (socket != null) { socket.close() }\n    store.dispatch(actions.wsConnecting())\n\n    socket = io(url, {\n      transports: ['websocket']\n    })\n    socket.on('message', onMessage(store))\n    socket.on('connect', onOpen(store))\n    socket.on('disconnect', onClose(store))\n  }\n\n  const onDisconnect = (store) => {\n    if (progressTimer) { progressTimer.reset() }\n    store.dispatch(actions.wsDisconnected())\n  }\n\n  const getJWT = (store) => {\n    return store.getState().settings.token\n  }\n\n  return store => next => action => {\n    switch (action.type) {\n      case Constants.CONNECT:\n        onConnect(store)\n        break\n      case Constants.DISCONNECT:\n        onDisconnect(store)\n        break\n      case Constants.SEND:\n        if (action.key === MopidyApi.LIBRARY_GET_IMAGES) {\n          if (!action.uri) { break }\n          if (findImageInCache(action.uri, store.getState().assets)) { break }\n          store.dispatch(actions.newImage(action.uri))\n        }\n\n        socket.emit('message', Payload.encodeToJson(getJWT(store), action.key, action.params))\n        break\n      default:\n        return next(action)\n    }\n  }\n})()\n\nexport default JukeboxMiddleware\n","import Types from '../../constants'\n\nconst track = (state = null, action) => {\n  switch (action.type) {\n    case Types.ADD_CURRENT_TRACK:\n      return action.track\n    default:\n      return state\n  }\n}\n\nexport default track\n","import notify from '../../utils/notify'\nimport Types from '../../constants'\n\nconst tracklistDiff = (newList, oldList) => {\n  const n = new Set(newList)\n  const o = new Set(oldList.map(t => t.uri))\n  return new Set([...n].filter(t => !o.has(t.uri)))\n}\n\nconst notification = (oldT, newT) => {\n  if (oldT.length === 0) return\n  const difference = tracklistDiff(newT, oldT)\n  if (difference.size === 0) return\n\n  for (let track of difference) {\n    notify(`Added ${track.name} by ${track.artist.name}`)\n  }\n}\n\nconst tracklist = (state = [], action) => {\n  switch (action.type) {\n    case Types.ADD_TRACKS:\n      notification(state, action.list.map(item => item.track))\n      return action.list.map(item => item.track)\n    default:\n      return state\n  }\n}\n\nexport default tracklist\n","import Types from '../../constants'\n\nconst MAX_IMAGES_IN_CACHE = 200\n\nconst assets = (state = [], action) => {\n  switch (action.type) {\n    case Types.NEW_IMAGE:\n      return (state.find(a => a.ref === action.uri))\n        ? state\n        : [ ...state, { ref: action.uri } ]\n    case Types.RESOLVE_IMAGE:\n      return state.map(asset =>\n        (action.data[asset.ref] && action.data[asset.ref][1])\n          ? { ...asset, uri: action.data[asset.ref][1].uri }\n          : asset\n      ).slice(0, MAX_IMAGES_IN_CACHE)\n    default:\n      return state\n  }\n}\n\nexport default assets\n","import Types from '../../constants'\n\nconst initalProgressState = {\n  position: 0,\n  duration: 0\n}\n\nconst timer = (state = initalProgressState, action) => {\n  switch (action.type) {\n    case Types.UPDATE_PROGRESS_TIMER:\n      return {\n        position: action.position,\n        duration: action.duration\n      }\n    default:\n      return state\n  }\n}\n\nexport default timer\n","import MopidyApi from '../../constants/mopidy-api'\nimport Types from '../../constants'\n\nconst initalState = {\n  online: false,\n  volume: 0,\n  playbackState: MopidyApi.PAUSED\n}\n\nconst jukebox = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.CONNECTED:\n      return Object.assign({}, state, {\n        online: true\n      })\n    case Types.DISCONNECTED:\n      return Object.assign({}, state, {\n        online: false\n      })\n    case Types.UPDATE_VOLUME:\n      return Object.assign({}, state, {\n        volume: action.volume\n      })\n    case Types.UPDATE_PLAYBACK_STATE:\n      return Object.assign({}, state, {\n        playbackState: action.state\n      })\n    default:\n      return state\n  }\n}\n\nexport default jukebox\n","import Types from '../../constants'\n\nconst initalState = {\n  token: null\n}\n\nconst settings = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.STORE_TOKEN:\n      return Object.assign({}, state, {\n        token: action.token\n      })\n    case Types.CLEAR_STORE_TOKEN:\n      return Object.assign({}, state, {\n        token: null\n      })\n    default:\n      return state\n  }\n}\n\nexport default settings\n","import { combineReducers } from 'redux'\nimport track from './track'\nimport tracklist from './tracklist'\nimport assets from './assets'\nimport timer from './timer'\nimport jukebox from './jukebox'\nimport settings from './settings'\n\nconst jukeboxApp = combineReducers({\n  track,\n  tracklist,\n  assets,\n  timer,\n  jukebox,\n  settings\n})\n\nexport default jukeboxApp\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst VOLUME_INC = 1\nconst VOLUME_MAX = 100\nconst VOLUME_MIN = 0\n\nconst volumeUp = (volume, cb) => {\n  volume += VOLUME_INC\n  if (volume <= VOLUME_MAX) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst volumeDown = (volume, cb) => {\n  volume -= VOLUME_INC\n  if (volume >= VOLUME_MIN) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst VolumeButtons = ({ disabled, volume, onVolumeChange }) => (\n  <Button.Group floated='right'>\n    <Button\n      className='jb-volume-down'\n      onClick={volumeDown(volume, onVolumeChange)}\n      disabled={disabled}\n    >\n      <Icon name='volume down' />\n    </Button>\n    <Button.Or text={volume} />\n    <Button\n      className='jb-volume-up'\n      onClick={volumeUp(volume, onVolumeChange)}\n      disabled={disabled}\n    >\n      <Icon name='volume up' />\n    </Button>\n  </Button.Group>\n)\n\nVolumeButtons.propTypes = {\n  disabled: PropTypes.bool,\n  volume: PropTypes.number,\n  onVolumeChange: PropTypes.func.isRequired\n}\n\nexport default VolumeButtons\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Confirm, Label } from 'semantic-ui-react'\n\nclass ClearPlaylist extends Component {\n  state = { open: false }\n\n  clearButton = () => {\n    return (\n      <Label\n        horizontal\n        size='mini'\n        as='a'\n        color='red'\n        onClick={this.show}\n        className='jb-clear-button'\n      >CLEAR</Label>\n    )\n  }\n\n  show = () => {\n    this.setState({ open: true })\n  }\n\n  handleConfirm = (ev) => {\n    this.setState({ open: false })\n    this.props.onClear(ev)\n  }\n\n  handleCancel = () => {\n    this.setState({ open: false })\n  }\n\n  render () {\n    if (this.props.disabled) { return null }\n\n    return (\n      <span>\n        {this.clearButton()}\n        <Confirm\n          content='Are you sure you want to nuke the playlist?'\n          cancelButton='No thanks'\n          confirmButton='Do it!'\n          open={this.state.open}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n        />\n      </span>\n    )\n  }\n}\n\nClearPlaylist.propTypes = {\n  disabled: PropTypes.bool,\n  onClear: PropTypes.func.isRequired\n}\n\nexport default ClearPlaylist\n","import { createSelector } from 'reselect'\nimport { findImageInCache } from '../utils/images'\n\nconst getCurrentTrack = (state) => state.track\nconst getTrackList = (state) => state.tracklist\nconst getAssets = (state) => state.assets\n\nexport const getCurrentTrackImageInCache = createSelector(\n  [getCurrentTrack, getAssets],\n  (track, cache) => {\n    if (!track) { return null }\n    return findImageInCache(track.album.uri, cache)\n  }\n)\n\nexport const getTracklistImagesInCache = createSelector(\n  [getTrackList, getAssets],\n  (tracklist, cache) => {\n    const images = {}\n    tracklist.forEach(track => {\n      images[track.album.uri] = findImageInCache(track.album.uri, cache)\n    })\n    return images\n  }\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Icon, Image } from 'semantic-ui-react'\nimport { Line } from 'rc-progress'\nimport defaultImage from './default-artwork.png'\nimport { millisToMinutesAndSeconds } from '../../utils/time'\nimport './index.css'\n\nconst albumDescription = album => {\n  if (!album) return null\n  const year = album.year ? ` (${album.year})` : null\n  return <Card.Description>{album.name}{year}</Card.Description>\n}\n\nconst composerDescription = composer => {\n  if (!composer) return null\n  return <Card.Description>{composer.name}</Card.Description>\n}\n\nconst albumArt = (image) => {\n  if (!image) image = defaultImage\n  return <Image src={image} />\n}\n\nconst serviceIcon = (uri) => {\n  const lookup = {\n    spotify: 'green'\n  }\n  const key = uri.split(':')[0]\n  if (!lookup[key]) return null\n  return <Icon name={key} color={lookup[key]} />\n}\n\nconst noTrack = () => (\n  <Card>\n    { albumArt(null) }\n    <Card.Content>\n      <Card.Header>Nothing playing</Card.Header>\n      <Card.Description>Drag some music here or press play.</Card.Description>\n    </Card.Content>\n  </Card>\n)\n\nconst CurrentTrack = ({ track, image, progress }) => {\n  if (!track) { return noTrack() }\n\n  return (\n    <Card>\n      { albumArt(image) }\n      <Card.Content>\n        <div className='progress-container'>\n          <span className='progress-text'>{progress} &#37;</span>\n          <Line percent={progress} />\n        </div>\n        <Card.Header>{track.name}</Card.Header>\n        <Card.Meta>({millisToMinutesAndSeconds(track.length)}) {track.artist.name}</Card.Meta>\n        { albumDescription(track.album) }\n        { composerDescription(track.composer) }\n      </Card.Content>\n      <Card.Content extra>\n        {serviceIcon(track.uri)}\n      </Card.Content>\n    </Card>\n  )\n}\n\nCurrentTrack.propTypes = {\n  track: PropTypes.object,\n  image: PropTypes.string,\n  progress: PropTypes.number\n}\n\nexport default CurrentTrack\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { timerToPercentage } from '../../utils/time'\nimport { getCurrentTrackImageInCache } from '../../selectors'\nimport CurrentTrack from '../../components/current-track'\n\nexport const CurrentTrackContainer = ({ track, image, progress }) => (\n  <CurrentTrack\n    track={track}\n    image={image}\n    progress={progress}\n  />\n)\n\nconst mapStateToProps = state => {\n  return {\n    track: state.track,\n    image: getCurrentTrackImageInCache(state),\n    progress: timerToPercentage(state.timer)\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(CurrentTrackContainer)\n","import React, { useContext } from 'react'\nimport { Button, Image } from 'semantic-ui-react'\nimport GoogleAuthContext from '../../contexts/google'\n\nexport const Settings = () => {\n  const { googleUser, signIn, signOut } = useContext(GoogleAuthContext)\n\n  let avatar = (\n    <Button\n      icon='power off'\n      floated='right'\n      onClick={() => signIn()}\n      className='jb-settings-toggle'\n      title='Login using Google'\n    />\n  )\n  if (googleUser && googleUser.profileObj) {\n    avatar = (\n      <Image\n        rounded\n        size='mini'\n        floated='right'\n        title={googleUser.profileObj.name}\n        src={googleUser.profileObj.imageUrl}\n        onClick={() => signOut()}\n      />\n    )\n  }\n\n  return (\n    <React.Fragment>{avatar}</React.Fragment>\n  )\n}\n\nexport default Settings\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { List, Image } from 'semantic-ui-react'\nimport dateformat from 'dateformat'\nimport { millisToMinutesAndSeconds } from '../../utils/time'\nimport defaultImage from './../current-track/default-artwork.png'\nimport './index.css'\n\nconst isCurrentTrack = (currentTrack, track) => {\n  if (!currentTrack) return false\n  return currentTrack.uri === track.uri\n}\n\nconst currentImage = (image) => (\n  <Image\n    className='current-image'\n    size='tiny'\n    src={image}\n    inline\n  />\n)\n\nconst revealImage = (image, uri, onRemoveTrack) => (\n  <Image\n    className='remove-image'\n    size='mini'\n    src={image}\n    inline\n    onClick={removeTrack(uri, onRemoveTrack)}\n  />\n)\n\nconst removeTrack = (uri, cb) => {\n  return () => cb(uri)\n}\n\nconst imageChooser = (disabled, track, images, isCurrent, onRemoveTrack) => {\n  let image\n  if (images && track.album) image = images[track.album.uri]\n  if (images && track.composer) image = images[track.composer.uri]\n  if (!image) image = defaultImage\n  if (disabled) { return currentImage(image) }\n\n  return isCurrent ? currentImage(image) : revealImage(image, track.uri, onRemoveTrack)\n}\n\nconst trackStartTime = (time, isCurrent) => {\n  if (!time || isCurrent) return null\n  return <List.Header as='h5'>{dateformat(new Date(time), 'h:MM')}</List.Header>\n}\n\nconst trackHeading = (track) => (\n  <List.Header as='h4'>{track.name}</List.Header>\n)\n\nconst trackDescription = (track) => (\n  <List.Description>\n    {track.artist.name} <small>({millisToMinutesAndSeconds(track.length)})</small>\n  </List.Description>\n)\n\nconst listItems = (disabled, tracks, images, currentTrack, onRemoveTrack) => {\n  let time\n\n  return tracks.map((track, index) => {\n    const isCurrent = isCurrentTrack(currentTrack, track)\n    if (time) time += track.length\n    if (isCurrent) time = Date.now()\n\n    return (\n      <List.Item\n        className={classnames({ 'current-track': isCurrent })}\n        key={`${index}-${track.uri}`}\n      >\n        { imageChooser(disabled, track, images, isCurrent, onRemoveTrack) }\n        <List.Content\n          className={classnames({ 'track-info': !time })}\n        >\n          {trackStartTime(time, isCurrent)}\n          {trackHeading(track)}\n          {trackDescription(track)}\n        </List.Content>\n      </List.Item>\n    )\n  })\n}\n\nconst Tracklist = ({ disabled, tracks, images, currentTrack, onRemoveTrack }) => {\n  if (!tracks) { return null }\n\n  return (\n    <List relaxed>\n      {listItems(disabled, tracks, images, currentTrack, onRemoveTrack)}\n    </List>\n  )\n}\n\nTracklist.propTypes = {\n  disabled: PropTypes.bool,\n  tracks: PropTypes.array,\n  images: PropTypes.object,\n  currentTrack: PropTypes.object,\n  onRemoveTrack: PropTypes.func.isRequired\n}\n\nexport default Tracklist\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst previousButton = (cb, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    className='jb-previous-button'\n    disabled={disabled}\n  >\n    <Button.Content hidden>Prev</Button.Content>\n    <Button.Content visible>\n      <Icon name='step backward' />\n    </Button.Content>\n  </Button>\n)\n\nconst nextButton = (cb, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    className='jb-next-button'\n    disabled={disabled}\n  >\n    <Button.Content hidden>Next</Button.Content>\n    <Button.Content visible>\n      <Icon name='step forward' />\n    </Button.Content>\n  </Button>\n)\n\nconst SkipButtons = ({ disabled, onPrevious, onNext }) => (\n  <span>\n    {previousButton(onPrevious, disabled)}\n    {nextButton(onNext, disabled)}\n  </span>\n)\n\nSkipButtons.propTypes = {\n  disabled: PropTypes.bool,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default SkipButtons\n","import React from 'react'\nimport SkipButtons from '../../components/skip-buttons'\nimport MopidyApi from '../../constants/mopidy-api'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst playButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.PLAYING || disabled)}\n    active={(playbackState === MopidyApi.PLAYING)}\n    className='jb-play-button'\n  >\n    <Button.Content hidden>Play</Button.Content>\n    <Button.Content visible>\n      <Icon name='play' />\n    </Button.Content>\n  </Button>\n)\n\nconst pauseButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.PAUSED || disabled)}\n    active={(playbackState === MopidyApi.PAUSED)}\n    className='jb-pause-button'\n  >\n    <Button.Content hidden>Pause</Button.Content>\n    <Button.Content visible>\n      <Icon name='pause' />\n    </Button.Content>\n  </Button>\n)\n\nconst Controls = ({ disabled, playbackState, onPlay, onPause, onPrevious, onNext }) => {\n  return (\n    <span>\n      <SkipButtons\n        disabled={disabled}\n        onPrevious={onPrevious}\n        onNext={onNext}\n      />\n      {playButton(onPlay, playbackState, disabled)}\n      {pauseButton(onPause, playbackState, disabled)}\n    </span>\n  )\n}\n\nControls.propTypes = {\n  disabled: PropTypes.bool,\n  playbackState: PropTypes.string,\n  onPlay: PropTypes.func.isRequired,\n  onPause: PropTypes.func.isRequired,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default Controls\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DropTarget } from 'react-dnd'\n\nconst boxTarget = {\n  drop (props, monitor) {\n    if (props.onDrop) {\n      props.onDrop(props, monitor)\n    }\n  }\n}\n\nconst boxHandler = (connect, monitor) => {\n  return {\n    connectDropTarget: connect.dropTarget()\n  }\n}\n\nclass UrlDropArea extends Component {\n  render () {\n    const { connectDropTarget } = this.props\n\n    return connectDropTarget(\n      <div>\n        { this.props.children }\n      </div>\n    )\n  }\n}\n\nUrlDropArea.propTypes = {\n  connectDropTarget: PropTypes.func.isRequired,\n  accepts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onDrop: PropTypes.func\n}\n\nexport default DropTarget(props => props.accepts, boxTarget, boxHandler)(UrlDropArea)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DragDropContextProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport Constants from '../../constants'\nimport UrlDropArea from '../url-drop-area'\n\nconst DragInTrack = ({ disabled, onDrop, children }) => {\n  if (disabled) { return children }\n\n  return (\n    <DragDropContextProvider backend={HTML5Backend}>\n      <UrlDropArea accepts={Constants.DROP_TYPES} onDrop={onDrop}>\n        { children }\n      </UrlDropArea>\n    </DragDropContextProvider>\n  )\n}\n\nDragInTrack.propTypes = {\n  disabled: PropTypes.bool,\n  onDrop: PropTypes.func.isRequired\n}\n\nexport default DragInTrack\n","import React, { useEffect, useContext } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DragDropContext } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport { Dimmer, Divider, Grid, Header } from 'semantic-ui-react'\nimport GoogleAuthContext from '../../contexts/google'\nimport VolumeButtons from '../../components/volume-buttons'\nimport ClearPlaylist from '../../components/clear-playlist'\nimport * as actions from '../../actions'\nimport CurrentTrackContainer from '../current-track-container'\nimport Settings from '../../components/settings'\nimport TrackList from '../../components/tracklist'\nimport { getTracklistImagesInCache } from '../../selectors'\nimport Controls from '../../components/controls'\nimport DragInTrack from '../../components/drag-in-track'\n\nexport const Dashboard = () => {\n  const jukebox = useSelector(state => state.jukebox)\n  const tracklist = useSelector(state => state.tracklist)\n  const currentTrack = useSelector(state => state.track)\n  const tracklistImages = useSelector(state => getTracklistImagesInCache(state))\n  const dispatch = useDispatch()\n  const { isSignedIn, googleUser } = useContext(GoogleAuthContext)\n\n  useEffect(() => {\n    dispatch(actions.wsConnect())\n\n    /* istanbul ignore next */\n    return () => {\n      dispatch(actions.wsDisconnect())\n    }\n  }, [dispatch])\n\n  if (isSignedIn) {\n    dispatch(actions.updateToken(googleUser.tokenId))\n  } else {\n    dispatch(actions.clearToken())\n  }\n\n  return (\n    <Dimmer.Dimmable\n      blurring\n      className='jukebox-dashboard'\n      dimmed={!jukebox.online}\n    >\n      <Settings />\n      <VolumeButtons\n        disabled={!isSignedIn}\n        volume={jukebox.volume}\n        onVolumeChange={(evt) => dispatch(actions.setVolume(evt))}\n      />\n      <Controls\n        disabled={!isSignedIn}\n        playbackState={jukebox.playbackState}\n        onPlay={() => dispatch(actions.startPlaying())}\n        onPause={() => dispatch(actions.pausePlaying())}\n        onNext={() => dispatch(actions.nextPlaying())}\n        onPrevious={() => dispatch(actions.previousPlaying())}\n      />\n      <Divider />\n      <Grid>\n        <Grid.Column width={6}>\n          <DragInTrack\n            disabled={!isSignedIn}\n            onDrop={\n              /* istanbul ignore next */\n              (_item, monitor) => {\n                if (monitor) {\n                  dispatch(actions.addNewTrack(monitor.getItem().urls[0]))\n                }\n              }\n            }\n          >\n            <Header size='small'>Current Track</Header>\n            <CurrentTrackContainer />\n          </DragInTrack>\n        </Grid.Column>\n        <Grid.Column width={10}>\n          <Header size='small'>\n            Playlist <ClearPlaylist\n              disabled={!isSignedIn}\n              onClear={() => dispatch(actions.clearTrackList())}\n            />\n          </Header>\n          <TrackList\n            disabled={!isSignedIn}\n            images={tracklistImages}\n            tracks={tracklist}\n            currentTrack={currentTrack}\n            onRemoveTrack={\n              /* istanbul ignore next */\n              (evt) => dispatch(actions.removeFromTracklist(evt))\n            }\n          />\n        </Grid.Column>\n      </Grid>\n    </Dimmer.Dimmable>\n  )\n}\n\nexport default DragDropContext(HTML5Backend)(Dashboard)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport Notifications from 'react-notify-toast'\nimport { useGoogleLogin } from 'react-use-googlelogin'\nimport ErrorBoundary from './components/error-boundary'\nimport GoogleAuthContext from './contexts/google'\nimport jukeboxMiddleware from './containers/jukebox-middleware'\nimport jukeboxApp from './reducers'\nimport { Container } from 'semantic-ui-react'\nimport Dashboard from './containers/dashboard'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(jukeboxApp, composeEnhancers(applyMiddleware(jukeboxMiddleware)))\n\nconst App = () => {\n  const googleAuth = useGoogleLogin({\n    clientId: process.env.REACT_APP_CLIENT_ID,\n    hostedDomain: 'kyanmedia.com'\n  })\n\n  return (\n    <Provider store={store}>\n      <Container fluid>\n        <GoogleAuthContext.Provider value={googleAuth}>\n          <ErrorBoundary>\n            <Notifications />\n            <Dashboard />\n          </ErrorBoundary>\n        </GoogleAuthContext.Provider>\n      </Container>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}