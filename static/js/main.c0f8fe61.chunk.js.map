{"version":3,"sources":["components/current-track/default-artwork.png","utils/spotify/index.js","components/error-boundary/index.js","constants/mopidy-api.js","constants/auth-api.js","constants/index.js","utils/notify/index.js","actions/index.js","utils/images/index.js","utils/time/index.js","utils/payload/index.js","utils/state/index.js","utils/on-message-handler/index.js","containers/jukebox-middleware/index.js","reducers/track/index.js","reducers/tracklist/index.js","reducers/assets/index.js","reducers/timer/index.js","reducers/jukebox/index.js","reducers/settings/index.js","reducers/index.js","components/volume-buttons/index.js","components/clear-playlist/index.js","selectors/index.js","components/current-track/index.js","containers/current-track-container/index.js","containers/settings/index.js","components/tracklist/index.js","components/skip-buttons/index.js","components/controls/index.js","components/url-drop-area/index.js","components/drag-in-track/index.js","components/radio-stream/index.js","containers/dashboard/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","transformUrl","url","uri","replace","match","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","react_default","a","createElement","children","React","Component","mopidy_api","auth_api","constants","ADD_CURRENT_TRACK","ADD_TRACKS","CONNECT","CONNECTING","CONNECTED","DISCONNECT","DISCONNECTED","DROP_TYPES","NEW_IMAGE","RESOLVE_IMAGE","SEND","STORE_TOKEN","STORE_USERNAME","STORE_USER","TOGGLE_SETTINGS","UPDATE_VOLUME","UPDATE_PLAYBACK_STATE","UPDATE_PROGRESS_TIMER","UPDATE_RADIO_STREAM_STATE","Notify","message","notify","show","authenticate","username","type","Types","key","AuthAPI","params","updateToken","token","updateUsername","storeUser","user","addNewTrack","MopidyApi","addCurrentTrack","track","addTrackList","list","removeFromTracklist","updateProgressTimer","position","duration","Infinity","wsConnect","wsConnecting","wsConnected","wsDisconnect","wsDisconnected","getCurrentTrack","getTimePosition","getState","getImage","newImage","resolveImage","data","getTrackList","clearTrackList","startPlaying","pausePlaying","nextPlaying","previousPlaying","getVolume","updateVolume","volume","updatePlaybackState","setVolume","Number","toggleStreamingState","toggleSettings","findImageInCache","cache","index","findIndex","asset","ref","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","millisToSeconds","timerToPercentage","timer","round","Payload","encode","jwt","decode","payload","JSON","parse","encodeToJson","stringify","State","loadInitial","store","forEach","action","dispatch","actions","imageUriChooser","composer","album","onMessageHandler","progressTimer","_Payload$decode","AuthApi","console","log","concat","progress","set","length","start","stop","playBackChanged","tracklist","item","JukeboxMiddleware","process","socket","onOpen","_token","_evt","ProgressTimer","callback","fallbackTargetFrameRate","disableRequestAnimationFrame","trackProgressTimer","onConnect","close","io","transports","on","onMessage","onClose","next","Constants","reset","onDisconnect","assets","emit","settings","getJWT","arguments","undefined","notification","oldT","newT","difference","newList","oldList","n","Set","o","map","t","toConsumableArray","filter","has","tracklistDiff","size","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","value","name","artist","err","return","find","objectSpread","slice","initalProgressState","initalState","online","playbackState","radioStreamPlaying","radioStreamEnabled","jukebox","assign","open","email","emailHash","crypto","createHash","update","trim","digest","md5Email","jukeboxApp","combineReducers","volumeUp","cb","volumeDown","VolumeButtons","_ref","disabled","onVolumeChange","Button","Group","floated","className","onClick","Icon","Or","text","ClearPlaylist","clearButton","Label","horizontal","as","color","handleConfirm","ev","onClear","handleCancel","Confirm","content","cancelButton","confirmButton","onCancel","onConfirm","getAssets","getCurrentTrackImageInCache","createSelector","getTracklistImagesInCache","images","albumArt","image","defaultImage","Image","src","CurrentTrack","Card","Content","rc_progress_es","percent","Header","Meta","year","Description","albumDescription","extra","lookup","spotify","split","serviceIcon","connect","components_current_track","toggleModal","handleUserChange","_e","authenticateUser","authActions","defaults","icon","labelPosition","isAuthorized","modal","Modal","closeIcon","dimmer","Form","Input","label","iconPosition","placeholder","onChange","options","typeStr","typeTxt","Progress","_ref2","Fragment","rounded","title","fullname","accountLink","currentImage","inline","removeTrack","imageChooser","isCurrent","onRemoveTrack","revealImage","listItems","tracks","currentTrack","time","isCurrentTrack","Date","now","List","Item","classnames","current-track","track-info","dateformat","trackStartTime","trackHeading","trackDescription","Tracklist","relaxed","SkipButtons","onPrevious","onNext","animated","hidden","visible","previousButton","nextButton","Controls","radioEnabled","radioPlaying","onPlay","onPause","onStreaming","active","loading","radioButton","skip_buttons","playButton","pauseButton","UrlDropArea","connectDropTarget","DropTarget","accepts","drop","monitor","onDrop","dropTarget","DragInTrack","cjs","backend","HTML5Backend","url_drop_area","RadioStream","bundle_default","autoPlay","controls","Dashboard","_Component","handleURLDrop","_item","fireDispatch","getItem","urls","radioStream","radio_stream","inherits","createClass","_this2","evt","Dimmer","Dimmable","blurring","dimmed","containers_settings","volume_buttons","Divider","Grid","Column","width","drag_in_track","current_track_container","clear_playlist","src_components_tracklist","tracklistImages","DragDropContext","persistConfig","storage","whitelist","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedReducer","persistReducer","createStore","applyMiddleware","jukeboxMiddleware","persistor","persistStore","App","es","integration_react","Container","fluid","error_boundary","notify_default","dashboard","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c0f8fe61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-artwork.6bba9800.png\";","// https://open.spotify.com/track/0c41pMosF5Kqwwegcps8ES\nconst transformUrl = (url) => {\n  const uri = url.replace(/^.*\\/track\\//, 'spotify:track:')\n  return (uri.match(/spotify:track/g) ? uri : null)\n}\n\nmodule.exports = {\n  transformUrl\n}\n","import React from 'react'\n\n// uses code from https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html\nclass ErrorBoundary extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true })\n\n    // You can also log the error to an error reporting service\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`error: ${error}`)\n      console.log(`info: ${info}`)\n    }\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Ouch! I broke a bit.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","export default {\n  PLAYBACK_GET_CURRENT_TRACK: 'mopidy::playback.getCurrentTrack',\n  EVENT_TRACK_PLAYBACK_STARTED: 'mopidy::event:trackPlaybackStarted',\n  EVENT_PLAYBACK_STATE_CHANGED: 'mopidy::event:playbackStateChanged',\n  EVENT_PLAYBACK_STATE_RESUMED: 'mopidy::event:trackPlaybackResumed',\n  EVENT_TRACKLIST_CHANGED: 'mopidy::event:tracklistChanged',\n  TRACKLIST_GET_TRACKS: 'mopidy::tracklist.getTracks',\n  TRACKLIST_ADD_TRACK: 'mopidy::tracklist.add',\n  TRACKLIST_REMOVE_TRACK: 'mopidy::tracklist.remove',\n  TRACKLIST_CLEAR: 'mopidy::tracklist.clear',\n  LIBRARY_GET_IMAGES: 'mopidy::library.getImages',\n  PLAYBACK_GET_TIME_POSITION: 'mopidy::playback.getTimePosition',\n  PLAYBACK_GET_PLAYBACK_STATE: 'mopidy::playback.getState',\n  PLAYBACK_PLAY: 'mopidy::playback.play',\n  PLAYBACK_PAUSE: 'mopidy::playback.pause',\n  PLAYBACK_NEXT: 'mopidy::playback.next',\n  PLAYBACK_BACK: 'mopidy::playback.previous',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  STOPPED: 'stopped',\n  SET_VOLUME: 'mopidy::mixer.setVolume',\n  GET_VOLUME: 'mopidy::mixer.getVolume',\n  EVENT_VOLUME_CHANGED: 'mopidy::event:volumeChanged'\n}\n","export default {\n  AUTHENTICATE_USER: 'auth::authenticateUser',\n  AUTHENTICATION_ERROR: 'auth::authenticationError'\n}\n","export default {\n  ADD_CURRENT_TRACK: 'actionAddCurrentTrack',\n  ADD_TRACKS: 'actionAddTracks',\n  CONNECT: 'actionConnect',\n  CONNECTING: 'actionConnecting',\n  CONNECTED: 'actionConnected',\n  DISCONNECT: 'actionDisconnect',\n  DISCONNECTED: 'actionDisconnected',\n  DROP_TYPES: ['__NATIVE_URL__'],\n  NEW_IMAGE: 'actionNewImage',\n  RESOLVE_IMAGE: 'actionResolveImage',\n  SEND: 'actionSend',\n  STORE_TOKEN: 'actionStoreToken',\n  STORE_USERNAME: 'actionStoreUserName',\n  STORE_USER: 'actionStoreUser',\n  TOGGLE_SETTINGS: 'actionToggleSettings',\n  UPDATE_VOLUME: 'actionUpdateVolume',\n  UPDATE_PLAYBACK_STATE: 'actionPlaybackState',\n  UPDATE_PROGRESS_TIMER: 'actionUpdateProgressTimer',\n  UPDATE_RADIO_STREAM_STATE: 'updateRadioStreamState'\n}\n","import { notify } from 'react-notify-toast'\n\nconst Notify = (message) => notify.show(message, 'success', 3000, {})\n\nexport default Notify\n","import MopidyApi from '../constants/mopidy-api'\nimport AuthAPI from '../constants/auth-api'\nimport Types from '../constants'\nimport notify from '../utils/notify'\nimport { transformUrl } from '../utils/spotify'\n\nexport const authenticate = username => {\n  return {\n    type: Types.SEND,\n    key: AuthAPI.AUTHENTICATE_USER,\n    params: { 'username': username }\n  }\n}\n\nexport const updateToken = token => {\n  return {\n    type: Types.STORE_TOKEN,\n    token\n  }\n}\n\nexport const updateUsername = username => {\n  return {\n    type: Types.STORE_USERNAME,\n    username\n  }\n}\n\nexport const storeUser = user => {\n  return {\n    type: Types.STORE_USER,\n    user\n  }\n}\n\nexport const addNewTrack = url => {\n  let uri = transformUrl(url)\n\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_ADD_TRACK,\n    params: { 'uri': uri }\n  }\n}\n\nexport const addCurrentTrack = track => {\n  return {\n    type: Types.ADD_CURRENT_TRACK,\n    track\n  }\n}\n\nexport const addTrackList = list => {\n  return {\n    type: Types.ADD_TRACKS,\n    list\n  }\n}\n\nexport const removeFromTracklist = uri => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_REMOVE_TRACK,\n    params: { 'uri': [uri] }\n  }\n}\n\nexport const updateProgressTimer = (position, duration) => {\n  if (duration === Infinity) { duration = 0 }\n\n  return {\n    type: Types.UPDATE_PROGRESS_TIMER,\n    position,\n    duration\n  }\n}\n\nexport const wsConnect = () => {\n  return {\n    type: Types.CONNECT\n  }\n}\n\nexport const wsConnecting = () => {\n  return {\n    type: Types.CONNECTING\n  }\n}\n\nexport const wsConnected = () => {\n  return {\n    type: Types.CONNECTED\n  }\n}\n\nexport const wsDisconnect = () => {\n  return {\n    type: Types.DISCONNECT\n  }\n}\n\nexport const wsDisconnected = () => {\n  return {\n    type: Types.DISCONNECTED\n  }\n}\n\nexport const getCurrentTrack = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_CURRENT_TRACK\n  }\n}\n\nexport const getTimePosition = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_TIME_POSITION\n  }\n}\n\nexport const getState = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_PLAYBACK_STATE\n  }\n}\n\nexport const getImage = (uri) => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.LIBRARY_GET_IMAGES,\n    params: [[uri]],\n    uri: uri\n  }\n}\n\nexport const newImage = (uri) => {\n  return {\n    type: Types.NEW_IMAGE,\n    uri\n  }\n}\n\nexport const resolveImage = (data) => {\n  return {\n    type: Types.RESOLVE_IMAGE,\n    data\n  }\n}\n\nexport const getTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_GET_TRACKS\n  }\n}\n\nexport const clearTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_CLEAR\n  }\n}\n\nexport const startPlaying = () => {\n  notify(`Jukebox Playing`)\n\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PLAY\n  }\n}\n\nexport const pausePlaying = () => {\n  notify(`Jukebox Paused`)\n\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PAUSE\n  }\n}\n\nexport const nextPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_NEXT\n  }\n}\n\nexport const previousPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_BACK\n  }\n}\n\nexport const getVolume = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.GET_VOLUME\n  }\n}\n\nexport const updateVolume = (volume) => {\n  return {\n    type: Types.UPDATE_VOLUME,\n    volume\n  }\n}\n\nexport const updatePlaybackState = (state) => {\n  return {\n    type: Types.UPDATE_PLAYBACK_STATE,\n    state\n  }\n}\n\nexport const setVolume = (volume) => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.SET_VOLUME,\n    params: [Number(volume)]\n  }\n}\n\nexport const toggleStreamingState = () => {\n  return {\n    type: Types.UPDATE_RADIO_STREAM_STATE\n  }\n}\n\nexport const toggleSettings = () => {\n  return {\n    type: Types.TOGGLE_SETTINGS\n  }\n}\n","export const findImageInCache = (uri, cache) => {\n  const index = cache.findIndex(asset => asset.ref === uri)\n  if (cache[index]) { return cache[index].uri }\n  return null\n}\n","import ProgressTimer from 'media-progress-timer'\n\nexport const millisToMinutesAndSeconds = (millis) => {\n  var minutes = Math.floor(millis / 60000)\n  var seconds = ((millis % 60000) / 1000).toFixed(0)\n  return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n}\n\nexport const millisToSeconds = (millis) => {\n  return millis * 0.001\n}\n\nexport const timerToPercentage = timer => {\n  if (timer.duration === 0) { return 0 }\n  const position = millisToSeconds(timer.position)\n  const duration = millisToSeconds(timer.duration)\n\n  return Math.round((position / duration) * 100)\n}\n\nexport const trackProgressTimer = (store, actions) => {\n  return ProgressTimer({\n    callback: (position, duration) => {\n      store.dispatch(actions.updateProgressTimer(position, duration))\n    },\n    fallbackTargetFrameRate: 1,\n    disableRequestAnimationFrame: true\n  })\n}\n","const Payload = {\n  encode: (jwt, key, data) => {\n    return {\n      jwt,\n      key,\n      data\n    }\n  },\n\n  decode: payload => {\n    return JSON.parse(payload)\n  },\n\n  encodeToJson: (jwt, key, data) => {\n    return JSON.stringify(Payload.encode(jwt, key, data))\n  }\n}\n\nexport default Payload\n","import * as actions from '../../actions'\n\nconst State = {\n  loadInitial: (store) => {\n    [\n      'getCurrentTrack',\n      'getTimePosition',\n      'getState',\n      'getTrackList',\n      'getVolume'\n    ].forEach(action => {\n      store.dispatch(actions[action]())\n    })\n  }\n}\n\nexport default State\n","import * as actions from '../../actions'\nimport AuthApi from '../../constants/auth-api'\nimport MopidyApi from '../../constants/mopidy-api'\nimport Payload from '../../utils/payload'\nimport State from '../../utils/state'\n\nconst updatePlaybackState = (store, state) => {\n  store.dispatch(actions.updatePlaybackState(state))\n}\n\nconst playBackChanged = (store, state, progress) => {\n  switch (state) {\n    case MopidyApi.PAUSED:\n    case MopidyApi.STOPPED:\n      updatePlaybackState(store, state)\n      progress.stop()\n      break\n    case MopidyApi.PLAYING:\n      updatePlaybackState(store, state)\n      progress.start()\n      break\n    default:\n      break\n  }\n}\n\nconst imageUriChooser = (track) => {\n  if (track.composer) return track.composer.uri\n  return track.album.uri\n}\n\nconst addCurrentTrack = (track, store, progress) => {\n  if (!track) return\n  store.dispatch(actions.addCurrentTrack(track))\n  progress.set(0, track.length).start()\n  store.dispatch(actions.getImage(imageUriChooser(track)))\n}\n\nconst addTrackList = (tracklist, store) => {\n  store.dispatch(actions.addTrackList(tracklist))\n  tracklist.forEach(item => {\n    store.dispatch(actions.getImage(imageUriChooser(item.track)))\n  })\n}\n\nconst onMessageHandler = (store, payload, progressTimer) => {\n  const { key, data } = Payload.decode(payload)\n\n  switch (key) {\n    case AuthApi.AUTHENTICATE_USER:\n      store.dispatch(actions.updateToken(data.token))\n      store.dispatch(actions.storeUser(data.user))\n      if (data.token) State.loadInitial(store)\n      break\n    case AuthApi.AUTHENTICATION_ERROR:\n      console.log(`AUTHENTICATION_ERROR: ${data}`)\n      break\n    case MopidyApi.PLAYBACK_GET_CURRENT_TRACK:\n    case MopidyApi.EVENT_TRACK_PLAYBACK_STARTED:\n      addCurrentTrack(data.track, store, progressTimer)\n      break\n    case MopidyApi.EVENT_PLAYBACK_STATE_CHANGED:\n    case MopidyApi.PLAYBACK_GET_PLAYBACK_STATE:\n      playBackChanged(store, data, progressTimer)\n      break\n    case MopidyApi.EVENT_TRACKLIST_CHANGED:\n      store.dispatch(actions.getTrackList())\n      break\n    case MopidyApi.TRACKLIST_GET_TRACKS:\n      addTrackList(data, store)\n      break\n    case MopidyApi.GET_VOLUME:\n      store.dispatch(actions.updateVolume(data))\n      break\n    case MopidyApi.EVENT_VOLUME_CHANGED:\n      store.dispatch(actions.updateVolume(data))\n      break\n    case MopidyApi.LIBRARY_GET_IMAGES:\n      store.dispatch(actions.resolveImage(data))\n      break\n    case MopidyApi.PLAYBACK_GET_TIME_POSITION:\n      progressTimer.set(data)\n      break\n    default:\n      console.log(`Unknown message: ${key} body: ${data}`)\n      break\n  }\n}\n\nexport default onMessageHandler\n","import io from 'socket.io-client'\nimport * as actions from '../../actions'\nimport MopidyApi from '../../constants/mopidy-api'\nimport Constants from '../../constants'\nimport { findImageInCache } from '../../utils/images'\nimport { trackProgressTimer } from '../../utils/time'\nimport onMessageHandler from '../../utils/on-message-handler'\nimport Payload from '../../utils/payload'\nimport State from '../../utils/state'\n\nconst JukeboxMiddleware = (() => {\n  let url = `http://${process.env.REACT_APP_WS_URL}:${process.env.REACT_APP_WS_PORT}`\n  let socket = null\n  let progressTimer = null\n\n  const onOpen = (store, _token) => _evt => {\n    progressTimer = trackProgressTimer(store, actions)\n    store.dispatch(actions.wsConnected())\n    State.loadInitial(store)\n  }\n\n  const onClose = (store) => _evt => {\n    store.dispatch(actions.wsDisconnect())\n  }\n\n  const onMessage = (store) => data => {\n    onMessageHandler(store, data, progressTimer)\n  }\n\n  const onConnect = (store) => {\n    if (socket != null) { socket.close() }\n    store.dispatch(actions.wsConnecting())\n\n    socket = io(url, {\n      transports: ['websocket']\n    })\n    socket.on('message', onMessage(store))\n    socket.on('connect', onOpen(store))\n    socket.on('disconnect', onClose(store))\n  }\n\n  const onDisconnect = (store) => {\n    if (progressTimer) { progressTimer.reset() }\n    store.dispatch(actions.wsDisconnected())\n  }\n\n  const getJWT = (store) => {\n    return store.getState().settings.token\n  }\n\n  return store => next => action => {\n    switch (action.type) {\n      case Constants.CONNECT:\n        onConnect(store)\n        break\n      case Constants.DISCONNECT:\n        onDisconnect(store)\n        break\n      case Constants.SEND:\n        if (action.key === MopidyApi.LIBRARY_GET_IMAGES) {\n          if (!action.uri) { break }\n          if (findImageInCache(action.uri, store.getState().assets)) { break }\n          store.dispatch(actions.newImage(action.uri))\n        }\n\n        socket.emit('message', Payload.encodeToJson(getJWT(store), action.key, action.params))\n        break\n      default:\n        return next(action)\n    }\n  }\n})()\n\nexport default JukeboxMiddleware\n","import Types from '../../constants'\n\nconst track = (state = null, action) => {\n  switch (action.type) {\n    case Types.ADD_CURRENT_TRACK:\n      return action.track\n    default:\n      return state\n  }\n}\n\nexport default track\n","import notify from '../../utils/notify'\nimport Types from '../../constants'\n\nconst tracklistDiff = (newList, oldList) => {\n  const n = new Set(newList)\n  const o = new Set(oldList.map(t => t.uri))\n  return new Set([...n].filter(t => !o.has(t.uri)))\n}\n\nconst notification = (oldT, newT) => {\n  if (oldT.length === 0) return\n  const difference = tracklistDiff(newT, oldT)\n  if (difference.size === 0) return\n\n  for (let track of difference) {\n    notify(`Added ${track.name} by ${track.artist.name}`)\n  }\n}\n\nconst tracklist = (state = [], action) => {\n  switch (action.type) {\n    case Types.ADD_TRACKS:\n      notification(state, action.list.map(item => item.track))\n      return action.list.map(item => item.track)\n    default:\n      return state\n  }\n}\n\nexport default tracklist\n","import Types from '../../constants'\n\nconst MAX_IMAGES_IN_CACHE = 200\n\nconst assets = (state = [], action) => {\n  switch (action.type) {\n    case Types.NEW_IMAGE:\n      return (state.find(a => a.ref === action.uri))\n        ? state\n        : [ ...state, { ref: action.uri } ]\n    case Types.RESOLVE_IMAGE:\n      return state.map(asset =>\n        (action.data[asset.ref] && action.data[asset.ref][1])\n          ? { ...asset, uri: action.data[asset.ref][1].uri }\n          : asset\n      ).slice(0, MAX_IMAGES_IN_CACHE)\n    default:\n      return state\n  }\n}\n\nexport default assets\n","import Types from '../../constants'\n\nconst initalProgressState = {\n  position: 0,\n  duration: 0\n}\n\nconst timer = (state = initalProgressState, action) => {\n  switch (action.type) {\n    case Types.UPDATE_PROGRESS_TIMER:\n      return {\n        position: action.position,\n        duration: action.duration\n      }\n    default:\n      return state\n  }\n}\n\nexport default timer\n","import MopidyApi from '../../constants/mopidy-api'\nimport Types from '../../constants'\n\nconst initalState = {\n  online: false,\n  volume: 0,\n  playbackState: MopidyApi.PAUSED,\n  radioStreamPlaying: false,\n  radioStreamEnabled: false\n}\n\nconst jukebox = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.CONNECTED:\n      return Object.assign({}, state, {\n        online: true\n      })\n    case Types.DISCONNECTED:\n      return Object.assign({}, state, {\n        online: false\n      })\n    case Types.UPDATE_VOLUME:\n      return Object.assign({}, state, {\n        volume: action.volume\n      })\n    case Types.UPDATE_PLAYBACK_STATE:\n      return Object.assign({}, state, {\n        playbackState: action.state\n      })\n    case Types.UPDATE_RADIO_STREAM_STATE:\n      return Object.assign({}, state, {\n        radioStreamPlaying: !state.radioStreamPlaying\n      })\n    default:\n      return state\n  }\n}\n\nexport default jukebox\n","import crypto from 'crypto'\nimport Types from '../../constants'\n\nconst initalState = {\n  token: null,\n  username: '',\n  user: {},\n  open: false\n}\n\nconst md5Email = (user) => {\n  if (user.email) {\n    user.emailHash = crypto\n      .createHash('md5')\n      .update(user.email.trim())\n      .digest('hex')\n  }\n\n  return user\n}\n\nconst settings = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.STORE_TOKEN:\n      return Object.assign({}, state, {\n        token: action.token\n      })\n    case Types.STORE_USERNAME:\n      return Object.assign({}, state, {\n        username: action.username\n      })\n    case Types.STORE_USER:\n      const user = md5Email(action.user)\n      return Object.assign({}, state, {\n        username: user.username,\n        user: user\n      })\n    case Types.TOGGLE_SETTINGS:\n      return Object.assign({}, state, {\n        open: !state.open\n      })\n    default:\n      return state\n  }\n}\n\nexport default settings\n","import { combineReducers } from 'redux'\nimport track from './track'\nimport tracklist from './tracklist'\nimport assets from './assets'\nimport timer from './timer'\nimport jukebox from './jukebox'\nimport settings from './settings'\n\nconst jukeboxApp = combineReducers({\n  track,\n  tracklist,\n  assets,\n  timer,\n  jukebox,\n  settings\n})\n\nexport default jukeboxApp\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst VOLUME_INC = 1\nconst VOLUME_MAX = 100\nconst VOLUME_MIN = 0\n\nconst volumeUp = (volume, cb) => {\n  volume += VOLUME_INC\n  if (volume <= VOLUME_MAX) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst volumeDown = (volume, cb) => {\n  volume -= VOLUME_INC\n  if (volume >= VOLUME_MIN) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst VolumeButtons = ({ disabled, volume, onVolumeChange }) => (\n  <Button.Group floated='right'>\n    <Button\n      className='jb-volume-down'\n      onClick={volumeDown(volume, onVolumeChange)}\n      disabled={disabled}\n    >\n      <Icon name='volume down' />\n    </Button>\n    <Button.Or text={volume} />\n    <Button\n      className='jb-volume-up'\n      onClick={volumeUp(volume, onVolumeChange)}\n      disabled={disabled}\n    >\n      <Icon name='volume up' />\n    </Button>\n  </Button.Group>\n)\n\nVolumeButtons.propTypes = {\n  disabled: PropTypes.bool,\n  volume: PropTypes.number,\n  onVolumeChange: PropTypes.func.isRequired\n}\n\nexport default VolumeButtons\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Confirm, Label } from 'semantic-ui-react'\n\nclass ClearPlaylist extends Component {\n  state = { open: false }\n\n  clearButton = () => {\n    return (\n      <Label\n        horizontal\n        size='mini'\n        as='a'\n        color='red'\n        onClick={this.show}\n        className='jb-clear-button'\n      >CLEAR</Label>\n    )\n  }\n\n  show = () => {\n    this.setState({ open: true })\n  }\n\n  handleConfirm = (ev) => {\n    this.setState({ open: false })\n    this.props.onClear(ev)\n  }\n\n  handleCancel = () => {\n    this.setState({ open: false })\n  }\n\n  render () {\n    if (this.props.disabled) { return null }\n\n    return (\n      <span>\n        {this.clearButton()}\n        <Confirm\n          content='Are you sure you want to nuke the playlist?'\n          cancelButton='No thanks'\n          confirmButton='Do it!'\n          open={this.state.open}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n        />\n      </span>\n    )\n  }\n}\n\nClearPlaylist.propTypes = {\n  disabled: PropTypes.bool,\n  onClear: PropTypes.func.isRequired\n}\n\nexport default ClearPlaylist\n","import { createSelector } from 'reselect'\nimport { findImageInCache } from '../utils/images'\n\nconst getCurrentTrack = (state) => state.track\nconst getTrackList = (state) => state.tracklist\nconst getAssets = (state) => state.assets\n\nexport const getCurrentTrackImageInCache = createSelector(\n  [getCurrentTrack, getAssets],\n  (track, cache) => {\n    if (!track) { return null }\n    return findImageInCache(track.album.uri, cache)\n  }\n)\n\nexport const getTracklistImagesInCache = createSelector(\n  [getTrackList, getAssets],\n  (tracklist, cache) => {\n    const images = {}\n    tracklist.forEach(track => {\n      images[track.album.uri] = findImageInCache(track.album.uri, cache)\n    })\n    return images\n  }\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Icon, Image } from 'semantic-ui-react'\nimport { Line } from 'rc-progress'\nimport defaultImage from './default-artwork.png'\nimport { millisToMinutesAndSeconds } from '../../utils/time'\nimport './index.css'\n\nconst albumDescription = album => {\n  if (!album) return null\n  const year = album.year ? ` (${album.year})` : null\n  return <Card.Description>{album.name}{year}</Card.Description>\n}\n\nconst composerDescription = composer => {\n  if (!composer) return null\n  return <Card.Description>{composer.name}</Card.Description>\n}\n\nconst albumArt = (image) => {\n  if (!image) image = defaultImage\n  return <Image src={image} />\n}\n\nconst serviceIcon = (uri) => {\n  const lookup = {\n    spotify: 'green'\n  }\n  const key = uri.split(':')[0]\n  if (!lookup[key]) return null\n  return <Icon name={key} color={lookup[key]} />\n}\n\nconst noTrack = () => (\n  <Card>\n    { albumArt(null) }\n    <Card.Content>\n      <Card.Header>Nothing playing</Card.Header>\n      <Card.Description>Drag some music here or press play.</Card.Description>\n    </Card.Content>\n  </Card>\n)\n\nconst CurrentTrack = ({ track, image, progress }) => {\n  if (!track) { return noTrack() }\n\n  return (\n    <Card>\n      { albumArt(image) }\n      <Card.Content>\n        <div className='progress-container'>\n          <span className='progress-text'>{progress} &#37;</span>\n          <Line percent={progress} />\n        </div>\n        <Card.Header>{track.name}</Card.Header>\n        <Card.Meta>({millisToMinutesAndSeconds(track.length)}) {track.artist.name}</Card.Meta>\n        { albumDescription(track.album) }\n        { composerDescription(track.composer) }\n      </Card.Content>\n      <Card.Content extra>\n        {serviceIcon(track.uri)}\n      </Card.Content>\n    </Card>\n  )\n}\n\nCurrentTrack.propTypes = {\n  track: PropTypes.object,\n  image: PropTypes.string,\n  progress: PropTypes.number\n}\n\nexport default CurrentTrack\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { timerToPercentage } from '../../utils/time'\nimport { getCurrentTrackImageInCache } from '../../selectors'\nimport CurrentTrack from '../../components/current-track'\n\nexport const CurrentTrackContainer = ({ track, image, progress }) => (\n  <CurrentTrack\n    track={track}\n    image={image}\n    progress={progress}\n  />\n)\n\nconst mapStateToProps = state => {\n  return {\n    track: state.track,\n    image: getCurrentTrackImageInCache(state),\n    progress: timerToPercentage(state.timer)\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(CurrentTrackContainer)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { authenticate, updateUsername, toggleSettings } from '../../actions'\nimport { Modal, Form, Button, Image, Progress } from 'semantic-ui-react'\n\nconst toggleModal = (dispatch) => {\n  return () => {\n    dispatch(toggleSettings())\n  }\n}\n\nconst handleUserChange = (dispatch) => {\n  return (_e, { value }) => {\n    dispatch(updateUsername(value))\n  }\n}\n\nconst authenticateUser = (dispatch, username) => {\n  return () => {\n    if (username) dispatch(authenticate(username))\n  }\n}\n\nconst authActions = (dispatch, settings) => {\n  let defaults = {\n    icon: 'checkmark',\n    labelPosition: 'right',\n    content: 'Click to validate',\n    onClick: authenticateUser(dispatch, settings.username),\n    className: 'jb-authenticate-button'\n  }\n\n  if (isAuthorized(settings)) {\n    defaults = Object.assign(defaults, {\n      content: 'Authenticated'\n    })\n  }\n\n  return defaults\n}\n\nconst isAuthorized = (settings) => {\n  return settings.token\n}\n\nconst progress = (settings) => {\n  let options = { percent: 100 }\n  const username = settings.user ? settings.user.username : ''\n  const typeStr = isAuthorized(settings) ? 'success' : 'error'\n  const typeTxt = isAuthorized(settings) ? `${username} is now logged in` : 'Unknown User!'\n  options[typeStr] = true\n\n  return (\n    <Progress {...options} >\n      {typeTxt}\n    </Progress>\n  )\n}\n\nconst modal = (dispatch, settings) => (\n  <Modal\n    closeIcon\n    size='small'\n    dimmer='blurring'\n    open={settings.open}\n    onClose={toggleModal(dispatch)}\n  >\n    <Modal.Header>Settings</Modal.Header>\n    <Modal.Content>\n      <Modal.Description>\n        <Form>\n          <Form.Input\n            label='Enter your USERNAME below'\n            size='massive'\n            icon='user'\n            iconPosition='left'\n            placeholder='example: user123'\n            onChange={handleUserChange(dispatch)}\n            value={settings.username || ''}\n            action={authActions(dispatch, settings)}\n          />\n          {progress(settings)}\n        </Form>\n      </Modal.Description>\n    </Modal.Content>\n  </Modal>\n)\n\nconst accountLink = (dispatch, settings) => {\n  if (settings.user && settings.user.emailHash) {\n    return (\n      <Image\n        rounded\n        size='mini'\n        floated='right'\n        className='jb-settings-toggle'\n        onClick={toggleModal(dispatch)}\n        title={settings.user.fullname}\n        src={`https://www.gravatar.com/avatar/${settings.user.emailHash}`}\n      />\n    )\n  }\n\n  return (\n    <Button\n      icon='user'\n      floated='right'\n      onClick={toggleModal(dispatch)}\n      className='jb-settings-toggle'\n    />\n  )\n}\n\nexport const Settings = ({ dispatch, settings }) => (\n  <React.Fragment>\n    {accountLink(dispatch, settings)}\n    {modal(dispatch, settings)}\n  </React.Fragment>\n)\n\nconst mapStateToProps = state => {\n  return {\n    settings: state.settings\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(Settings)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { List, Image } from 'semantic-ui-react'\nimport dateformat from 'dateformat'\nimport { millisToMinutesAndSeconds } from '../../utils/time'\nimport defaultImage from './../current-track/default-artwork.png'\nimport './index.css'\n\nconst isCurrentTrack = (currentTrack, track) => {\n  if (!currentTrack) return false\n  return currentTrack.uri === track.uri\n}\n\nconst currentImage = (image) => (\n  <Image\n    className='current-image'\n    size='tiny'\n    src={image}\n    inline\n  />\n)\n\nconst revealImage = (image, uri, onRemoveTrack) => (\n  <Image\n    className='remove-image'\n    size='mini'\n    src={image}\n    inline\n    onClick={removeTrack(uri, onRemoveTrack)}\n  />\n)\n\nconst removeTrack = (uri, cb) => {\n  return () => cb(uri)\n}\n\nconst imageChooser = (disabled, track, images, isCurrent, onRemoveTrack) => {\n  let image\n  if (images && track.album) image = images[track.album.uri]\n  if (images && track.composer) image = images[track.composer.uri]\n  if (!image) image = defaultImage\n  if (disabled) { return currentImage(image) }\n\n  return isCurrent ? currentImage(image) : revealImage(image, track.uri, onRemoveTrack)\n}\n\nconst trackStartTime = (time, isCurrent) => {\n  if (!time || isCurrent) return null\n  return <List.Header as='h5'>{dateformat(new Date(time), 'h:MM')}</List.Header>\n}\n\nconst trackHeading = (track) => (\n  <List.Header as='h4'>{track.name}</List.Header>\n)\n\nconst trackDescription = (track) => (\n  <List.Description>\n    {track.artist.name} <small>({millisToMinutesAndSeconds(track.length)})</small>\n  </List.Description>\n)\n\nconst listItems = (disabled, tracks, images, currentTrack, onRemoveTrack) => {\n  let time\n\n  return tracks.map((track, index) => {\n    const isCurrent = isCurrentTrack(currentTrack, track)\n    if (time) time += track.length\n    if (isCurrent) time = Date.now()\n\n    return (\n      <List.Item\n        className={classnames({ 'current-track': isCurrent })}\n        key={`${index}-${track.uri}`}\n      >\n        { imageChooser(disabled, track, images, isCurrent, onRemoveTrack) }\n        <List.Content\n          className={classnames({ 'track-info': !time })}\n        >\n          {trackStartTime(time, isCurrent)}\n          {trackHeading(track)}\n          {trackDescription(track)}\n        </List.Content>\n      </List.Item>\n    )\n  })\n}\n\nconst Tracklist = ({ disabled, tracks, images, currentTrack, onRemoveTrack }) => {\n  if (!tracks) { return null }\n\n  return (\n    <List relaxed>\n      {listItems(disabled, tracks, images, currentTrack, onRemoveTrack)}\n    </List>\n  )\n}\n\nTracklist.propTypes = {\n  disabled: PropTypes.bool,\n  tracks: PropTypes.array,\n  images: PropTypes.object,\n  currentTrack: PropTypes.object,\n  onRemoveTrack: PropTypes.func.isRequired\n}\n\nexport default Tracklist\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst previousButton = (cb, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    className='jb-previous-button'\n    disabled={disabled}\n  >\n    <Button.Content hidden>Prev</Button.Content>\n    <Button.Content visible>\n      <Icon name='step backward' />\n    </Button.Content>\n  </Button>\n)\n\nconst nextButton = (cb, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    className='jb-next-button'\n    disabled={disabled}\n  >\n    <Button.Content hidden>Next</Button.Content>\n    <Button.Content visible>\n      <Icon name='step forward' />\n    </Button.Content>\n  </Button>\n)\n\nconst SkipButtons = ({ disabled, onPrevious, onNext }) => (\n  <span>\n    {previousButton(onPrevious, disabled)}\n    {nextButton(onNext, disabled)}\n  </span>\n)\n\nSkipButtons.propTypes = {\n  disabled: PropTypes.bool,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default SkipButtons\n","import React from 'react'\nimport SkipButtons from '../../components/skip-buttons'\nimport MopidyApi from '../../constants/mopidy-api'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst radioButton = (cb, disabled, playbackState, radioPlaying, radioEnabled) => {\n  if (!radioEnabled) { return null }\n\n  return (\n    <Button\n      disabled={disabled || !radioPlaying}\n      color={playbackState ? 'green' : null}\n      onClick={cb}\n      active={playbackState === true}\n      className='jb-radio-button'\n    >\n      <Button.Content hidden>\n        RADIO {playbackState ? <Icon loading name='certificate' /> : null}\n      </Button.Content>\n    </Button>\n  )\n}\n\nconst playButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.PLAYING || disabled)}\n    active={(playbackState === MopidyApi.PLAYING)}\n    className='jb-play-button'\n  >\n    <Button.Content hidden>Play</Button.Content>\n    <Button.Content visible>\n      <Icon name='play' />\n    </Button.Content>\n  </Button>\n)\n\nconst pauseButton = (cb, playbackState, disabled) => (\n  <Button\n    onClick={cb}\n    animated='vertical'\n    disabled={(playbackState === MopidyApi.PAUSED || disabled)}\n    active={(playbackState === MopidyApi.PAUSED)}\n    className='jb-pause-button'\n  >\n    <Button.Content hidden>Pause</Button.Content>\n    <Button.Content visible>\n      <Icon name='pause' />\n    </Button.Content>\n  </Button>\n)\n\nconst Controls = ({ radioEnabled, radioPlaying, disabled, playbackState, onPlay, onPause, onPrevious, onNext, onStreaming }) => {\n  return (\n    <span>\n      {radioButton(onStreaming, disabled, playbackState, radioPlaying, radioEnabled)}\n      <SkipButtons\n        disabled={disabled}\n        onPrevious={onPrevious}\n        onNext={onNext}\n      />\n      {playButton(onPlay, playbackState, disabled)}\n      {pauseButton(onPause, playbackState, disabled)}\n    </span>\n  )\n}\n\nControls.propTypes = {\n  radioEnabled: PropTypes.bool,\n  radioPlaying: PropTypes.bool,\n  disabled: PropTypes.bool,\n  playbackState: PropTypes.string,\n  onPlay: PropTypes.func.isRequired,\n  onPause: PropTypes.func.isRequired,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default Controls\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DropTarget } from 'react-dnd'\n\nconst boxTarget = {\n  drop (props, monitor) {\n    if (props.onDrop) {\n      props.onDrop(props, monitor)\n    }\n  }\n}\n\nconst boxHandler = (connect, monitor) => {\n  return {\n    connectDropTarget: connect.dropTarget()\n  }\n}\n\nclass UrlDropArea extends Component {\n  render () {\n    const { connectDropTarget } = this.props\n\n    return connectDropTarget(\n      <div>\n        { this.props.children }\n      </div>\n    )\n  }\n}\n\nUrlDropArea.propTypes = {\n  connectDropTarget: PropTypes.func.isRequired,\n  accepts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onDrop: PropTypes.func\n}\n\nexport default DropTarget(props => props.accepts, boxTarget, boxHandler)(UrlDropArea)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DragDropContextProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport Constants from '../../constants'\nimport UrlDropArea from '../url-drop-area'\n\nconst DragInTrack = ({ disabled, onDrop, children }) => {\n  if (disabled) { return children }\n\n  return (\n    <DragDropContextProvider backend={HTML5Backend}>\n      <UrlDropArea accepts={Constants.DROP_TYPES} onDrop={onDrop}>\n        { children }\n      </UrlDropArea>\n    </DragDropContextProvider>\n  )\n}\n\nDragInTrack.propTypes = {\n  disabled: PropTypes.bool,\n  onDrop: PropTypes.func.isRequired\n}\n\nexport default DragInTrack\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReactAudioPlayer from 'react-audio-player'\n\nconst RadioStream = ({ active }) => {\n  if (!active) { return null }\n\n  return <ReactAudioPlayer\n    src='http://icecast.local:8000/radio-kyan.mp3'\n    autoPlay\n    controls\n  />\n}\n\nRadioStream.propTypes = {\n  active: PropTypes.bool\n}\n\nexport default RadioStream\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { DragDropContext } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport { Dimmer, Divider, Grid, Header } from 'semantic-ui-react'\nimport VolumeButtons from '../../components/volume-buttons'\nimport ClearPlaylist from '../../components/clear-playlist'\nimport * as actions from '../../actions'\nimport CurrentTrackContainer from '../current-track-container'\nimport Settings from '../settings'\nimport TrackList from '../../components/tracklist'\nimport { getTracklistImagesInCache } from '../../selectors'\nimport Controls from '../../components/controls'\nimport DragInTrack from '../../components/drag-in-track'\nimport RadioStream from '../../components/radio-stream'\n\nexport class Dashboard extends Component {\n  constructor (props) {\n    super(props)\n    this.dispatch = this.props.dispatch\n  }\n\n  componentDidMount () {\n    this.fireDispatch('wsConnect')()\n  }\n\n  componentWillUnmount () {\n    this.fireDispatch('wsDisconnect')()\n  }\n\n  fireDispatch (key) {\n    return (evt) => {\n      this.dispatch(actions[key](evt))\n    }\n  }\n\n  handleURLDrop = (_item, monitor) => {\n    if (monitor) {\n      this.fireDispatch('addNewTrack')(monitor.getItem().urls[0])\n    }\n  }\n\n  radioStream = () => {\n    if (!this.props.jukebox.radioStreamEnabled) { return null }\n    return <RadioStream active={this.props.jukebox.radioStreamPlaying} />\n  }\n\n  render () {\n    return (\n      <Dimmer.Dimmable\n        blurring\n        className='jukebox-dashboard'\n        dimmed={!this.props.jukebox.online}\n      >\n        <Settings />\n        <VolumeButtons\n          disabled={!this.props.settings.token}\n          volume={this.props.jukebox.volume}\n          onVolumeChange={this.fireDispatch('setVolume')}\n        />\n        <Controls\n          radioEnabled={this.props.jukebox.radioStreamEnabled}\n          radioPlaying={this.props.jukebox.radioStreamPlaying}\n          disabled={!this.props.settings.token}\n          playbackState={this.props.jukebox.playbackState}\n          onPlay={this.fireDispatch('startPlaying')}\n          onPause={this.fireDispatch('pausePlaying')}\n          onNext={this.fireDispatch('nextPlaying')}\n          onPrevious={this.fireDispatch('previousPlaying')}\n          onStreaming={this.fireDispatch('toggleStreamingState')}\n        />\n        <Divider />\n        <Grid>\n          <Grid.Column width={6}>\n            <DragInTrack\n              disabled={!this.props.settings.token}\n              onDrop={this.handleURLDrop}\n            >\n              <Header size='small'>Current Track</Header>\n              <CurrentTrackContainer />\n            </DragInTrack>\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Header size='small'>\n              Playlist <ClearPlaylist\n                disabled={!this.props.settings.token}\n                onClear={this.fireDispatch('clearTrackList')}\n              />\n            </Header>\n            <TrackList\n              disabled={!this.props.settings.token}\n              images={this.props.tracklistImages}\n              tracks={this.props.tracklist}\n              currentTrack={this.props.currentTrack}\n              onRemoveTrack={this.fireDispatch('removeFromTracklist')}\n            />\n          </Grid.Column>\n        </Grid>\n        {this.radioStream()}\n      </Dimmer.Dimmable>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    settings: state.settings,\n    jukebox: state.jukebox,\n    currentTrack: state.track,\n    tracklist: state.tracklist,\n    tracklistImages: getTracklistImagesInCache(state)\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(DragDropContext(HTML5Backend)(Dashboard))\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport Notifications from 'react-notify-toast'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport ErrorBoundary from './components/error-boundary'\nimport jukeboxMiddleware from './containers/jukebox-middleware'\nimport jukeboxApp from './reducers'\nimport { Container } from 'semantic-ui-react'\nimport Dashboard from './containers/dashboard'\n\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  whitelist: ['settings']\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst persistedReducer = persistReducer(persistConfig, jukeboxApp)\nconst store = createStore(persistedReducer, composeEnhancers(applyMiddleware(jukeboxMiddleware)))\nconst persistor = persistStore(store)\n\nconst App = () => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Container fluid>\n        <ErrorBoundary>\n          <Notifications />\n          <Dashboard />\n        </ErrorBoundary>\n      </Container>\n    </PersistGate>\n  </Provider>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}